(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    171532,       3530]
NotebookOptionsPosition[    167155,       3384]
NotebookOutlinePosition[    167533,       3400]
CellTagsIndexPosition[    167490,       3397]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Uninstall", "@", "link"}]], "Input",
 CellChangeTimes->{{3.6760360840318947`*^9, 3.6760360865652456`*^9}}],

Cell[BoxData["\<\"\\\"J:\\\\Masterarbeit\\\\Implementation\\\\InfiniTAM5\\\\\
x64\\\\Debug\\\\InfiniTAM5.exe\\\"\"\>"], "Output",
 CellChangeTimes->{
  3.676036086955344*^9, 3.6760364620990915`*^9, {3.676036537464203*^9, 
   3.676036548614813*^9}, 3.676036629492303*^9, 3.6760382085643177`*^9, 
   3.6760383295101557`*^9, 3.676038976189767*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "s", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "InfiniTAM`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Quiet", "@", 
   RowBox[{"Uninstall", "@", "link"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exe", "=", 
   RowBox[{"FileNameJoin", "@", 
    RowBox[{"{", "\"\<x64\\\\Debug\\\\InfiniTAM5.exe\>\"", "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"link", "=", 
   RowBox[{"Install", "@", "exe"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"LinkPatterns", "@", "link"}], "\[IndentingNewLine]", 
 RowBox[{"VerificationTest", "[", 
  RowBox[{
   RowBox[{"getMatrix", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.`", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "1.`"}], "}"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6760353990887055`*^9, 3.676035465691886*^9}, {
  3.676036515588835*^9, 3.6760365241749735`*^9}, {3.6760366998487225`*^9, 
  3.676036700808943*^9}, {3.6760379483591166`*^9, 3.6760379710705123`*^9}, {
  3.676043023842392*^9, 3.67604302700569*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Shutdown"], "Input",
 CellChangeTimes->{{3.6760976341145964`*^9, 3.676097636329344*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"addtwo", "[", 
     RowBox[{"i_Integer", ",", "j_Integer"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"createScene", "[", "voxelSize_Real", "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"serializeScene", "[", 
     RowBox[{"id_Integer", ",", "fn_String"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"deserializeScene", "[", 
     RowBox[{"id_Integer", ",", "fn_String"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"meshScene", "[", 
     RowBox[{"id_Integer", ",", "fn_String"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"processFrameAt", "[", 
     RowBox[{"sceneId_Integer", ",", 
      RowBox[{"rgbaByteImage_", "/;", 
       RowBox[{
        RowBox[{"TensorQ", "[", 
         RowBox[{"rgbaByteImage", ",", "IntegerQ"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"Dimensions", "[", "rgbaByteImage", "]"}], "]"}], 
         "\[Equal]", "4"}]}]}], ",", 
      RowBox[{"depthImage_", "/;", 
       RowBox[{"numericMatrixQ", "[", "depthImage", "]"}]}], ",", 
      RowBox[{"poseWorldToView_", "/;", 
       RowBox[{"numericMatrixQ", "[", 
        RowBox[{"poseWorldToView", ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"intrinsicsRgb", ":", 
        RowBox[{"{", 
         RowBox[{"_", ",", "_", ",", "_", ",", "_"}], "}"}]}], "/;", 
       RowBox[{"numericVectorQ", "[", "intrinsicsRgb", "]"}]}], ",", 
      RowBox[{
       RowBox[{"intrinsicsD", ":", 
        RowBox[{"{", 
         RowBox[{"_", ",", "_", ",", "_", ",", "_"}], "}"}]}], "/;", 
       RowBox[{"numericVectorQ", "[", "intrinsicsD", "]"}]}], ",", 
      RowBox[{"rgbToDepth_", "/;", 
       RowBox[{"numericMatrixQ", "[", 
        RowBox[{"rgbToDepth", ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}]}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"getSceneVoxelSize", "[", "id_Integer", "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"renderScene", "[", 
     RowBox[{"sceneId_Integer", ",", 
      RowBox[{"shader_String", ":", "\<\"renderColour\"\>"}], ",", 
      RowBox[{"poseWorldToView_", "/;", 
       RowBox[{
        RowBox[{"MatrixQ", "[", 
         RowBox[{"poseWorldToView", ",", "NumericQ"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"Dimensions", "[", "poseWorldToView", "]"}], "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}]}]}]}]}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"getMatrix", "[", "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"elementOfTensor", "[", 
     RowBox[{"i_Integer", ",", 
      RowBox[{"m_TensorQ", "[", 
       RowBox[{"m", ",", "NumericQ"}], "]"}]}], "]"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{{3.676036516764085*^9, 3.676036531252804*^9}, {
   3.6760366953484154`*^9, 3.676036703574548*^9}, {3.67603682053299*^9, 
   3.6760368421010847`*^9}, 3.676037805689785*^9, 3.6760379320956926`*^9, 
   3.67603797192111*^9, 3.676038172279167*^9, 3.6760382157406344`*^9, 
   3.6760383833206573`*^9, 3.6760389320180783`*^9, 3.67603908547567*^9, 
   3.676041923526287*^9, 3.6760423355365877`*^9, 3.676042785077036*^9, 
   3.6760428459586945`*^9, {3.676042996865209*^9, 3.6760430008973026`*^9}, 
   3.67604320392148*^9, 3.676043643064515*^9, 3.676043836952857*^9, 
   3.676043916600069*^9, 3.6760440193303914`*^9, 3.6760440541979065`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{20., {0., 20.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{26., {6., 14.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1.`", ",", "1.`"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1.`", ",", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}]}], 
                   "}"}]}], "}"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1.`", ",", "1.`"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1.`", ",", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}]}], 
                   "}"}]}], "}"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0``7.1505149978319915","\"s\"","seconds","\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 18, "TestID" -> None, "Outcome" -> "Success", 
    "ExpectedOutput" -> HoldForm[{{1., 1.}, {1., 1.}}], "ActualOutput" -> 
    HoldForm[{{1., 1.}, {1., 1.}}], "ExpectedMessages" -> {}, 
    "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[272, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.676036516764085*^9, 3.676036531252804*^9}, {
   3.6760366953484154`*^9, 3.676036703574548*^9}, {3.67603682053299*^9, 
   3.6760368421010847`*^9}, 3.676037805689785*^9, 3.6760379320956926`*^9, 
   3.67603797192111*^9, 3.676038172279167*^9, 3.6760382157406344`*^9, 
   3.6760383833206573`*^9, 3.6760389320180783`*^9, 3.67603908547567*^9, 
   3.676041923526287*^9, 3.6760423355365877`*^9, 3.676042785077036*^9, 
   3.6760428459586945`*^9, {3.676042996865209*^9, 3.6760430008973026`*^9}, 
   3.67604320392148*^9, 3.676043643064515*^9, 3.676043836952857*^9, 
   3.676043916600069*^9, 3.6760440193303914`*^9, 3.6760440542329144`*^9}]
}, Open  ]],

Cell[BoxData["ColorConvert"], "Input",
 CellChangeTimes->{{3.676042453491938*^9, 3.67604246075721*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageData", "[", 
  RowBox[{
   RowBox[{"ColorConvert", "[", 
    RowBox[{
     RowBox[{"ExampleData", "@", 
      RowBox[{"{", 
       RowBox[{"\"\<TestImage\>\"", ",", "\"\<Lena\>\""}], "}"}]}], ",", 
     "\"\<Grayscale\>\""}], "]"}], ",", "\"\<Real\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6760425651805363`*^9, 3.6760425826261697`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.6352941176470588`", ",", "0.6352941176470588`", ",", 
             "0.6352941176470588`", ",", 
             TemplateBox[{"506"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
             "0.6666666666666666`", ",", "0.6078431372549019`", ",", 
             "0.5019607843137255`"}], "}"}], ",", 
           TemplateBox[{"510"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{299., {10., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{255., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{255., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 303, 25597709258534681864, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{292., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{292., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 303, 25597709258534681864, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{216., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{216., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 303, 25597709258534681864, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{382., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[303]]], "Output",
 CellChangeTimes->{{3.6760425742110353`*^9, 3.6760425844415464`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "@", 
  RowBox[{"{", 
   RowBox[{"\"\<TestImage\>\"", ",", "\"\<Rose\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.676042676932839*^9, 3.6760427482560797`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ExampleData", "::", "notent"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\\"\\\\\\\"Rose\\\\\\\"\\\"\\)\[NoBreak] \
is not a known entity for the collection \
\[NoBreak]\\!\\(\\\"\\\\\\\"TestImage\\\\\\\"\\\"\\)\[NoBreak]. Use \
ExampleData[\[NoBreak]\\!\\(\\\"\\\\\\\"TestImage\\\\\\\"\\\"\\)\[NoBreak]] \
for a list of entities. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ExampleData\\\", ButtonNote -> \
\\\"ExampleData::notent\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6760427486511693`*^9}],

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{"{", 
   RowBox[{"\<\"TestImage\"\>", ",", "\<\"Rose\"\>"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{{3.6760427067647457`*^9, 3.6760427486511693`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"i", "=", 
  RowBox[{"ExampleData", "@", 
   RowBox[{"{", 
    RowBox[{"\"\<TestImage\>\"", ",", "\"\<Lena\>\""}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6760426650129833`*^9, 3.676042669412389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageDimensions", "@", "i"}]], "Input",
 CellChangeTimes->{{3.676042803580919*^9, 3.676042806841673*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"223", ",", "164"}], "}"}]], "Output",
 CellChangeTimes->{3.6760428071217327`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assert", "@", "False"}]], "Input",
 CellChangeTimes->{{3.6761014280093007`*^9, 3.6761014302130632`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Assert", "::", "asrtf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Assertion \[NoBreak]\\!\\(False\\)\[NoBreak] failed. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Assert\\\", ButtonNote -> \
\\\"Assert::asrtf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6761014306566067`*^9}]
}, Open  ]],

Cell[BoxData["Positive"], "Input",
 CellChangeTimes->{{3.676101443606769*^9, 3.676101447943178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"3", ",", "x_"}], "]"}]], "Input",
 CellChangeTimes->{{3.6760993728379345`*^9, 3.6760993775508246`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6760993780344043`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"processFrameAt", "[", 
  RowBox[{"s", ",", "\[IndentingNewLine]", 
   RowBox[{"ImageData", "[", 
    RowBox[{
     RowBox[{"SetAlphaChannel", "@", "i"}], ",", "\"\<Byte\>\""}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"ImageData", "[", 
    RowBox[{
     RowBox[{"ColorConvert", "[", 
      RowBox[{"i", ",", "\"\<Grayscale\>\""}], "]"}], ",", "\"\<Real\>\""}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"IdentityMatrix", "@", "4"}], ",", "\[IndentingNewLine]", 
   RowBox[{"First", "@", 
    RowBox[{"IdentityMatrix", "@", "4"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"First", "@", 
    RowBox[{"IdentityMatrix", "@", "4"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"IdentityMatrix", "@", "4"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", 
   RowBox[{"Import", "[", "\"\<ExampleData/rose.gif\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"processFrameAt", "[", 
  RowBox[{"s", ",", "\[IndentingNewLine]", 
   RowBox[{"ImageData", "[", 
    RowBox[{
     RowBox[{"SetAlphaChannel", "@", "i"}], ",", "\"\<Byte\>\""}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"ImageData", "[", 
    RowBox[{
     RowBox[{"ColorConvert", "[", 
      RowBox[{"i", ",", "\"\<Grayscale\>\""}], "]"}], ",", "\"\<Real\>\""}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"IdentityMatrix", "@", "4"}], ",", "\[IndentingNewLine]", 
   RowBox[{"First", "@", 
    RowBox[{"IdentityMatrix", "@", "4"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"First", "@", 
    RowBox[{"IdentityMatrix", "@", "4"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"IdentityMatrix", "@", "4"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.676042346564108*^9, 3.67604235496581*^9}, {
   3.6760425562556257`*^9, 3.6760425579310036`*^9}, {3.6760425911672173`*^9, 
   3.6760426259383893`*^9}, {3.6760427605037403`*^9, 3.6760427701080766`*^9}, 
   3.676044028513378*^9, 3.6760440711765294`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{299., {10., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{255., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{255., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 452, 25597709258534681864, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{292., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{292., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 452, 25597709258534681864, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{216., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{216., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 452, 25597709258534681864, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{382., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[452]]], "Output",
 CellChangeTimes->{3.676044072361759*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rgb", ",", "d"}], "}"}], "=", "%"}], ";"}]], "Input",
 CellChangeTimes->{{3.6760430397233562`*^9, 3.6760430591779027`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", "depth"}]], "Input",
 CellChangeTimes->{{3.67604306024813*^9, 3.676043061953825*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton",
           DisplayFunction->(FrameBox[
             RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
             Background -> GrayLevel[0.75], 
             BaseStyle -> {
              "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
               ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
             ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
             GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{299., {10., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{255., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{255., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 363, 25597709258534681864, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{292., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{292., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 363, 25597709258534681864, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{216., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{216., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 363, 25597709258534681864, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{382., {1., 39.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[363]]], "Output",
 CellChangeTimes->{3.6760430623738823`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getMatrix", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.676038262158415*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"createScene", "[", "0.005", "]"}]}]], "Input"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.676038964050022*^9, 3.6760390944399195`*^9, 3.6760426445126886`*^9, 
   3.6760427892276*^9, 3.6760428566409516`*^9, {3.6760430176225643`*^9, 
   3.6760430335059676`*^9}, 3.6760432082176485`*^9, 3.676043647957985*^9, 
   3.676043920458109*^9, 3.676044025122575*^9, 3.676044058478871*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deserializeScene", "[", 
  RowBox[{"s", ",", "\"\<relief-ps0.005\\\\afterFuseScene0.005000.bin\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6760389438152866`*^9, 3.676038952427948*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6760389674544926`*^9, 3.67603927343213*^9, 
  3.676043210699032*^9, 3.6760439222835226`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.676036162824438*^9, 3.676036165134593*^9}, {
   3.6760365083691835`*^9, 3.676036508589241*^9}, 3.6760389599991117`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6760361673961687`*^9, 3.6760367074924955`*^9, 
  3.676036844935344*^9, 3.676037810736893*^9, 3.6760379810056467`*^9, 
  3.676038176077672*^9, 3.6760383895920687`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rgb", ",", "d"}], "}"}], "=", 
    RowBox[{"renderScene", "[", 
     RowBox[{"s", ",", "\"\<renderColour\>\"", ",", 
      RowBox[{"IdentityMatrix", "@", "4"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676037816595383*^9, 3.676037828545882*^9}, {
  3.6760381846310863`*^9, 3.676038193435588*^9}, {3.6760392280212245`*^9, 
  3.676039269951327*^9}, {3.676039306503338*^9, 3.6760393473493114`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meshScene", "[", 
  RowBox[{"s", ",", "\"\<test\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6760432373691826`*^9, 3.6760432415209546`*^9}}],

Cell[BoxData["80"], "Output",
 CellChangeTimes->{3.6760432423410835`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<testm.obj\>\"", ",", 
   RowBox[{"Import", "@", "\"\<test.obj\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6760432600482807`*^9, 3.6760432894372315`*^9}}],

Cell[BoxData["\<\"testm.obj\"\>"], "Output",
 CellChangeTimes->{{3.676043269561677*^9, 3.676043289927292*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RenderScene", "[", 
  RowBox[{"s", ",", "\"\<renderColour\>\"", ",", 
   RowBox[{"IdentityMatrix", "@", "4"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676043190544772*^9, 3.6760432165382338`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ImageAdjust", "::", "rngin"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The input boundary specification \[NoBreak]\\!\\(\
\[Infinity]\\)\[NoBreak] in \[NoBreak]\\!\\({\[Infinity], \
\\(\\(-\[Infinity]\\)\\)}\\)\[NoBreak] should be a number, Automatic, or a \
list of numbers and Automatic. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ImageAdjust\\\", ButtonNote -> \
\\\"ImageAdjust::rngin\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6760440405028963`*^9, 3.6760440903880157`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Image", "::", "imgarray"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The specified argument \
\[NoBreak]\\!\\(ImageAdjust[\\(\\(\\*GraphicsBox[TagBox[RasterBox[List[List[0.\
`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, \
0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`, 0.`]], \
List[List[0, 42], List[75, 0]], List[0.`, 1.`], Rule[ColorFunction, \
GrayLevel]], BoxForm`ImageTag[\\\"Real\\\", Rule[ColorSpace, \
\\\"Grayscale\\\"], Rule[Interleaving, None]], Rule[Selectable, False]], \
Rule[BaseStyle, \\\"ImageGraphics\\\"], Rule[ImageSizeRaw, List[75, 42]], \
Rule[PlotRange, List[List[0, 75], List[0, 42]]]], 0, \\(\\({\[Infinity], \
\\(\\(-\[Infinity]\\)\\)}\\)\\)\\)\\)]\\)\[NoBreak] should be an array of \
rank 2 or 3 with machine-sized numbers. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Image\\\", ButtonNote -> \
\\\"Image::imgarray\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6760440405028963`*^9, 3.676044090498022*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzsyMENQEAUBNAfJLShC1dKoIKVcJUgkb0p3erjvcNkZvr1mPcqIq6uxJye
8TxTXpoypnxva13KUNbbRvwnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAfO3BAQkAAACAoP+v+xEqAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABcBc6iCGg=
      "], {{0, 1080}, {1920, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSizeRaw->{1920, 1080},
    PlotRange->{{0, 1920}, {0, 1080}}], ",", 
   RowBox[{"Image", "[", 
    RowBox[{"ImageAdjust", "[", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzswVEJACAQBbCHCOawhTmMcOC3FYxukW2z7j4tyerJGwEAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD57cCAAAAAAAOT/2giq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqoq
7MGBAAAAAACQ/2sjqKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqrQHByQAAAAAgv6/bkegAgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMBBa0Am8=

         "], {{0, 1080}, {1920, 0}}, {0., 1.},
         ColorFunction->GrayLevel],
        BoxForm`ImageTag[
        "Real", ColorSpace -> Automatic, Interleaving -> None],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{1920, 1080},
       PlotRange->{{0, 1920}, {0, 1080}}], ",", "0", ",", 
      RowBox[{"{", 
       RowBox[{"\[Infinity]", ",", 
        RowBox[{"-", "\[Infinity]"}]}], "}"}]}], "]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6760432217668495`*^9, {3.6760439449263973`*^9, 3.6760439709291677`*^9}, 
   3.67604404071796*^9, 3.676044090623069*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"visualizeDepth", "[", 
     RowBox[{"depthImage_Image", ",", 
      RowBox[{"opt", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "l", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"ImageData", "@", "depthImage"}]}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Image", "[", 
        RowBox[{
         RowBox[{"ImageAdjust", "[", 
          RowBox[{"depthImage", ",", "0", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "@", "l"}], ",", 
             RowBox[{"Max", "@", "l"}]}], "}"}]}], "]"}], ",", "opt"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"visualizeDepth", "[", 
     RowBox[{"depthImage_", "/;", 
      RowBox[{"numericMatrixQ", "[", "depthImage", "]"}]}], "]"}], ":=", 
    RowBox[{"visualizeDepth", "@", 
     RowBox[{"Image", "@", "depthImage"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorImage", "[", 
   RowBox[{"i_", "/;", 
    RowBox[{"TensorQ", "[", 
     RowBox[{"i", ",", "NumericQ"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"i", ",", "\"\<Byte\>\"", ",", 
    RowBox[{"ColorSpace", "\[Rule]", "\"\<RGB\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6760436737026415`*^9, 3.6760438226127577`*^9}, {
  3.6760438528888817`*^9, 3.676043879480521*^9}, {3.676043956915532*^9, 
  3.676043962258066*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "@", "depthData"}], ",", 
    RowBox[{
     RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.676100967840973*^9, 3.676100967840973*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RenderScene", "[", 
   RowBox[{"s_Integer", ",", "shader_String", ",", 
    RowBox[{"m_", "/;", 
     RowBox[{"numericMatrixQ", "[", 
      RowBox[{"m", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rgb", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rgb", ",", "d"}], "}"}], "=", 
      RowBox[{"renderScene", "[", 
       RowBox[{"s", ",", "shader", ",", "m"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colorImage", "@", "rgb"}], ",", 
       RowBox[{"visualizeDepth", "@", "d"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6760430912638164`*^9, 3.676043180227451*^9}, {
  3.676043890734259*^9, 3.6760439098457813`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rgb", "[", 
  RowBox[{"[", 
   RowBox[{"500", ",", "500"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6760393914834785`*^9, 3.676039396979746*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"200", ",", "194", ",", "218", ",", "255"}], "}"}]], "Output",
 CellChangeTimes->{3.6760393972784786`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", "d"}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6760394918612175`*^9, 3.6760395236049356`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", "l"}]], "Input",
 CellChangeTimes->{{3.676039515263072*^9, 3.6760395162783413`*^9}}],

Cell[BoxData["0.49738165736198425`"], "Output",
 CellChangeTimes->{{3.676039516553383*^9, 3.6760395268306637`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "@", "l"}]], "Input",
 CellChangeTimes->{{3.676039517888541*^9, 3.676039518693718*^9}}],

Cell[BoxData["0.4174479842185974`"], "Output",
 CellChangeTimes->{{3.6760395189637823`*^9, 3.6760395281709814`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "@", "rgb"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "@", "rgb"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "@", "rgb"}], "\[IndentingNewLine]", 
 RowBox[{"Image", "[", 
  RowBox[{"rgb", ",", "\"\<Byte\>\"", ",", 
   RowBox[{"ColorSpace", "\[Rule]", "\"\<RGB\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "d"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "@", "d"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "@", "d"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", "d"}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImageAdjust", "[", 
  RowBox[{
   RowBox[{"Image", "[", "d", "]"}], ",", "0", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Min", "@", "l"}], ",", 
     RowBox[{"Max", "@", "l"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6760393486529675`*^9, 3.6760393609600267`*^9}, {
  3.676039442868617*^9, 3.6760394459543*^9}, {3.67603954030612*^9, 
  3.6760395561619263`*^9}, {3.6760395975039062`*^9, 3.6760395978289804`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"164", ",", "223", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.67603782273691*^9, 3.676037983069908*^9, 3.6760380691711173`*^9, {
   3.6760381778003283`*^9, 3.6760382024419017`*^9}, 3.6760383987759895`*^9, 
   3.676039146227479*^9, {3.6760392874559364`*^9, 3.6760393159090614`*^9}, {
   3.6760393494375043`*^9, 3.676039361730161*^9}, 3.676039446761261*^9, 
   3.6760395626792893`*^9, 3.6760395981740723`*^9, {3.676043049259124*^9, 
   3.6760430646448593`*^9}, 3.6760440797870464`*^9}],

Cell[BoxData["255"], "Output",
 CellChangeTimes->{
  3.67603782273691*^9, 3.676037983069908*^9, 3.6760380691711173`*^9, {
   3.6760381778003283`*^9, 3.6760382024419017`*^9}, 3.6760383987759895`*^9, 
   3.676039146227479*^9, {3.6760392874559364`*^9, 3.6760393159090614`*^9}, {
   3.6760393494375043`*^9, 3.676039361730161*^9}, 3.676039446761261*^9, 
   3.6760395626792893`*^9, 3.6760395981740723`*^9, {3.676043049259124*^9, 
   3.6760430646448593`*^9}, 3.6760440797920465`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.67603782273691*^9, 3.676037983069908*^9, 3.6760380691711173`*^9, {
   3.6760381778003283`*^9, 3.6760382024419017`*^9}, 3.6760383987759895`*^9, 
   3.676039146227479*^9, {3.6760392874559364`*^9, 3.6760393159090614`*^9}, {
   3.6760393494375043`*^9, 3.676039361730161*^9}, 3.676039446761261*^9, 
   3.6760395626792893`*^9, 3.6760395981740723`*^9, {3.676043049259124*^9, 
   3.6760430646448593`*^9}, 3.6760440797920465`*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztfS1wI9+znSsJWGhoaihoKBhDQYWZvedKiEGqnlKVSokKCgoKRlDQUNTQ
UNCBgoaGzpy+ffqevjPy7v5/+71zq+7q05JWmjOn+/TX9b//z/n/+E8XFxeL
T90/83/73//1P/7j3/7Pf/sv3Y3b//O//vu//+fuyv/t9v/rNu58H9dPWU+H
w/vb21vc1uvjGte4vt+6W9y/7/Y7u/72dvrJn2Zc4/o7Fjhus9u+385nxn96
/7jGNa7vs4iv5Xpl2LueXL8/PT/95E81rnH9PWuzW7/f3k1t4zowOfLeuMb1
/ZfZnMDe7eT9Znbzfnp9HbE3rnH9gLXeOO/Nyh5xN65x/Zi1XD0Y9q4nl++T
m+v3R9FcxjWucX37BX6DfXkzn75POnsT2Lu+vTYc7h/3P/vjjWtcf+wC7rCA
O2zYm9fTS7sOO3Rc4xrX91nUM68m12Zrmt3ZYe+y4z/oL+Ma17i+3zoc9oY1
YO9mPjHs4XKxuPvZH21c4/qjl9maiC3MS3zhZnZt+IPfR39w1D3HNa5vv25u
iq8HzAGDwJxpLh3+iLsx1j6ucX3bpb5e0VomwXtX0+v3+d18xN64xvUdFrEH
nFlsQbAHLF5eF+6jHjqucY3r2yxgCvnTZmu6xnJ7V67jEphEnG/kvHGN69uu
0+kYvh34Dvvq5sI2rn+aXHR252zkvXGN6xssctjpdHq/f5hWXRM+Xoc5Xif/
gQvBfcv18id/8nGN6/dfx+fn94tPhd/MtnTMtZfgPWxch+4yrnGN68tW66fh
Njis5Tjam7PbK7uNS96nj49rXOP6ukUMIofF4neOpxZ7er33+HyaXmtc4xrX
ly1gBnED1VKGcKZ4a2/zdcY1rnF9fhEr6IOkmmbLeUO7fe6Iu3GN68sX4gNP
x+ceh7UYo66pj+t9yK0esTeucX3ZYq9NxAcmjJ+f8euAsxaTuC9iDZPrsX/u
uMb1hQsxPCz0/0NtHrXN1p5scUifEPt+PnlfPczf95vl++n58H56ebL9djr+
5P/duMb16y7wHmzOyc0kYQwxhHM8h3j7YjF7f3rcvL8d97ZfnnfvL7j9vLdL
20+7n/3fG9e4fukF2xDx8RZnwB94jZeGt8Pu/UheA+4O28AZMXfcr2KfnPuA
cfDg2/HJ9qnzL8GRL8Aq/rbbT4eaFzr2nR/X37I0T4y2JDAHvL08dXz29vz+
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
MV3G9Qb7zm5q7wa1n0JH1Jiz8x3jCMRIwVzlvF4u87Nw5WP2H19dq3/dKtcJ
h1pMYub5Zo1+6rUP3G8rxV/1LSv/kgvvw1alZpPi9553k/J12jw2YsRqbTeF
m1mT4Z9R7Xe1MSJ/XXL82l7CqtMAkzbzaT6xWduYf6h7fje3fod3i/sRf7/Q
Qh88YK/2fNb+KaJtbjL+qNWHJtDMA2IMz/AguCP2FHfsJRE8ua+2ZMQLtN7I
62yjBkjzXVru1Ou7cuy/ra/KFk2V9Ulah0ueCx2HsTi3NV+2VQNivCD1tUdv
U+SrePw+uG9d8H70GM3Q99zWaqW6/uY34txCm5e9vHPMTXzO4dS4cA5u7K5j
7tq4fsyKuQnN+Y4+AeILVre32+S8loEaIe56TMt5PvKnF8FRlX+kHs+32Xuq
zUhPiaJFNP3+GC/bFLutaJuL9xS3O7sbnwlYe7g0/J0eLt5fu622aK+2T+qe
Eg+61pP00dY3e27sT/V5t/l7TTUibT8A9w2Z1856ZuO955IrhxyI29nE+K/M
0HYMzp0D78tMYPTEKLbpPGIWIx9+20XMEWd6P5fGFnKv9fzbQ1ux3KjELZIT
Sez5Mao4qTWws3Rc0zalJnPcLtL5nTla6mcq7iLv0/EQ+WqMGTSxhaRHwq9b
XRkGT3cFf6flVWAwfc5N5UGeWyr3sea9icul2S6SS4rcTe1pIbH49hxn+XuO
N90Ve6XOOf5Pb89lzu+s4A4YBO5a7MEGXSzugg9xfIw5bN9uWV/l7pzG3spD
+Um4r+aRtbUwTX8+5qo0/l2dxbXq+WLVxpqF5mGbx/RW8SZ9b9fyGm53hi0Y
WKjY42vVWPriXXPYEi8qBh0Hzx32uI0DV5PsDzY8WHMEyrkInzHHJhrbU/UX
4A+43zbY01i8+n/MYfffovbRyX1hwr/s8Ad8PdxPq80ZHCg4nM8Cj3YfeLDz
B8d5af98Gd/5LEr42fDBbftc2JvJtdkeTzoLaJ9jeqmH0OMmxXmJO7U1oyaB
uFnNwrdJuHO9r+0jUbXVReR6Rox87zrKahZ/Sw5kHnWKPQgPEnvULsNX8/i5
5eh0uIP9CQ483V0m/CXOZnzSdU5i/mxcUOPkx6pRRt2g1NZzq91J7CnvsY9O
YO/Z5/F6vG+3XZUZpM59ZmM2+kuxS/367MZwN+n+5jTGCwfrSVLPOvHhcD++
w8urMmMZ3/XNzcQwhvuwce6zWcyTT3H/8n76Xuf0SH+fwJWewzPfRQwh5iU4
X63mSVt8XRZ98ZXYk959R9FNjh7n4mvsZheGh9cmPnBaltuvbhtSy4m4wL72
owj+E05863HjKnhoD+7r3vftwbG3zJoMzx1vwrel7lfifxEfGfj+mB9Am3c7
r/os8ef5QthWoyx+IDGovp7h72kjfuXBtNV7cNltwR3tTuO3GX1B2qOTHi5h
k+KYUlv0b1vn5+CVuBxiOPO72fvFp4IvchoxaHpzhzVsnX2O51htwmOdy0Os
Dc6ilHmvxF21Md1uXIse0nETNX5ijzoiOUn7oFFbMR2nO4bt7x+uUxwOftlx
cd1hbxJ45Gu3/pnmfaoPqPXzr3G/5Gh6n4jIq3EsvC4nEo+YGtYZDzT8re+b
PLUzvl/KO1jU3mqbPvcl3y/NXvIecU0MsNYi1bmjZt+Y3TnJ+Ls7v00P7exP
HFt/u/0JnC3Xq/erzkac3JT4jX2ft4XHgCdiTbfiTTeee9+d62CnHAbmQ6Zc
3lTnvYm69LAxtd+tx4vJd+AnwwmO245DTNvf32e8bqs/WexJqWFY++Wy9ig7
Lm4KBrsdPtoMl5e28TixqTks5EPFWa6pH9BGyZGIk3SvCdyTf2sPi/vEs708
syHMSf0Q4/hxftEaCNGZ9hKHN73T53tqf5h0nkQt4MvT+2b1IPZln9/O4RD2
Jx5DjP5vX8Af7ADw28RtSeyLDkefJhcJg7zOS93AHJ4Df9xykaT/bcx+9cvK
ddmvS7lc6qOJj2c+WXe8Bg5gu3kOyYvEEMI3RDz5/tqOc+DHLlfT/nbcwS8D
7g7zbsM2nfrG9fmnuMRr5fzQyoc9zDXxCq2dN7z5eeT0cFX43DBYY/Ha8zNp
OkmTWqV69hqrr34f88+U/6Jucl17xbGeuTeX96n0Yyp96Z9zjOGu6izKg63d
WXA3t91q5H/q6sXgJFfduM/tyPDrOm6DDUlsDeFNN56LGSfsWRc+u8xHsOOF
MXM/dvr5YeLjiX1UcFdw8ry8Kcfs2vlvU3NTjtuMPXDe4f6y8KXH/xLmwHd2
eW22KDjO8KVYmzkHzgouX+4+2T6RE91mNd+N2Goxthd/0fPUDF8bt209Lya4
3XPCmUNgvN3Wcrj9rj3bqGu9qN27q7ij/cm+i+Hv9fqFey5S8N8qNBfrb99h
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
EVNjfQXrc/Z1FlKaH3ncJ82D+gq1xtbOHNJYY7tdanbqrvqSMTPW+vgVvYWz
MDQfwW7/prmX32oRG+S9VicZ4hm9r1cr5PYlXk9nCBJ/vE/nV9t992WudcH/
TQ+LVkfbcB/rhei76RzNIfsS78t8P+opiGti/Ss+Bf2S8Pt4fHW4s93m5qvu
meZJV70ydBa3P/eeA0YNhnr/cN+h2juGeiZja4E311Y0PzO4jrMNVhVvtDHp
73HOpPYGjrp9qVNQLRWvaX6f98y093rc2/c3pGv96byH/99mtw1bUnXNtrd0
2HbTPIvPnjObJM6jPkN7MniMfp3uZla8+n5hc0qeGbmXNe1xLnD82WMf2Jnf
Og7bztWI/v/kvl3tFaG1MTEDdzlPWkb4VKp1kgeJgYdpxp7ksGn/k4K7Tfh1
zF0mT6Wa1M0ifQ5yXWz2rZG/MftzV23NWt/h9bPq87Z897j5rXr3fYvVHneF
i6otmWblDdl3AzE1jQfo35S6o5tkX+ptm/kps+SJ02xz3qQcz/S5/BzAuMLF
1bCdiV7TbS7E0HfxTxe41Orb10XvJN4096uvZ+Ram9Dx3f5M+PPel6yFi96W
rJvwmtaok216yla+U/4VvrO+NJO6Pbc0nRdWMuuV/uVOez9UbPIz8L1iJslj
mQn0ty093ujnDdmSyoUt92mNK3kw8p/neW5D0jLnk0Ec6hx5PobXbTFoduck
90ziZ0yaJuYadT4cfDnFHPphDH0P32rhvVhzxLzj2kei5neq/cnjvmiGVd+I
nGrPUTEM3pfZt+u7EpN/8RpAxV3qcwl7z/XFPv/0fTvOOTPMLTIGtY6A9cSc
Z6H50PG6xF/khZb33iEHyPOf/3S78qNF7WIo/7nlQeaZMC8ljnvXJomViCXM
ak1Q4rIWe0nznGY71eMUvRo+5JhdV7szclg8Rof8diy1MelXYFVt5J/bPHr8
IBbMetvDRmxAsTeZN0IbkXFryxtxXytyJRmHeFA9tPqElhvqucsxI8mPc82Z
PLqeYlzsMTXFndUnoifNovqae8+5Cf5zTHIub5uPgD4DfIx4o42puCffsWbt
b8IfNQb0SDC70H019qOF/8c+ZUMzAqmFFF20YIT+YWtrao4KZ9hqvEC35W76
9VK7exOz+tgnlLE49lNi/pf1E+3uw2csvZ5+bG4t34t9J9g3hHgLTaPRXpK2
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
rnF9vzXia1zjGte4/vn6/0EUZ2o=
    "], {{0, 164}, {223, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{223, 164},
  PlotRange->{{0, 223}, {0, 164}}]], "Output",
 CellChangeTimes->{
  3.67603782273691*^9, 3.676037983069908*^9, 3.6760380691711173`*^9, {
   3.6760381778003283`*^9, 3.6760382024419017`*^9}, 3.6760383987759895`*^9, 
   3.676039146227479*^9, {3.6760392874559364`*^9, 3.6760393159090614`*^9}, {
   3.6760393494375043`*^9, 3.676039361730161*^9}, 3.676039446761261*^9, 
   3.6760395626792893`*^9, 3.6760395981740723`*^9, {3.676043049259124*^9, 
   3.6760430646448593`*^9}, 3.6760440797970476`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"164", ",", "223"}], "}"}]], "Output",
 CellChangeTimes->{
  3.67603782273691*^9, 3.676037983069908*^9, 3.6760380691711173`*^9, {
   3.6760381778003283`*^9, 3.6760382024419017`*^9}, 3.6760383987759895`*^9, 
   3.676039146227479*^9, {3.6760392874559364`*^9, 3.6760393159090614`*^9}, {
   3.6760393494375043`*^9, 3.676039361730161*^9}, 3.676039446761261*^9, 
   3.6760395626792893`*^9, 3.6760395981740723`*^9, {3.676043049259124*^9, 
   3.6760430646448593`*^9}, 3.6760440797970476`*^9}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.67603782273691*^9, 3.676037983069908*^9, 3.6760380691711173`*^9, {
   3.6760381778003283`*^9, 3.6760382024419017`*^9}, 3.6760383987759895`*^9, 
   3.676039146227479*^9, {3.6760392874559364`*^9, 3.6760393159090614`*^9}, {
   3.6760393494375043`*^9, 3.676039361730161*^9}, 3.676039446761261*^9, 
   3.6760395626792893`*^9, 3.6760395981740723`*^9, {3.676043049259124*^9, 
   3.6760430646448593`*^9}, 3.6760440798020487`*^9}],

Cell[BoxData["0.019607843831181526`"], "Output",
 CellChangeTimes->{
  3.67603782273691*^9, 3.676037983069908*^9, 3.6760380691711173`*^9, {
   3.6760381778003283`*^9, 3.6760382024419017`*^9}, 3.6760383987759895`*^9, 
   3.676039146227479*^9, {3.6760392874559364`*^9, 3.6760393159090614`*^9}, {
   3.6760393494375043`*^9, 3.676039361730161*^9}, 3.676039446761261*^9, 
   3.6760395626792893`*^9, 3.6760395981740723`*^9, {3.676043049259124*^9, 
   3.6760430646448593`*^9}, 3.6760440798020487`*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQuwJgV5pnGjhBBUVrNIxAsgGo2C93v0FN6I6xIUzS6hKINEiMEUUYMk
MejKEiTEEGRZJUjQBFQUxxTFjoSgO7JIcDQ4otwZwBlmBma4iGS0EFnKTe2e
p6l9/n3r6//MDOfMmW+qpt7q/vv0391/9/f2+133OOwPDjz832y33Xaf+df/
3//X/z/7P//umWls3BZww117XXzWPbfPHHj3VU9bef8PJj5P6xsbGxsbG7dG
fMl7/+WaPVfeMPOX//jFQy56yrph/efWL7/rLRc13zU2NjY2Lg5Ex93y1Hu+
9PoL18zsse7cwx6z9/cG/Ze2n+/jbmxsbGxsnAbNXx8+fN0HH3f8qoH3DvrY
Efsfuu6Smb/+yOp37XzQhnk/3sbGxsbGxs2JL9ht7TFfPXrNzNM2Lv/58+79
3oCshydb7zU2NjY2LgbEzwnfXfknJz967wu+PfO8g/f7m5kXr5i5/5q/2Xnv
C+5u3mtsbGxsXBS4z8/+7jkn3Ll64L0nf/PwXa8758oBm+8aGxsbGxcTnrFi
xZ4r779l4L23PXD0rccs+9rMRd/d7s2rP3DZzKvecdL5l79pMs+lsbGxsbFx
a0D0G/7L91528Or9D7ty5j0v27jjkid9a+C9XR5/5oGH7bx84MNXXHHdy27e
67Z5P/7GxsbGxsZpEL5jGb4D8W+i91iPP3S+j7+xsbGxsXEadH7m59f/+vYH
XrRs4Dn0HcvrL//R0cs+ffGQ/zLfx9/Y2NjY2DgXJG4Hr8FzLznmpNuOWfad
ieVXnPyi3Q9+58p5P+7GxsbGxsa5IP5L6hbgN+oX/vg9f/TpJz732wP/Ee9z
fLDzPRsbGxsbtwb86t2v+eSuj7x84D94Dh6E55zfab7ruvbGxsbGxoWMKa4H
/13+tQPOu2z3Kyf03qHL71i94r6vz3xo1z0u2fjg1c17jY2NjY1bBZr34DP0
XeI9ePHPfm/XZ25/3JcH3ef80MbGxsbGxoWE8BT9p/FrOo/lig0XnHH6UQ/l
dbIMT1LP1zqvsbGxsXEh45u+/p4X7bDkrom4HfoO5HOQ9ei9qx6/y0lHfvXq
1nuNjY2NjQsCrcPu+8afvvvUu++aOfHNn33bYTtfP+HHBM2H1nsT9Q2zuu9X
1/z2rfsftmrez7uxsbGxcdvG1z3ug++7/YENM9vN/oPX4DHzXLWM3gNZT77L
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
2At0WdUf2f1FUl2A+48kfnP+aOqjMpb3nOeR/Kp8n3We7bD5L+k7Pof34KsK
4SfrP/MePMKyedZ8y/Gwf/7e+pHrweeOBxqJw6XPwfR7pd/PcVnznvsJUO8C
L/t+nu/nqrGxceEifcXIw4SvsJ/Wf9ZJbJ/qsJNfE94x/zh+V6H1gfVa8r+y
nPJMTtrrp2tX3DcZf2P5z8/6vccd9/E1A8KDiZes28xrCSs/6VjdmfyhiefM
gwnRh9Z3adn+Vv8ufL95kPsLvyfbsYwereKBjY2NjeQPrF76t09/7s1rJ3iM
eT/H//QTP37gC6sn5gWY3/jc9WXT8l7VV6xC7KjtfMVnHE/yJ1b+TOu2xGcp
rjeWByt9mY5zLJ8l5Di9PvU9Tb+PP7fO5nfnPnL/HHSe6xb53HUazYONjY0g
vGc/JXaGOA68B2Kvks4jP8X8Zp7DftuOsn/XL6Q+LdZxKU7nPJVk16v4Gfs1
70zr50w8UqH54r/84fZP+/v9Vg/o47Cf1Hyb9s/nLPP+UPFa4jfrPO63VOfJ
dsQRrQ/Nd+5jTp5N815jYyNInAS9hz1h2fUNrmOA91iG76z3zHv2Lya+S3mc
5rvbb/m5f/dvnj0ZB3I+oeOAtv+uw6/0XqWzvN1YnrMfr4qn+folfoW3Kt5L
/s7kT07+5dQfNcX1zIPcf863YZn9un+e+Y/7fNp+bY2NjYsPmatgvef375S3
Yt6D56496oE799o+6z140ToA3oLfrBfgt8RzttOpn4vzOr1fzj/lWZrXkv7b
VL9ixXdp3nu6Htaz1nUVD1a8y/V2H5vEj1Xf0cST9i/Ae563yPXAr8Eyce3E
g10v2Ni4eNG8V9WfJ75zfTt2D7+beY/1jg9Z1/G5ecn592k/f/WNKx7xtjW5
j3SqBweT/ktxt031W6bzGst75FuC5kF0EseZ6hyq87CuSnrL+bovPv/jP/js
mblesprnlPrzeM6w+8Qm3XzWs5ae8PHX3jnnOcuNjY1bH9pup/oFluE3eA9+
cVzP8T30HXxn/6Z5y3ov2f/UvwXkvLC3oOvbWIbfnP9S8d1c8yL5Xvtr56oH
k+6r6hDgw1TXkHjPmPIt+buk/x1/dVw21f3xPVw/6z77Azzfirgh+aBVPkzz
XmPj1o+296l+D6R/GXEX7Jb1Hn2tk+7Dvqc6auu9xCP8HftzfUPFe+a1xHsp
/7Lit+Q/TPziuNi0/Gfec72BdWDlJ011eUmXcty+Lt6Pec1+Z/s9kx/U+U6p
f6t5M70vwN/wYeeFNjYuPnScJ/Ee242tx0t+TdcrJP8kaF1nfYFdg/fMZ/Bc
6rvC52P7i2FXx+b7O05ofcn14TypG0l+Pn+P/Xqs9zyixGdJn1VonZ2ug/WW
kfPiuuAXSH1OXT9TzadP95Ovm/OgPG8SHiROmPq2+flqnmxsXDjoOXr2a6J7
Uj8y258qf+Vz//209ccs+/5g760Hkj/T/ahT3gtxPHiM4xvLaylPpao7GNtf
0/UPqd7Cfr+Uz5PeE5zvw+86Nj9lWnT81fybeM88ih61DuR9iWXny4ztf5bm
2Zv/7B/1exY8CP+5fzbxwvTcNQ82Ns4fYt/ht2puQsLEe9greI/1Sd8lvsPe
pLoG15VV/Gb9Z95LeZnmu2Tnk9/T6+Fp16lx3Tk+zzNM8w2N7N+6etrr77/3
75K+f9r8VPOgdWDqLzB2HnDiRfdFY73PE75z/g7Lrid0H9Hmu8bGhx/93GHX
Uz+UxHupr2bKU/Cy/Vv2K9nepjm1iYfhv7E6r+rzbH8lx8t7Pv4v28PED+6T
DT9x/NaRxBk5n4rv/D3Wh6nvZaV3ku6elveSDkz+VvdTTfOefP95TgjXm/h0
qo9P18GYeNv91uwfJV443/agsXFbQPMeusH1eik+UvVjcb8Qo+NTjqcktF8z
8XKyh0nfoeOcv5L0mxGeSzqqyg/iOo7laZ9X1e8M5He2Tkz1iuazNL/Pf5f8
nq4Hqa4rPJHyc7jf6Iua/J9edr+FpAt9n7k+IsX/Ul5ryhfy/eg5vGPjh9Vz
3ti4LSPPA3EI7JF5L9nnVH+cdF7qx0Icp+I7cOzcIfgr6bf0eZV3UdVZYN99
3Tz3zn1MrN9Sfxij+2Gn+bZV31DzYZrbgB51nq15jWX3AfDnSTdNyxtpTobf
c5I/1Pe387VSPzyQ6+b8z1Q3aT/FK05+0e4Hv3PlzJV/cvKj977g2zPPO3i/
v5l58YqZPdade9hj9v7ezM2/9ZVLjz7t+plXXHHdy27e66Hn9HWP++D7bn9g
Q3y+59vONDYuJOS5IO7uer3U/zL5OZ2fkfSW7UWqc05xvMQj8Jj5zP2aU19m
29tqDoR1DOfvuvhKh7pu0HWAKf/Ucx+MfF71D+N6mC/Mg/bvWv+lOkP7D9lP
6q9T9WMzj9Bvk/1wP/q9IPFfxYeuT019HOjj5/P1+1nKp4En//g9f/TpJz73
2zMvOeak245Z9p2Ztz1w9K3HLPvazNM2Lv/58+79XsQP7brHJRsfvHrmw894
zeGnXHrNzEve+y/X7Lnyhua/xsb/D/K+aL9e8nNW+St+rm2vnVfvfICUH+E5
6pV+S7yX+C7Ve6V6jmS/0nwj21PPAUr9XSrdmdbDn9h959+a/9je85NSvaL1
nO8X18XZr+nrbf2c6gjMf7y3uf4+zYlyfYT7xFT3czVXK/Vdq54j9w296Lvb
vXn1By6bOe0z737hDktuGvjtig0XnHH6Ud8b+JH16MLn7XfKbQecfN2wfr9z
97njyj1zPmlj49aI7pdUvd85ToBdSX61ys85tl7Pdhqeq/qtYF+to8xraZ5Q
ioOlvBnzq/P8Ur1Bqrt2XNF5m9Pmf1T9UlKcifOmfoTzufrQG99w0r6rZj58
+LoPPu74VdEvWs3ts3+A9UkPevuUP1rFzVhfxc2qPNDEd45bp/s/xQ3dr93z
mbk+nAf8TR+Iy792wHmX7X7loP/gPfPgey87ePX+h105rL/q8bucdORXrx6W
n/zNw3e97pwrB3488c2ffdthO18/UWfR+rBxIaN5znyWtvf6VLeQ8ryr5568
FecjpjwQ94sy78ETngte5amkuJ7n5nC+Vb9qv7+7j1aKZya+M184vyTN7/Hc
+areLPUHO2GHiz55+lEP1VHe9ZWz33DhxpsH/rv+2Cedesm3Vk/wYLqe1oXO
k/H5cxzWh34PqeK9vp/cl5TPE4+nuvjqPQ4+NL8lNO9x3hyHfyf6FRDng//g
MXgQvqt4Dz8ocUTrQ+xH92FrXIjouJzj2mP7J7Gd+5Gl+ib7cxIP2r9Vxe/g
O/sXx+Znmuec5wHaTrteIPX/MPr7fT1s/62jE+/5uMwbrj/wctKLiQfNB6d+
4t//1e/fvnIC4UHsdYoPVnrQfQSs89xnrOI9n0fKf4H/+B4fp3nPy0kHgu7D
7vuHz+3/TnXyjl/Cf/AXPGU/p3UgaD6E78yPbMfnxAc5nvm2e43bNsJn3I/k
fxHPJg4OEicAl3552aPOu/fSwe+BXU7xrFSnl/oy8vymel7zXfJrOg5ivrnx
L171kkNOmcxfT3znPBHbn6TrfN7u6+l6APiOzzlOf691oPtRp7qHlE9o3nPe
peNqrj/H3r/sPz/+T5d9+sbB/4kOfO0/XbR0+TG3RP5LOtt1Gc7nNM9PWy+Y
6sld/wA/et5gmltvTP5O817Se6kunvMlrkd9u+v7uO4879Z9PM9V/gvbez26
Er57z8s27rjkSd8a5jPNt91rnF8cO58k1dukOBzbcx/++be/8fodliwZ+Iv7
+qt3v+aTuz7y8oHH2A7kvc985+3Ji8YOJj+a7UpVd5D6WKQ6BNv1lGeQ8hYr
/rN/1MuV33ZijtKLfmfHZ5947cAPqU4DtH5I+oj4pPWR9aB5w/7gVIdX9TWz
HvrXdZ8644wbBmR+IvYXP2nKk/F7h98P/Duk/pjO16l0oHnP/k+fZ4pfWv+l
fnspHmgeTHE9kOfKx8t5kLd67I7b7XbQy68e+A+7YH8niH8Uu+B4YOLBlC+K
nUp+0cbFjdPWjbpejjoc/Azbzf6DlxJfVXrOn/Mex+fEy7FD9jOa1zynJfmb
7M8071V8Z11pHoHfzGvmPecjJv1U9RnFnnFd+B76e6R6OOJl19x+5C9fd86q
mT877leWv3GnyfiRj7uKn6V+nykOmObPO36Y+qvxPZ7f5Dm1fg+x/5Pzg9dd
Hwi6X03qhzY27pfqYdzHruK9sXG/lKfJfcVzV+l2P288Vz845b5r91y5YZiP
xPOMv9N8luJ+0yJ+Vfyf2K32f27bCJ8RB/n8+l/f/sCLls3stHKXZRsffIiH
uD95TzNPJV5LPFdt5/0+/RF3LHn9hVcN/hTqjVI/pqpPVcqfs98y+TFT3qTt
S9J58AnLvE9jZ7HPVX9R6zr8cXx/0mW2++bd4+56/5sPXbdq4EHQ8TP01PpP
H/q/PnTkTQPy9+bN1IfF+jDxWeprPTZv1PeFrwN87/cW9zdN+s/18qmf2Vie
S/OHXI/v95eU75LymTx3y/5xeI/71PWPqf+LdR/+T+yN/ZcpzlfF/Ur/6Kz/
k7/DXzTf9rdxfhH+wx+AfoP/JvyOr3z3R08/6uyZP/u9XZ+5/XFfjjzo9WN5
D55jP8THeZ4cd3A+S5r3al1X5WOmvlzJz5h0EQgPmA/wu7kPCd9nPZd4duYL
xxx56t03DfYc/kn6JqH5jniZ+e4Fv3n+R+98y/VDfBZkPfbGyz6uai6g/aNj
ec28mebO269rHuS9wH5e18W7nr/K00l5Uile7TmOnidv/Wf/edJ/5j2eL+47
53OOzcvlfHju4D2e51THYESvJT1Y+TvZjvoHsMojb9y6sPJjovO9He9hSXeZ
v/BDbqquS/7NXzvzN//px8+8afCTVHVpztvEvrjO3Han6h+WeC/5j+A521Hs
i/8eHsReud4v1Q273gC9ld73E8/BQ7b3+EXZL/yVeA10fA2+/PgFf3n9Oe+5
eUDyTdi//azuC5f6j1XzHZyfYr3nuJ77xfh6Vf1HU92n7zv731OfoQp5H3C9
f8ob5vj8/pbyW3zfuW7fedU8R85z4TmG9/g77MVT3vTU26/c858HdJ5m5QdN
/Ek8xvmf3L+8N9j/2fG/xYXUD1APg66LcbhZfVf5L8fG9Sq+4+/HzhOyLvIc
FffjTctpnrV5tZrPZ97DDtmes+w+Ws6P9Pmmfhrud4YdYznxHcjxgGxnPQd+
/3dv+t2dD7phZvX7H9xpyZNuHBB7Aq/Bc+jGZx/5w6VnXvYQ8r7FMtvDl/Yz
pv485rNUl2C+ZL9+T0CHs+z3A8c30/FV/k54wvOHqznr1r+cV+rfVtU7wHN8
7r7XiffQdSlPF/4jvmf+43uIx4GJ56aN/5k/2T88iB10vvl82+nG6dD6HTsF
v5FHlfhq2vib+W1sHkv6Pv6e58l5m+YD817yCyYerfyXVX8Xz+ezXcR+Op/Q
85NSXULlVx07P9B+LfOe+RAeM99Zz5nvzHvmURCeo87c/Vdu+Lkv/c5j9r51
4D/0IHac5Wnn+qX+K47rmfeSfrZeZ737tqU+CM5LtV/C9aFVPaP7uZoHq3yX
qp4h9fF0nZCvO7znuVfky1X9PKflvaoeHh7kuWl9t3UifMd9br4z35AnnHQd
2zlfc1odN9b/af8p74mp71g1Nz3xoue0bCrvpTyW5DfDr2edZ33pfDv3d/F7
u9/D03Enf6fzUp715Ofcd+zMpM4z79mfCR/hJ/X18PHDeyB8A//xu7Ffx9NA
673k70y8l47Ty+hnnrMqj6TKt0lz+vjdU96Lec9xSKP1qXnP87aO/+knfvzA
F3IcveI99zFje/Mey/Tj5L3c/clS3br7mSUedN9s74e4H3oPPp5vu76tI/OO
WR78brM8Qb0mOn4sH5GfMlddl+J/c+VF8sfS/FE/h+ioNIfMuqnKi6z6eSb+
S3xiOwivpPNy/M/2yXUR6JsqXz3pUvQYvINeQ8clnoMn4TuW4Tt0UKp3SH5W
eM88mPJLuV5+j0j9RBP/wA/O43CeUsqP9XuO/bMV/6V58dZ5rvcz73E9eA6c
j5P4PM3hqvLH8Muk7bi/2Y73WfKzXeeHvnSde8pzMY9VflG2h++wl6xn/7+6
5rdv3f+wVV3vt0DQ/mfyMCs/Yvrc+ZnGxHOV7pu2voHtee/lOXHcnDoG8x3L
yc+Z4mRVn5Ox/avhFeebpLwHzwGo/JnOD2X/2PuqP7/5Dl6Br9BzLKP3zIOJ
50B4zPyc4kzmP/Ng0oP4QanDr+J+if/gJXjafV3ME46jcn86r8TzItK82qqf
S+oPa96z/7zqTzq2vs/5nim/1M8Nz6n5MdU5gMT9qDdAx2HnnKdS+UOTDjTv
eX+d77mwkPeOtcc/5YL9Vt84s/7yHx297NMXT9SDglVe5lheSpjyOif8qMX3
cXzJTtn/gy4Ek37j+Uy8V+WLjOU96wHsoXUBmPqaJV1pP5vzFKvjNd/AW+SR
fPdRP16z4r6rhrxM4nPmOeuuxHvWuxw318l+Nf+90ToPHuT4Oe6K/+zn5Dit
H+G/VMfu3xN+c3zQfV2qeJ95r6r/c79u81/qszOW/8x79me6vsjxQPgPhP/Q
e+S5uL8nfc7o85LmFiUeHPp1zuo498Nm2fmj+M2oc59ve7+tI/cFvwt8V/kp
Uz5m0nnWc/DVXP2h8GLiR29HfkPKs/S8TNDxPr+fVvqv6uuc+M72Iuk889XY
+KJ51XXpjgOaZ6wb4Rf8ldZ5T73uI//jfe/67rDe9QcgPJTyY3wcoPNszH+c
57MO+c5jt9tuUj+63gH+47j5uyrOB1/Yn8v9l/q3uF+q6/hAjo+/Z737lyV/
Z4XWW86jAiv/u38P/y7uX+bniuNJdQ9cH8+3dd8lEDuHnh3uc/XhhOdYRh8m
HnRfNOwo28F/nhfPeWGH29+5eTBdR+oN3D+l0k3JX2neSjzn9cnfOZb/vD31
qt4+xfUcR7ef0/5Onmvse+qP7Lia50rT19F9DK1PzDvYVZ5r56O4jsx8y/ea
B+wv9H6x0/BL8nOmugTOB/6AD/h+92VJfkq/B6TjATlf60bzHutdX0j/aewf
/lnXw6d6cuoxXG+R+nemenvnk9rvmeYGV/1dUh27+5bBr+a9NOejqmtwfovv
cx9H6nOd3i+5Ts6/tR+UuB95Tu7rAj/hBzUvVn1Ak3+U9dhb+Lj9n5uG7n+J
34Lfz3zD9R/8mtJrVb5KFa+ba97L1H7S2eN2XK/KP694z/VH2EX3ka/0X+rT
W9UHkEfhuTXWf65Lr+a9cz4pTuj8T8cBzVv4M+E719+B8Afo+sRUJ289at7j
d9n3H05/7N4X3Dysh+fMd0Me0Oz3uc4QvuJ8huOe3Y/9m+Y/eA+egIeJHzre
598h3bfuB+r8lsq/meZbeT4693PSe8nvmeobEu+l54XvT7pwbF6M++uS/2L+
u2aPl+6z/XHXDHEU6zvXp3uO+7B+VteZ5+wXtd9z7Jzsxv8XeW/gPYU6gYM+
dsT+h667ZCJeZz+jlyveS3mY8E/SdZUunDZ/peJF92VJeo/PE++Zt5ynaf5L
/kX7S5NecZ/JhJ7fk3QnvFDNxTFfpn4x1mnwmnWd9Z0/Z9k8nPq+OA5mPye8
xzI8Rb8185/ji+4nM/De7N9x3En3uX5h0MOqo3f9ZZrrnvJmzJNVXqnr3yq9
Z95zXuxY3rO/2Zjm+HHfmvfMl9Z39tsS76vifuS/OO7neveSD2d5z3kv5kP2
23G/uaHfD3gOK745dPkdq1fc9/Vh/S6PP/PAw3ZePryPMN8nxfOq/Vs3pvyX
FPebNq/Ty/g3Xedj/nMdn/NaeM547rCLLCeeSX3OzCeJ/zw3LmHqm8Xn6AzP
e3P+pvsLp7qHYc7AbNwKXWT+gyfIC8EuoQsT/5lXnLdi3nN80roi6Tz7Oc13
jksS74MH3e/bcyJchwBPuK4++TurOgV/TxXncx/PdN96/q3PI/Hc5spvMU6r
95yv7fkq9nvCf+5/Vs1jqPI9k85zfJD6Pviv/Z3/F5Pu9Vw7x1/dP2VanZTm
/yQ/qXXetPqx0n/TIvezeS7F+fz8W++B5r1UV1TVEaT+9diLNEfOc3TSfDqQ
77d/zrw72H3Vp8OL7ktGvAOdlPiL7bDj8F6qX3d/llSnZx60nkP32c/pvBnO
2/mkzs/x+bh/iuNxqZ4h+Qtdn2C95zxM816a0+e/sx6yf9z3l/NTfXxpbpF1
Y9J5FToeUPlFU18z3mPhQXQf6LpG9CH2BB1IHBA7i38tzWn3suvZ4T94L/U5
3tbQ/E/dI+8PXk7+y7H5k5XeMk95vxP6TXw4oQtHzslLcT3/Hfcl72+J7/jc
zzt8Z91n3kv85zxKx/c8n9P5bZ7zluZwp7ncLDvu5/O3LmQ9+tB+1OTndN4H
vEd8C3vP9thJ8x7buw+19Rffx99ZF8Jv1nuJ74yJx4e8ztnj9vyHxHvuK+a6
SHRfqu9L/suk98bW8aU8TsfJrBer+KPfJ33c0/JeilOnuF7qZ21/qHnP9b1+
fuEj+Mr1C+RPgO4DUyHbw3/kH2L3tzUe5PeABzw/nOuPn5LfhTo78xTbj60H
r/gv+Sld55f4amwdQ/U51wfeSbzHfZ/6aVrn8T6Ov/MH3/z6nW+56JYJ3kt9
zJK+c34l9tb1COYzv6dXc8id5+m+I3xuPjU/wiuOi5n3rNuw6547YJ1nPeW5
fBPxNvEPdt/1CRy3ec986joKvmeC9+Q3td6y3km85bxM89+m8l6q17PuS3N6
XUeX5iJVcUX2y37S3BGeoyr+l3RfFae0/7PK97Ru5nv4nL+zn9NxP/dDMx+6
XhDe5L5c7HxX5fNwXVMdOXzIctlXRfmPSc9VeZRpO+e1pDqGTfVnmnfJz0rv
oeY967qE8B/56KDrGpzXWfUls96DF9KcWvOp+c917am/Fsue0+Bl6ynH99Bp
rs+Dv9B75id4K81dcL4Jfsuk/+x3dF6J8zsd57Mu9XEl/qvqD5IO9NwG7i/i
wVW+iuOAiffMc76fHF+0TnO80HHMsfN5vb9UZ5n4LvWHML9Z75nnxurVVJ9k
/w/7G8t75rlUJ8/21RyHrTUPtDpe/Jzo3+RnrPqIJf4q6wMCv1V1fNV2Y/M3
x+o9eIj72fksr17/y8f/0t9P+mkSz1nvWffxfdhjnk/bk5THgt7j75237/pz
2yvysvncPFb5OT3vne2cp+q6Cfjvhlf9yR+/asfrJvSe+cznxXFZHzpPxv2o
zX8sw1Mnvf3y+x+8+vqJ+QquV+d4HPcDXedn/y3PIcsV76X+1Y4LJr8n96n5
kvzKKg7ovmR+f7IuA/13/n4ff6oTtG4CU30Dvw/LKc8zzUUxn1nneTvntXnZ
vEm9E8v0vXbeiuN5Xk518F6P/jvrWUtP+Phr75x3vnq4EL+l8y3H9sms9FLS
hxN86LkKoS9LVac3th/MtPUM8JD5bsNde1181j3ZvwnPcb9jb+A3+M75neDp
l3zpgzMvviXmd1Z5athXx+/T+6br0lPfGfMWvJb8YGwPH9ueuH4OneQ+m/AB
/JXqD170O9993om73DChD+Ex+mOa37zsfp4cR5q/7joJ8yII/6S6Q45/rryX
jov7z3UdXH/yd7gvK71nvWjecx6W+dN8ZT9rxX+J9xzvM+85v7iK7yV95z5M
iSe9zHbUn/i917839jPx11j+c34M9p84jvlva9N5xok55eRLz9p9+oibT6q6
PPNiiu+l7Sfq80L9QaUjzXupz9lc+1STf+w4SzV3KOm+pPOs95jfDl+435L1
HcvoFudT8Pw73sLfYzfgSeclJP2X/Dnuz1j5Ze3vdLwt5T3ab2c9RT6L9V3q
2+llfy/6j/XE0dLceniOzwfdp/NK9RYpr9P6yH13Ul9Ojtf6hf1wnOY9MOWv
JH1nPhzLe5U/s9J/7rvOsv2vye+Z4nkpfs/15P2C/aQ8W7bjd2E9/iP8QtR9
ue59bL5L0n3Ya9c7cP3nm7c2FXleOS8w6Tr6viW+sS40XyXdlZYrHVnV9811
/mz1Oe8DjuvZXnDf8t6X4nvWd+Y93v9AeI98l8R7qU+Z33Ox59g99wHx3GzO
g/Up3yX5Oc2bLPu4rR9cV+5+LdSpsR3H4/pp9+tM/ardTyz1r07xP88BZNlx
Q8+L4LyMfG7/7dj5DZ7Hbv6q5uyxnesJxvbndB2M83CSTnOey1idhx/GeSOp
TtTrq/637qubdB7L1nHGFPfw7+z+ZilPs/JnjkXvF/5wXdt881mFnsOU8k2s
68bm9Vf1At5/Ws9+Up5m2k+qa9jUPBZ0P+9jPK/MX05xaiPPQeI5L3P/u579
FSe/aPeD37ly4n00xfXMe9Y11kn2c9qOwUspf4VldF2q38I+8bnnG9lPiF1y
Xov7jZmPh7qDWZ7xnFnznvuIJd3nv0OXpb/zPAb4zHksvMdz3NPG91J+RcrH
rPSUeW/aPBN4zzrJdXuVjquQ+y3xJ99r3nNfPfOc+3S6XsE8aP7juqf3XdD5
teg88101x8jbpTr39Pfev3WS+70s9HwXjst1IeY/84vjcu6zmfiuylOJeS7F
/IWxum1sP5ax/lX6CyXeM78l/vPcoaQDUx07es9xvqoON/EefZGHOvHZ43Ie
ivNb2K/1Gduznv2Z97yc6thdT46Ocj7LUO8nvnbfL+e3WLeleF7Fe44Tuv+m
6yXIT4WP7X+xfzbNDTLvpXhelVdY5VXOtV+Z48eJ7+aq99LfmwfZzrq50nfO
m/b7q/nPf8/z7Liq/ZvsD17Bn1nVqY+t26v0X9UfzX1KuP/nm9cq5LzH1pOP
1Xvmi6QXK39n2m86zrnW400bz2NOIHWnlX1J/cgc16/qGBzncz0fui/lc8J7
6D77N/kc3iOPAbtgPoLH8FPiR4KfzO987r4cXjZfY2c4T+yd+Q/+gl/43Pbc
cTLznevXrQON1m3OfzH/sZ35j+9L9QuXPf0b+5y4yzcHHkT/pethvZfqKp0v
mfiL35n9mS8q3rN/k+WxOm8s77n+L8235f71/C3XKaQ5lhWO9eOkuB7XGTuI
f9R9xuA9981KdXtpbsO0vOc6CNfFuv794UL0HHmF6FP8dORpcl1ZBrkuLKf+
YalefHPhRP+yEM+r6vLG5nEmv6x5z/yU5ipQF+Vl/33SgX4urPvgK/I7nYft
vDXrO/chBK1T3M/Ffk7nM2CHOB/XQbgu3pj6f2JnOR+Wrbtct8f+iJPhP7Rf
1/2vPAeevBX40TrQfUPZzrxovmM7528m/vP5g7xfpLnw2FPn2XqukPnK+aAp
Ppjq8OAX9zeodGbKa3E9AnUDY3mP65TyVezv5Hvcn9p6rcpTM7+BxKW5vuio
5J+seKqaU5TmtCf/p+e9n/aZd79whyU3DYg9gu/mu+8Z7wkpb8W8l+x+8m/O
1Y9Y6bmx+m5sfcLmmrOQ+lCTZ2n//Vyxine7ngG9N+Qfy5/JvPHKvwnCf/Ae
/JDyUVLdX+rLnfq4pPyYNP+Wz7FP1Pe5Pxnbw3dpvlBVf4gdxW67fxrfb90I
H/L+6c/Nf6kPm/2eSf84/7XKe7F+9HuJ5+KZ91K/FPdnsV/b+jP5N82X7A/7
Cg9Zv/KeVfGe81mc1+n4XtJr0yK/C/G7iX7UzLke2Zfa/agrPyf2AnQcj+9/
09ff86IdlkzO6zOvLZT4HueT+q3Ad2N1z9i5QmP5pMq/tI5L8xbG+mvn+nkV
/0Pv8VzwHpfmqPvz1J8z+U2s90DyPOE5o3nOus86z/yIvTHvJf3nvJeUp5n8
bYkvPd9hiG/N8g88kvqnpDz+CvnelGfhPl58L9fT/AivoUMd57PeA/f83Xc8
f4clV0zwnnWr9VjiPey9t+N3c52Dt0/1447rcv2sr6q4nuts3L8Fvcd+PAcv
5Xfanwmy/6T3Kn8leqPyZ3Jd3S/a8Tsj9Qmet+45RFV8jv2wzPVMeZrzzWcV
ct2TXovzDYIOTPxQ8d/E9sFPOZGHUsyhTfHCqi/12Djf2P7V7l9KP3X7MeAt
eC/1o4bPqjoH9ytLvIf9J16HLnR8ir/HP0iePfZ62N+sXUj1CFUfYudpprhO
mlua8jbs14MP4ZfU15Lt0vwaEHvPfjgP+29TPkjqlzL0kVHeiucmgdSto1vN
Oxwn553qEsbqPc9HdPw08V56b/H8qYrvzHv2c7oPpu8fz3+teK+avwA63g7a
H1PFQ/j9Xec89BebtS/OI2E98wGoK59Wf6XPz3nrE97/rlMn6xLS/j+3fvld
b7loy/Mh38ecV64X9XXWc4m/jMzHG9uHrMI0F31sfd6m+is3df9JJ6f9Pf0R
dyx5/YVXxb7T7nvivK8qvznluVj32f8J75kP/by7jjfVcbufZuI9969K9hBe
cD17VY/m/A3rrNRnxf07rQsTur+m+2Um+4/9TnlQ8K/5m9+N93n47pAlnz/9
9KMunfRfzp4f26fj8ftEyouBpzh/7j/znt9jXJeX8iKrvirWd0ZvZ94z33kO
gvs/J/+mn7fk70w6z++33K/Ex+Czz6//9e0PvGjZwGf0I1so/sP5Rvza5Lm6
j2alj9Iy+bJjeS19D/or+UUrHkp8mbb391Tbp3lD1nHmu2o/oHUZdt71PxXv
+Xky76U+1OY9+zmxY8mf436F9oO6Ps59F9McNta7n5rrFpJ9Tv0gzX+cD/zk
uJnrx83rrtsDnY9p/yXL5sFUN2D9l+JyrtuA/8Dh+Z/lc/fLTvzHcZnfHffk
ex2Xqvqv2q9pvkpovnMdhdfbr5D8m6DnIFT1Cqm/ivnQn/P8u96B3wW+I77n
fJCtrS58S6OvA/bNeZhj+aviq0rnpXzPucbRkh+26ss51/jc2ONPPOfjRIdj
D7jfeZ5SX4aqL3V63qz7qHPgvsCeY/9tP5yvzTK8Z3+q5yA5j9O8x3u3l+FN
9u880JRfUvlB7bd0fqXnzFoXJj7EjqW6BfdrGT4v9GnKrwHNZ65bRHfyva5L
T3kf5ln3NeV7+L3Rea4X9LwqlhPfWdc5Hmf/o/eT6h/clyzls1S85/dJ6zvr
vooH4T3uR/yIreOmw3SdeH9IPJX0HHqG98fKT5j4kjjXWJ2Z/IoTftBQp765
5+iZ11ielr+9P55n+/n9HpjyNllG93k77JL5aZ+XH7Xv0uXXDvoP++j8dOyL
59emOnfyYtI8JPNSqiMG4QHHz8x/7juW+M95jUO/4Vne87xZ19mZz+A5tjOm
und4ieeK62V+g5/Mh/CMeQ+/KMeJfR30p/J/zA/OV3F8135cx/XMP2luVZrn
V/k1E1qPOd7s+vSk71h2PqjrGvw+av5jOfk3eb65zvS3+Mlv7PTq7x9w94LN
h1zoaB3s+bnmNffPTP00U17l2P6Xc/Vnpu+bNt8SvOQXTlh7wMnfiMdX1R0m
3p62XhGd4Ho98563M/+5T6f1ovt18vwOcT/ZP9fXOc5h/yd2Gx5EF7k+37ou
5ZPbTnmeg/NOXGfgfjBG+/FS/YDR/VSq7V2HAHruA/V/5KmQv+L8Tc934O/S
/Dv7J5MOcp84fle+x7zPeudxprq7Kg5n3nMc1zw3+O21/zSnNsX1Eu9Vem+s
rktxPsfzOK755o2tFdP7AHFR15unOnX6K7Nse+75sp5PZP9g4q/Uv2Us7801
3yXpSes5toMnN7XuwTrScT8/XzwXKZ/F/JfeO9lf8ku6DsH6znPwsItJ/6H7
hr7LivMkfZd4z+//fB/8534uyf56eci/kL/Tfk+vN58lfjPPVXXo5GW6D2ea
K5vigdaFVZ8w19GhO1PdivNtrFNTPYT9qlXeruf0pLkNrt+r8mPsX4fnWG8e
dJ8j853nPye/p+eMgSlO1/puHKbr5H4s8Bp5nua/VI8+Vtewv2oe7dg+KmPz
NaeN76U5SHONQ1b+X/MpeM0eL91n++OumeA/dB/Pl+cU+TkjblfFCalrcL6b
35dtF5N/yf1fnO+S6rL8Hp7sk+0Sfzf0k9YcV/IdPU8i8SD2HT0FP5H3D6LD
vN51d152HYLxVx77iweu/sDVE/mZ5rsqfzXxe5W36fcbeM28x3rrNvjA9eZV
382U32tdl+rpnOfieOJY3kt5na5j93tkiu/xXKb3Vfut55s3FhvyHkEdY9J7
5L2M7duS5iBUdQvT6rWxeZhj+2k6TjlX3Vadd3Wc9rOS7+I8r1S/7r7W/N2x
O26320Evv3riPTPpPPOa81B4vt1v2u+/aY4Rus/1xSnfwP6u5P+0HYeviHfR
PwS9CQ853xG74/zLivfMbxWa53wcIDrPfWMSj/l6+Hfzdqn+3/M63G/Gut15
qPZ/21+e8lbczzXpOvOdec91e47zOj8m8V7ydzovuuI7x9353O+tVX1b671x
6OtEH5tp81GMFV8ke5/8l2P7Z47Fim84/iqfZlodBzpvZ655pdT5ec6y439V
XYN1INub//yeneaCOr/FfjHbTXgOvYJeSP2nUp6L37v9OX9nv17qD530FXad
OgR4j/hZpdfMb/ydv8/8Zv9mpeMqrOJn7M8849/Pv5vjd65HMF+6jjP5q/3e
xXHZn2DecZ2N5/+Y5xL/uW+Z70vH+VL+dPJzsp39N9QnNK9tHrSfGB1n+53i
eug48j8df3Pd+1i9M7Z+YlP5B/5MPFflpaTvSX7dKh5Z8WCqm0g85znN5j0+
d74Ly55TlOyn7Yjtk+vznKdnO4j9dD5mVc9gNP/ZnhPfcj4G+ZUcH3wH75j3
iNdZ35nHWE9/MNYbzXN8/9A3W/UDlZ5L/dA4P/Oe+cp8B+LHhPfMd86DcX9w
6kHdtybFFdPcPR+XdZ7ralwPD6/dddy1zz9xlw0T+i/589P9br9K0nmJ9+y3
IV90vvlisSHPC/4z9Ijnz9veJ35K/Ugq/VjxQNVHc2zdn3Vpqjufq35MvMd1
rfRe6otWYXpfdLzA8QT7YeA/x/fGPv8VD9o+YJdc5w56f4nv7O+s8l/sh8OO
k5+CP9P+xuuPfdKpl3xr9QTvwWcJB/6a7Wf4t+df9t41n/3KkM/KMtvBg45z
sQyvcx4sWw+7nt/6x/rPvJfmC8C7juNZd/I7uw+380eTP8H3i/OoUn8U813V
/7WKh1b+i1S3wHujeS/V2TqPBTvdem/z4kEfO2L/Q9ddMuRxVjqrmls+13kK
Y9dPq/uqfmYVz6X4Y3V9Er9PWy+Y4pZe7/fHFPezzkvvnc4XcD54ivfZLth+
uj4r+T1B599ZF6S8c+s+5y9UcwXgP+wz/Od8RXRYxXtG7Bo8N9QHzl5nzxFI
/j+fX5pj4f6mnvOb6lNs71N9uvnO/cQ5D3Se9ehYHZX0nfuh+rwT2o+Z3s/8
vfTJTbxX6Ty/f7qfC/3FsNPdb2XzIHOOqNdDvzlvMek8tqvmC03LZ9ZD0/79
XPm10qPVHPi5xhvniqn+o5pjBP+lej7nubiez34ix4GSn8v5LthD2y/X9dn+
+j09+Tmr+mPbe+/PdRD484jHpbmw5M0k/yYIX3KeXKfUTybFNVOeo+vsXEfi
9xKQ7VPcDH0Hmu/8XsJ+Pc/ReZWcj99vUtzO/WBdL+P9+PomTP5T853nYDqu
5+eq4j3zH3N75psnFgvyfgjfYT/hsaRn0ny9Tc3/mDY+N63eS1j1lUl9x+D5
1Dd0rP6cNl8n+Tdd75D6Wjv+l/QeiH/Tcxo8PyHxXso7SHkJtovwAvaM7dkP
y6neuKr3S/2r+d6qfxmY+rOQv4JfE770XF9/f4qjVvn1oP2AXC/3VUlzy1Nf
TPbL8bv/W4qHmXdTvi5ov4L7JzhuN5bvKv6zrvVcWM99tt5zHCHxXqpT5/dB
f843T2ytONYfTH4seS2VP3Esz43dbq7xutTncq7HB3oO7Vz1ZDV3YWzeTcIq
HljNsU1ziVK9H7znOUjmOxD7aj+cedP557y/m/dcr+W890oHVnXurLc+9XrP
gSA/Bp5wX0/yOHy86TgqrOrY7Jfz9Uz9qh2Hsx5P887Nt6nOoOIp8xzXO+k8
0H6IhKnuIfkx4bnEf36eHMez7kv94T1Hk3lA880fiwXNg9gjeI+8FttleCDV
l1f2vbL3Y+v7kj91Wj+r/ajVfKU0P2hT+bXSg2N5z3xHvR/vBbZvrm+3X9Nx
d/hu6Ps826fT9sK85/ksY+vak32zbrUOSTrOvJb6TiWdmHShz9t+Pesg7686
rkrX2a9o3uK6ue8q9RueY+dl56+kuhL3U011D/yuaZ6f7wPnPXEenv/r9ybn
aYJpngV/n+J1CXmO4Duw8mfCe+ZPztf9prHXD9d8um0Fb/6tr1x69GnXT8wh
wl57nk7KYxmrX8bmb46tF5i23iH5N+G/Skduqg52XmrK5xzbNy0tw3/023H+
4ti4u+N8oOdrWsdZJ7n/mJdt9xxXsz21XR07P834qfNfd9Caz94Z9aB5p+rj
VfWVSfNsUvzR/sPKj+x5d8ThqL+Ad8wfrm9I17XqX2Yd5fib+SrVm3t783jK
G0685v4N6b3Lfsyk7+wHgc/ov5CeJz9X7J98i/nmg20FmU9o+29/3Vhd5s/T
39neV/2jKx6s6gngO3/PtHyX4pzT6rnEWxXPjfWHWr9bzznel/LQ4Dnej9B7
tj8pr9N8kPom+v0e+4dOQUclPeF6+dRnK+k6+A9EByYdlvip4rnEe4lfE987
zsV1gM+4bvAeuo04I9tRJwhfpv6XiYf5fvJzrj3qgTv32v6hPgeO6/G9VX8V
637ef1yXUM0RTjoyYeI7/p7nhz5/7vvn+B7xXq/3nIXWcw8PoqOZP1/5EfEP
jvUrJhyb55/4xbw8Nm/GearuPzrtvFz8v9Pq2YrX2O9cdZ+Pw/xHfnTqy2n9
57gF77c85ynP03znPmbYc/Nkmt9nfky857iW4062l1UeTIXe3n1jjBXfpTho
stM+X3jFfU/dl9R9uSs9Cx/4OrE/+M597TyHw35r/97muzSnMfVRof485alU
+Zn+nP3gp+R5sK7jeWA9y9aBznOhH8t888G2gsxFYC5d5TccG6+a6/Zj6xgq
vuU8bP/hNXgu6bj0+VgcO1/I/s5p69Wdd5r4zn1WQc8xSvNR3LcF3mMun3Vf
4hl4lf4Ttuup30bivaQPbDc9H8LHZ7vH8cFTSf/ZT5ow8aT9wL4eied9PuY7
55ei4+i/5r4v5K8kPctxwGvWVVw39lvlodiPat7z3Cvnf/q9hf7Q1nkpX6XK
Y7G+47lYe/xTLthv9Y0T/krWJz40z52xYsWeK++/ZTjOnoe+ZXFivvoV173s
5r1um9BVhy6/Y/WK+74+4LT9V8bqsJQvmebzJT5JeSmuM3R/NeKZrB/bHy3N
kU/zGqb1W25qXUOlD53vid1xHqfj9Pg54TveZ+FB9uO4StJVVX4L9hR7W+W1
pLou/t48aH5J8UD0Q9KBVf5l6vPM9ztOB3/Zj4ifF7+YeQ5/Gn5NdBp1FPCI
6+VSHzPX9/M+4OPm+KwXWc/xwV/+fVy/wnFy/3l+unXe2HqEKi8z6cH0PBit
90DOk/hdyrPvfiwPD8KDVfxpc+m6yh84ti486TTvB942r4Hwnvmv0r3wXqrf
m2tdxrDdrP62f7LSeXPtb8bz6XwX+A2E98CUx5Z4KeUbJPtkPrM/NdUzm//c
/yXNQTI/et5alZeS5gTaT5mW03lzvehzQjzO9nXlmz755BtWXDf0yUbfOc/U
cTvXVZj/nafC+wjrrfdTXA50HQN/5/vJ+Zgg19nr/V6EH8P3lfs3pH7u1nOJ
7xzHw6+R8lSa3x4eTNeZ32usjpurvjOf2Y851/qHpPusDz03kO+3HoT/xuaJ
jr1Oid8rfZb6kk5b15f2T74nn8NnvLfyHIOuw3W+u+dk2t6kevWkf2xHrRdS
vGss76V8QdA86PmkqR+MzyPF51I9v+NurruD5+BB+sHAe5xflZdivoY/qvgi
vOe4nq9/xXepDx684fkG5rkzHv2+V7794g3D9pXOc7++hLz32V9p/uNzng/q
R2xvx/Jc8+GWQa4rfVrQE7bP8EClqyq7X9V9j+Wv9Pc+HvgtnY/9nSwzb9Dn
6eOwvkt5r0kXOg+m0nspL8XLlb6bNh+G/XO/VH6ZVGeU/J1j+/w6z8B5EyxX
dX9jdR/2ueJF7LZ1UorXVfzM/jgf+Mx5l7yPeC4i7xnE8ThOz/+2vkt+WOch
eS6j85PYP8efrqf71IDs1/zq48LfzPtFmpPu+2isPxPEb4/uNN8RnwM33LXX
xWfdk/NSqueoccvixLw95e2nuBr+wqq+IPFdFd+r/JnwWVpvvjPPpfpDljk/
+C/xG+urvjaJ/8bqtml5aq7o/W3u5xI/D/Ym8V/qc+b8Fesw7KXzBBP/mTf5
O9bbblf1Y6lvSMqzScflPp2uzzY6L8T1G+Y115M77yb9HvCOr5PPZ6yedv05
y/ASOo44IseBrktxvdSHz35j6zpvD9+B9iODvGd0/8yFicmOkc+SeCb5+Rwv
S7w1rd8y6TzzGdtRd8HxcBzwHH/nefDmK/fVdj5P4jN4dGwezFg/Z+JF9F9V
p8e/sbzH9uSvEu/dXPzHfhw3sc6zLkz5K+YNdBF2mWXn7fN5ZZ/JB3GdWZoP
n+Ymeb2/P/FZtb/UpyTVyTse5rwU7HfS247feQ6x9ZzP03xn/2fKz7Rf0+eF
7qv4z/5NkOMY+oTN+vedn8Iy7xmJ51rHLUz074KdY+5Q4i3sv/tVprzJsfG4
sfmc1d/bHwkfsmwdx985n8XzcdMy83WrON6As3yV/JjWXZy3/c/mKa+veDHx
nXXelvLHoPuqvmZVPh5+z9S/2vn7IHw484Vjjjz17psGTNuZPz1vKPFSytdP
mObnJLR+cT3+2Vd85OwnPvfuiXgjPOG8VOtr13NwXqlfWOK9NCch9Vm1PxO+
83xB9wVPui6tNw/iv0THsbxq753fuvoDa7uOfJEgdps6Nnhv0EGz9tN+Puuh
1Kez8mOOzQdNf+/8lKHPyn6n3HbAydcNf4ces5+T83T80vrOfJnyXZLeS+dX
zWGIdXrK7zRveXksr27p91Tv3/bb+S/2r6X+iSmeBCbeSn4rED8jSD6k9aPt
OX1QOK6q72Xynzqv3/mO7svl6+R5g/6cfF3HH93vJflnHVfkertOwXrP+jHp
PJat5+BBeNX1leY760bndaLjyEd59pE/XHrmZatKnquel9Z9Cwv5PabNUxyb
nziWz1IflpRPk+oPOA94CV6D173s7cxnjnOyzOfwpf2mY/Nvkt4b3hsKXhvr
30x86HwY7OvDdd+xfOZup626/0N3TMRXUn1D6jeV+M/xscR/5kHzHfP0WGae
On/H943VZ/CAzy/F6RyvS3Mvxs5bqubLWeeB5LOY7+B/rm/Sv+bNNO/V6OPm
/InzsZ7jS/Uv7kcE/1V1dI1bNxKvIZ436BrlC47VX87TSHn3KT5W+VPNb6xH
5zn/0jzHetB6j+0d/zPPsZz41PV+0/JepeecB5P4bdp/H37Gaw4/5dJr5v2+
hMfcJzjV9ZkHkz/OdtnxvcR/5j0jvEfcx/rM/srUZ8tzbL1d6nfjPt/Wc+6P
lvKFKp7jfSTxXMKU7+o+mtX8c8fvXJcH71Vz8vgcfwJ/V92XzYOLA/kdeT6c
b+9+LOYv7K8/T/UCKf6X/J2pTsD1BuY16zh4yLxn/2bSeYnvnMcC4ieelvc2
1Y+Z/i398rJHnXfvpUM+Nb87dprPx94vW+o+ZJn8gKT71l156x8ccUSem+b5
f2P9n87/tO7D72X/p3nPeSbO37Tdd12e/X7eDp5K/bTNcynPw/krzmus/Jlj
81iN9pd6brrPy3WDnBe/q/u1OE8q6bzue7lto3nDeq/KJxlr19N2VRxwok/K
7PHBR/Cc+Yv13o7PE9+R/8Ln8H/iQS9zPpXum3gPUNwt5W0mfjMPcr7u7+f8
FOo1uR8erjiF4yXer+0XfAdWffNTvmfKrzfvOR4I2v/JenjReTDO70/zBXyc
aY6F8zNdt2Z+c95K6p9pXYefMPkzU92j43tsR7131X8uxffM785L5ThZ5vvw
H3Be+Le4/8bma7Xe27qR34/73H7JlK+Z8lUSz9k/mXSe6+8ST8B79k+ad6zn
ErIdPGdMcT/vh/xX85x1b8p7rerS5+rPXOj1sKlvBUjfF/Of4zrYy9T3JNl1
81EVp0p5ndaD5gH4sdJ7qX+N/X3Yfey743Xuu2w9ldA6L/Gc14Oew5i+h+ua
5uO53xzr8QOnOG+l77gu5L3M9/3fuGWwsnfYcebOpTid14/1342tU0v1Ael7
6COW4naJ30D0jdf7713PkPgz9fFM18vvAc6rtK6reO/YHbfb7aCXX132hRh7
X8w3okvRXdhT/HGpf2Xq45ziVqlePPGf/Z+J/1hOc+Hs90x6J+meNF8n6TvH
z3w9rO84b/y2Rngt8R/n676cnhecdG01F8jXwedlngPJm5rv+7txy2Kyb47n
jfVLJl1Y6b40x9V60LzhOF6qD7f/0vktFR/izzT67zjeigdBxz/TnAaWzXP2
dx70sSP2P3TdJYP9STxH/GPs/bDQkPPynCP3Ozam/p3J/2l7TzyO70l5+a7T
tr+T+gaWmedlnZP0XfJrum+m8xcr/TO2DoG5wRwvPMf5JB5M8wg8n5h6cOcv
petifnTdut8LOG/6DLj/89byHDRuXnTexdj+z5UedD8T90vx/p03aV6xDjRa
ZyV/Z+X3TLov+VNTf9KE9g/b32l+cx0ddpnfL/kxHa9gey8vFD9Psj/UBXu+
rfvjm+/Ma+43Us1zsL4EnQfjegiWrQtTnJD9ue+yz8f2PPWZ5O84X9B1aonv
OE76b8F71rNDn+vZ8zTvmSf5/fj+qj8Cz5n/zvzm3y/xvfWd56w1/y1OdB4D
zzH2GP8mPMR9xzLvvdhTdFAVl2G980L8PfCI44eVXzP1UeH7WE71BQk5Dq/H
7+jr4/5nVV9ojovPiQvid2U7riO6baHH6TYVfV7cp9YN7quf6vuqvJeUtwGm
+JZ1nnnOOqnCpGOqfpj2T/rzdL7mP44bPQqPpX5unJ/1nc/LvIWem+gjpPfg
sf1oeQ6f/og7lrz+wquG4/D1OuetT3j/u06dzOOa9n4ciz0XdmEgvx86Hx7g
fuO9OvnFQP+e6fdNeYPeDjsPJt5Jc2CtM523yRzNnVbusmzjg5dNfB99aNgP
24E8V+R9sez+NXwf28FnZz1r6Qkff+1DfIW+4vNXveOk8y9/0+0T14ffY7Hz
XIXmPc93x4473ud8z+T/rPIX+R78nimv0brO/Jd40J97PnrqTwNyvPSNRtd4
blyqR+A84LlKv1r/WefxO1W8l+LZsW51jnU/vE96zp3zh7FTyb5tq8/f1o7w
me1wymdP+0lzZKq+jWPvG46P5xIeQ0/xnLEdx4+/1nn7rr/m/md/PAdcn3Q9
QPgNXmK//J3jB/Yj8j3w45b+3bdWdJ9q817SfSm+VfFeiiMlvjO6D3Pqzwxv
pO09fyDpPus9+m2meQIcp+fswFc8Vxxf4jsfv/NaUjwPJJ6XeK2aL1LFYSoe
TfxpfqRudNp+tM2PCxPH8lzlv5zr7zuWD3kOuQ/Nr34vo0/6pl6XTf07n4/f
I9PxG+HLKv62WJ8zfm90HPbSfGPd5/xN9J7r171d0nuJ94Y584H3kv4zpnwZ
+MXHnfous+z3Ac7H/cQ8N7jSocax+Sv+3VhOeVvmp7H9aKu5WWN51Mj7NP4f
+jrwOfll7ue3WJ/LxsbGzYfpvQpd4nibecj9XFzf7nwX9yWp6rTNb6D5DyQv
xNs5LzXpQs/VS/mr1qXuw8bn8JPjd2PrEcxzaTt4j2V4zn2e+X3JQ6U+s9J1
iccu+YUT1h5w8jcG3VbFDcf6VVkm/4H9p34a7neBXwc/kN+DrSv9PPg56bhh
Y+PiwcR7Kf/efAhvON6X+phVdeyJ96z/+F7PYbPusk6s/KLT6kV4Fl4b6iWe
/Jz7jp25ZsKPmfgMvVnVJXi98zbNg/Cfedf3ATqfuv+xOi7lkcFT8GIVN6z8
oeg95yM4D5vt2c77QUeC/J37Ks33c9nY2Pjw85775JvvzD/w0ljeY7tpdV5C
85rrIRJvVXkx7n8Nf5C3BVb1dI7nuZ7cx1P5MyuE71hG14Fj/fjoVvOe88P4
O8fZ+Zz16DB4LPk76QOBLuN4zUvUmcJzzjNw/Zbz78iTc/4dvMjv1XzY2Lh4
sOI952NUvOS4mON6Kb8/+VHZL/V2lb9zWt3mujnrN+ZGpjoD812qs6v0XOK9
xGtjedF+Vn5389XY+wMdB2/BM+T7TLs/1sNzFa+m/aXllC9a5QHC0+TR8bvB
m12H2Ni49SPPLe/X7sdJHjwIT1lneY52ms+Q+NTxssRT6JZp+cw8Zf8kPAd6
zgPI/uAV553Yn+l+oc5nsd/VcUnzWcrjTEhfFn7vTbXb6CT0GnMVpp1/nngK
f6v140JB8sOr+rPGxsaFi+Y9559UfGWecT13FcdDz43lP/Me/JL4LSF8t8/L
j9p36fJrI7+5fo7vs1/UvJfq5a3vEl8l/kt/l3iS38G/d1qucO0bDzxr10fe
Nug/9Nmm3n9bW73CQjuexsbG6ZH6TPcXc5wu+T1tb9GF5su5+iOTjrP+qvht
LD8mXZeOK+m9hBXfOT5nHmS9t/P+xvoh54quwx37d1sbzzU2Ni4exL7Ae/jF
XLeWdF+y14mf5oqJZ6z3KoTXqKer+Mk4lp8TD47luaT7Kv5jLsWW4r1Nzetv
vmtsbJwvtH2h31Y1RyHlX07Lf2P5ZSwfjeU968Kxx2H+mrYOoorDJT9lFe9L
+Szwn+N7jY2NjdsqOq5C/wvyVxK/wYuuj3O+fLL/rrubNm8/6a6q3m0sL43l
YfORdWn63ml5L9UjjPVzosunzTtpbGxsXGxo3iOvxXPWbU/RfcnvZrtb8d60
eij5Aeeqj6p6QG8/ti/MWP5yPcbYPE3+3teTfEj80Qs1L7KxsbFxvtDxGuJ8
1D+nOnY+x/66XtqY+qv488QnKb8j9S3z9olnUn+XsfrLfW2n1Wugjzvxvq8j
2xOH7fhYY2Nj49wQ/ec5A/hBsbesTzrRiN0eywOJd8f2lUk8WPFq8idWeSiJ
tyq/ZuJZXy/yVBbK/OLGxsbGxYbwH/G/NF/HPGi+SbxmNH9Ny3uJ/5LOY/sq
T9L9P30eY/215jnyT8xvXG/yjao+I63zGhsbGzcNbUeZn03/pqTv8HeCN/7F
q15yyCm3Rr5IPDRXNL8l/2zFe8nf+ewjf7j0zMsmeXAs352xYsWeK++/ZWbt
8U+5YL/VNw5/z5yElH/SvNbY2Ni4ZbHSF+4v7Xig/Z/VHFnzEHpnLN/Br+Zd
o7/P6yv+S37cFMcz73FdfvIbO736+wdMX+fd/NfY2Ng4P4j9pT8jdp46h2n5
Z3PpvaTvxvpDrVurPBn0H7x72mfe/cIdltw0fM7cgOarxsbGxq0brT9+9IJv
bTz38jujv3NTec990ipdaP+ql5Pftcq3SQj/pbqB5r3GxsbGxYW26/hBzWfm
v7G6LfFe4r+xftXEg6k/JsucX/NZY2Nj47aByd5TD0geDDqrqp+bK+/Bd843
HYs+nqTn2I7zqq7DtPG45s/GxsbGxYXM2yaf0Xoq8RvL9JlEZ6XtXU9vP2aq
v+Nz6gqYGw/PNS81NjY2Nk6D8Ab5+s4HhX/MY9TJT1u3l/yV9PGC38x71nM+
/vm+jo2NjY2NWyemfqDuC4POGxvnS3rPyPxUjqN5rbGxsbFxc2DVX4Q6besu
eM96z37OxHvmP+KMSc+l4+66ucbGxsbGhwPJU2Fuu+N8ric3z1FXyP6atxob
GxsbFyKan6iLg+/S/IcUn2u+a2xsbGxcSFjxEnXg7g8GHxKno34i+SU9b6mx
sbGxsXFrwOavxsbGxsbGxsbGhYD/G6h96SU=
    "], {{0, 164}, {223, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{223, 164},
  PlotRange->{{0, 223}, {0, 164}}]], "Output",
 CellChangeTimes->{
  3.67603782273691*^9, 3.676037983069908*^9, 3.6760380691711173`*^9, {
   3.6760381778003283`*^9, 3.6760382024419017`*^9}, 3.6760383987759895`*^9, 
   3.676039146227479*^9, {3.6760392874559364`*^9, 3.6760393159090614`*^9}, {
   3.6760393494375043`*^9, 3.676039361730161*^9}, 3.676039446761261*^9, 
   3.6760395626792893`*^9, 3.6760395981740723`*^9, {3.676043049259124*^9, 
   3.6760430646448593`*^9}, 3.676044079827074*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"meshScene", "[", 
  RowBox[{"s", ","}]}]], "Input",
 CellChangeTimes->{{3.6760396786072187`*^9, 3.676039680527671*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rgb", ",", "d"}], "}"}], "=", "%"}], ";"}]], "Input",
 CellChangeTimes->{{3.6760391548293414`*^9, 3.6760391590348787`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.676039302855996*^9, 3.676039303636195*^9}}],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6760392142003293`*^9, 3.6760392168494706`*^9}, 
   3.6760392661905193`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1080", ",", "1920", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.6760392171960526`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.676039222055917*^9, 3.6760392688861003`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1080", ",", "1920"}], "}"}]], "Output",
 CellChangeTimes->{3.676039222756425*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", "rgb"}]], "Input",
 CellChangeTimes->{{3.676039161865855*^9, 3.6760391706028585`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.67603917097793*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "@", "rgb"}]], "Input",
 CellChangeTimes->{{3.676039175343487*^9, 3.6760391768150525`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.6760391772101107`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", "d"}]], "Input",
 CellChangeTimes->{{3.6760391801083164`*^9, 3.67603918170706*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.676039182087103*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "@", "d"}]], "Input",
 CellChangeTimes->{{3.676039183492437*^9, 3.6760391843676558`*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.676039184717713*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deserializeScene", "[", 
  RowBox[{"s", ",", "\"\<test.bin\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6760367124049363`*^9, 3.676036743636639*^9}, 
   3.6760368232550783`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.676036717319006*^9, 3.6760367463848295`*^9}, {
  3.67603683882187*^9, 3.6760368469507904`*^9}}]
}, Open  ]]
},
WindowSize->{1888, 2023},
WindowMargins->{{349, Automatic}, {Automatic, 371}},
Magnification:>0.75 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 130, 2, 47, "Input"],
Cell[713, 26, 344, 5, 47, "Output"]
}, Open  ]],
Cell[1072, 34, 1273, 32, 251, "Input"],
Cell[CellGroupData[{
Cell[2370, 70, 102, 1, 47, "Input"],
Cell[2475, 73, 3463, 89, 251, "Output"],
Cell[5941, 164, 8794, 240, 172, "Output"]
}, Open  ]],
Cell[14750, 407, 103, 1, 47, "Input"],
Cell[CellGroupData[{
Cell[14878, 412, 371, 9, 47, "Input"],
Cell[15252, 423, 9387, 234, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24676, 662, 201, 4, 47, "Input"],
Cell[24880, 668, 659, 13, 36, "Message"],
Cell[25542, 683, 209, 4, 47, "Output"]
}, Open  ]],
Cell[25766, 690, 226, 5, 47, "Input"],
Cell[CellGroupData[{
Cell[26017, 699, 129, 2, 47, "Input"],
Cell[26149, 703, 121, 3, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26307, 711, 128, 2, 47, "Input"],
Cell[26438, 715, 420, 9, 36, "Message"]
}, Open  ]],
Cell[26873, 727, 100, 1, 47, "Input"],
Cell[CellGroupData[{
Cell[26998, 732, 153, 3, 47, "Input"],
Cell[27154, 737, 75, 1, 47, "Output"]
}, Open  ]],
Cell[27244, 741, 790, 18, 251, "Input"],
Cell[CellGroupData[{
Cell[28059, 763, 1220, 26, 309, "Input"],
Cell[29282, 791, 8543, 219, 168, "Output"]
}, Open  ]],
Cell[37840, 1013, 188, 5, 47, "Input"],
Cell[CellGroupData[{
Cell[38053, 1022, 118, 2, 47, "Input"],
Cell[38174, 1026, 7810, 202, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46021, 1233, 57, 1, 47, "Input"],
Cell[46081, 1236, 221, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46339, 1248, 91, 2, 47, "Input"],
Cell[46433, 1252, 339, 5, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46809, 1262, 214, 4, 47, "Input"],
Cell[47026, 1268, 142, 2, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47205, 1275, 168, 2, 35, "Input"],
Cell[47376, 1279, 216, 3, 35, "Output"]
}, Open  ]],
Cell[47607, 1285, 511, 12, 57, "Input"],
Cell[CellGroupData[{
Cell[48143, 1301, 166, 3, 35, "Input"],
Cell[48312, 1306, 73, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48422, 1312, 212, 4, 35, "Input"],
Cell[48637, 1318, 110, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48784, 1324, 221, 4, 35, "Input"],
Cell[49008, 1330, 625, 12, 27, "Message"],
Cell[49636, 1344, 17394, 230, 63, "Message"],
Cell[67033, 1576, 34040, 572, 144, "Output"]
}, Open  ]],
Cell[101088, 2151, 1833, 50, 210, "Input"],
Cell[102924, 2203, 253, 7, 57, "Input"],
Cell[103180, 2212, 931, 26, 101, "Input"],
Cell[CellGroupData[{
Cell[104136, 2242, 175, 4, 35, "Input"],
Cell[104314, 2248, 145, 3, 35, "Output"]
}, Open  ]],
Cell[104474, 2254, 276, 8, 35, "Input"],
Cell[CellGroupData[{
Cell[104775, 2266, 119, 2, 35, "Input"],
Cell[104897, 2270, 115, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105049, 2276, 117, 2, 35, "Input"],
Cell[105169, 2280, 116, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105322, 2286, 1150, 27, 210, "Input"],
Cell[106475, 2315, 533, 9, 35, "Output"],
Cell[107011, 2326, 476, 7, 35, "Output"],
Cell[107490, 2335, 474, 7, 35, "Output"],
Cell[107967, 2344, 26674, 441, 221, "Output"],
Cell[134644, 2787, 523, 9, 35, "Output"],
Cell[135170, 2798, 476, 7, 35, "Output"],
Cell[135649, 2807, 494, 7, 35, "Output"],
Cell[136146, 2816, 28698, 474, 221, "Output"]
}, Open  ]],
Cell[164859, 3293, 143, 3, 35, "Input"],
Cell[165005, 3298, 188, 5, 35, "Input"],
Cell[165196, 3305, 92, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[165313, 3310, 124, 2, 35, "Input"],
Cell[165440, 3314, 133, 3, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165610, 3322, 92, 1, 35, "Input"],
Cell[165705, 3325, 121, 3, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165863, 3333, 121, 2, 35, "Input"],
Cell[165987, 3337, 69, 1, 26, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166093, 3343, 121, 2, 26, "Input"],
Cell[166217, 3347, 72, 1, 26, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166326, 3353, 118, 2, 26, "Input"],
Cell[166447, 3357, 72, 1, 26, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166556, 3363, 119, 2, 26, "Input"],
Cell[166678, 3367, 72, 1, 26, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166787, 3373, 203, 4, 26, "Input"],
Cell[166993, 3379, 146, 2, 26, "Output"]
}, Open  ]]
}
]
*)

