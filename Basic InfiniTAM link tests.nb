(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    237285,       4924]
NotebookOptionsPosition[    235825,       4874]
NotebookOutlinePosition[    236166,       4889]
CellTagsIndexPosition[    236123,       4886]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Basic InfiniTAM link tests, without the package", "Title",
 CellChangeTimes->{{3.681818007190426*^9, 3.6818180205201035`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Uninstall", "@", "$infinitamLink"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "@", 
  "\"\<InfiniTAM`Private`*\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"F1", ",", "F2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"InfiniTAM`Private`NamelessIntrinsicsPattern", "[", "]"}], 
       "]"}], "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"InfiniTAM`Private`NamelessIntrinsicsPattern", "[", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"_", "?", "NumericQ"}], ",", 
        RowBox[{"_", "?", "NumericQ"}], ",", 
        RowBox[{"_", "?", "NumericQ"}], ",", 
        RowBox[{"_", "?", "NumericQ"}], ",", "_Integer", ",", "_Integer"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"F2", "[", 
       RowBox[{"InfiniTAM`Private`NamelessIntrinsicsPattern", "[", "]"}], 
       "]"}], "=", "0"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"VerificationTest", "[", 
        RowBox[{
         RowBox[{"F1", "@", 
          RowBox[{"{", 
           RowBox[{
           "200.`", ",", "200.`", ",", "100.`", ",", "100.`", ",", "100", ",",
             "100"}], "}"}]}], "=!=", "0"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"VerificationTest", "[", 
        RowBox[{
         RowBox[{"F1", "@", 
          RowBox[{"Unevaluated", "@", 
           RowBox[{
           "InfiniTAM`Private`NamelessIntrinsicsPattern", "[", "]"}]}]}], ",",
          "0"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"VerificationTest", "[", 
        RowBox[{
         RowBox[{"F2", "@", 
          RowBox[{"{", 
           RowBox[{
           "200.`", ",", "200.`", ",", "100.`", ",", "100.`", ",", "100", ",",
             "100"}], "}"}]}], ",", "0"}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "must", " ", "be", " ", "defined", " ", "prior", " ", "to", " ", 
    "install"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"$infinitamLink", "=", 
  RowBox[{
  "Install", "@", 
   "\"\<J:\\\\Masterarbeit\\\\Implementation\\\\InfiniTAM5\\\\x64\\\\Debug\\\\\
InfiniTAM5.exe\>\""}]}], "\[IndentingNewLine]", 
 RowBox[{"LinkPatterns", "@", "$infinitamLink"}]}], "Input",
 CellChangeTimes->{{3.6818177658912067`*^9, 3.681817775734477*^9}, {
  3.6818181435106044`*^9, 3.6818181585103316`*^9}, {3.681818377222398*^9, 
  3.6818183859542847`*^9}, {3.681819762885234*^9, 3.681819770725006*^9}, {
  3.681819820585252*^9, 3.6818198413972483`*^9}, {3.681819894786908*^9, 
  3.6818199766220655`*^9}, {3.6818200594795*^9, 3.681820105999578*^9}}],

Cell[BoxData["\<\"\\\"J:\\\\Masterarbeit\\\\Implementation\\\\InfiniTAM5\\\\\
x64\\\\Debug\\\\InfiniTAM5.exe\\\"\"\>"], "Output",
 CellChangeTimes->{
  3.6818177784909334`*^9, 3.681817996932635*^9, {3.6818181481103477`*^9, 
   3.6818181627316155`*^9}, 3.6818183878326144`*^9, 3.6818185509082117`*^9, 
   3.6818186130687976`*^9, 3.68181875434118*^9, 3.6818188479550457`*^9, 
   3.6818188997346873`*^9, 3.681819772155817*^9, 3.681819946574535*^9, 
   3.6818199773920074`*^9, 3.68182007080162*^9, {3.681820106475169*^9, 
   3.6818201113792768`*^9}, 3.681821217608284*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {4., 8.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["None",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["None",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{
                   RowBox[{"F1", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "200.`", ",", "200.`", ",", "100.`", ",", "100.`", ",", 
                    "100", ",", "100"}], "}"}], "]"}], "=!=", "0"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["True",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["True",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0``7.1505149978319915","\"s\"","seconds","\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 34, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
      HoldForm[$CellContext`F1[{200., 200., 100., 100., 100, 100}] =!= 0], 
      "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True], 
      "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {4., 8.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["None",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["None",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"F1", "[", 
                   RowBox[{"Unevaluated", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "43", "\[RightSkeleton]"}], 
                    "[", "]"}], "]"}], "]"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["0",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["0",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.001001`4.15094907531131","\"s\"","seconds",
                    "\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 35, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
      HoldForm[
        $CellContext`F1[
         Unevaluated[
          InfiniTAM`Private`NamelessIntrinsicsPattern[]]]], "ExpectedOutput" -> 
      HoldForm[0], "ActualOutput" -> HoldForm[0], "ExpectedMessages" -> {}, 
      "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0.001001`4.15094907531131, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {4., 8.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["None",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["None",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"F2", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "200.`", ",", "200.`", ",", "100.`", ",", "100.`", ",", 
                    "100", ",", "100"}], "}"}], "]"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["0",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["0",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.0009848`4.143863037755252","\"s\"","seconds",
                    "\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 36, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
      HoldForm[
        $CellContext`F2[{200., 200., 100., 100., 100, 100}]], 
      "ExpectedOutput" -> HoldForm[0], "ActualOutput" -> HoldForm[0], 
      "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0.0009848`4.143863037755252, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6818177784909334`*^9, 3.681817996932635*^9, {3.6818181481103477`*^9, 
   3.6818181627316155`*^9}, 3.6818183878326144`*^9, 3.6818185509082117`*^9, 
   3.6818186130687976`*^9, 3.68181875434118*^9, 3.6818188479550457`*^9, 
   3.6818188997346873`*^9, 3.681819772155817*^9, 3.681819946574535*^9, 
   3.6818199773920074`*^9, 3.68182007080162*^9, {3.681820106475169*^9, 
   3.6818201113792768`*^9}, 3.681821217713415*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               
               PaneBox["\<\"\\\"J:\\\\Masterarbeit\\\\Implementation\\\\\
InfiniTAM5\\\\x64\\\\Debug\\\\InfiniTAM5.exe\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              
              PaneBox["\<\"\\\"J:\\\\Masterarbeit\\\\Implementation\\\\\
InfiniTAM5\\\\x64\\\\Debug\\\\InfiniTAM5.exe\\\"\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject[
  "\"J:\\Masterarbeit\\Implementation\\InfiniTAM5\\x64\\Debug\\InfiniTAM5.exe\
\"", 4711, 8],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6818177784909334`*^9, 3.681817996932635*^9, {3.6818181481103477`*^9, 
   3.6818181627316155`*^9}, 3.6818183878326144`*^9, 3.6818185509082117`*^9, 
   3.6818186130687976`*^9, 3.68181875434118*^9, 3.6818188479550457`*^9, 
   3.6818188997346873`*^9, 3.681819772155817*^9, 3.681819946574535*^9, 
   3.6818199773920074`*^9, 3.68182007080162*^9, {3.681820106475169*^9, 
   3.6818201113792768`*^9}, 3.681821218103921*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{
    "InfiniTAM`Private`createScene", "[", "InfiniTAM`Private`voxelSize_Real", 
     "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`getSceneVoxelSize", "[", "id_Integer", "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`serializeScene", "[", 
     RowBox[{"id_Integer", ",", "fn_String"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`deserializeScene", "[", 
     RowBox[{"id_Integer", ",", "fn_String"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`meshScene", "[", 
     RowBox[{"id_Integer", ",", "fn_String"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{
     RowBox[{"InfiniTAM`Private`initFineFromCoarse", "[", 
      RowBox[{
      "InfiniTAM`Private`idFine_Integer", ",", 
       "InfiniTAM`Private`idCoarse_Integer"}], "]"}], "/;", 
     RowBox[{
     "InfiniTAM`Private`idFine", "\[NotEqual]", 
      "InfiniTAM`Private`idCoarse"}]}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`computeArtificialLighting", "[", 
     RowBox[{"id_Integer", ",", 
      RowBox[{"InfiniTAM`Private`dir", ":", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "_", ",", "_"}], "}"}], "?", 
        "InfiniTAM`Private`numericVectorQ"}]}]}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`estimateLighting", "[", "id_Integer", "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`buildSphereScene", "[", 
     RowBox[{"id_Integer", ",", "InfiniTAM`Private`rad_Real"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`renderScene", "[", 
     RowBox[{
     "InfiniTAM`Private`sceneId_Integer", ",", 
      "InfiniTAM`Private`shader_String", ",", 
      RowBox[{"InfiniTAM`Private`poseWorldToView_", "?", "PoseMatrixQ"}], ",", 
      RowBox[{"InfiniTAM`Private`rgbIntrinsics", ":", 
       RowBox[{"InfiniTAM`Private`NamelessIntrinsicsPattern", "[", "]"}]}]}], 
     "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`processFrame", "[", 
     RowBox[{
      RowBox[{"InfiniTAM`Private`doTracking", ":", 
       RowBox[{"0", "|", "1"}]}], ",", "InfiniTAM`Private`sceneId_Integer", 
      ",", 
      RowBox[{"InfiniTAM`Private`rgbaByteImage_", "/;", 
       RowBox[{
        RowBox[{"TensorQ", "[", 
         RowBox[{"InfiniTAM`Private`rgbaByteImage", ",", "IntegerQ"}], "]"}], 
        "&&", 
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"Dimensions", "[", "InfiniTAM`Private`rgbaByteImage", "]"}],
           "]"}], "\[Equal]", "4"}]}]}], ",", 
      RowBox[{"InfiniTAM`Private`depthData_", "?", "NumericMatrixQ"}], ",", 
      RowBox[{"InfiniTAM`Private`poseWorldToView_", "?", "PoseMatrixQ"}], ",", 
      RowBox[{"InfiniTAM`Private`intrinsicsRgb", ":", 
       RowBox[{"InfiniTAM`Private`NamelessIntrinsicsPattern", "[", "]"}]}], 
      ",", 
      RowBox[{"InfiniTAM`Private`intrinsicsD", ":", 
       RowBox[{"InfiniTAM`Private`NamelessIntrinsicsPattern", "[", "]"}]}], 
      ",", 
      RowBox[{"InfiniTAM`Private`rgbToDepth_", "?", "PoseMatrixQ"}]}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`assertFalse", "[", "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`assertGPUFalse", "[", "]"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6818177784909334`*^9, 3.681817996932635*^9, {3.6818181481103477`*^9, 
   3.6818181627316155`*^9}, 3.6818183878326144`*^9, 3.6818185509082117`*^9, 
   3.6818186130687976`*^9, 3.68181875434118*^9, 3.6818188479550457`*^9, 
   3.6818188997346873`*^9, 3.681819772155817*^9, 3.681819946574535*^9, 
   3.6818199773920074`*^9, 3.68182007080162*^9, {3.681820106475169*^9, 
   3.6818201113792768`*^9}, 3.681821218106906*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VerificationTest", "[", 
  RowBox[{
   RowBox[{"Quiet", "@", 
    RowBox[{"Check", "[", 
     RowBox[{
      RowBox[{"LinkReadyQ", "@", "$infinitamLink"}], ",", "$Failed"}], 
     "]"}]}], "=!=", "$Failed"}], "]"}]], "Input",
 CellChangeTimes->{{3.681818049348074*^9, 3.681818088625103*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{
                 RowBox[{"Quiet", "[", 
                  RowBox[{"Check", "[", 
                   RowBox[{
                    RowBox[{"LinkReadyQ", "[", "$infinitamLink", "]"}], ",", 
                    "$Failed"}], "]"}], "]"}], 
                 RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                 RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}]}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0``7.1505149978319915","\"s\"","seconds","\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 37, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[Quiet[
        Check[
         LinkReadyQ[$CellContext`$infinitamLink], $Failed]] =!= $Failed], 
    "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True], 
    "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.681818065758559*^9, 3.6818180907907906`*^9}, 
   3.6818185513407516`*^9, 3.6818186135253844`*^9, 3.681818754803739*^9, 
   3.681818848415603*^9, 3.681818901052333*^9, 3.6818197726403975`*^9, 
   3.681820111854885*^9, 3.6818212181729884`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$scene", "=", 
   RowBox[{"InfiniTAM`Private`createScene", "[", "0.005", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6818182117117634`*^9, 3.6818182467544947`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"VerificationTest", "@", 
  RowBox[{"IntegerQ", "@", "$scene"}]}], "\[IndentingNewLine]", 
 RowBox[{"VerificationTest", "@", 
  RowBox[{"NonNegative", "@", "$scene"}]}]}], "Input",
 CellChangeTimes->{{3.6818182582158213`*^9, 3.6818182783089013`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"IntegerQ", "[", "$scene", "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0``7.1505149978319915","\"s\"","seconds","\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 38, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      IntegerQ[$CellContext`$scene]], "ExpectedOutput" -> HoldForm[True], 
    "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
    "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6818182548736534`*^9, 3.6818184868582377`*^9, 
  3.6818185519655333`*^9, 3.68181861415417*^9, 3.6818187554315376`*^9, 
  3.6818188490414004`*^9, 3.681818901714156*^9, 3.6818192886522055`*^9, 
  3.6818197732731876`*^9, 3.681820112540745*^9, 3.6818212188037763`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"NonNegative", "[", "$scene", "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.0010035`4.152032374655492","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 39, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      NonNegative[$CellContext`$scene]], "ExpectedOutput" -> HoldForm[True], 
    "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
    "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.0010035`4.152032374655492, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6818182548736534`*^9, 3.6818184868582377`*^9, 
  3.6818185519655333`*^9, 3.68181861415417*^9, 3.6818187554315376`*^9, 
  3.6818188490414004`*^9, 3.681818901714156*^9, 3.6818192886522055`*^9, 
  3.6818197732731876`*^9, 3.681820112540745*^9, 3.6818212188308096`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$img", "=", 
   RowBox[{"Import", "[", "\"\<ExampleData/rose.gif\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6818182991429105`*^9, 3.6818183007489014`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InfiniTAM`Private`processFrame", "[", "\[IndentingNewLine]", 
   RowBox[{
   "0", ",", "\[IndentingNewLine]", "$scene", ",", "\[IndentingNewLine]", 
    RowBox[{"ImageData", "[", 
     RowBox[{
      RowBox[{"SetAlphaChannel", "@", "$img"}], ",", "\"\<Byte\>\""}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"1.", 
     RowBox[{"ImageData", "[", 
      RowBox[{
       RowBox[{"ColorConvert", "[", 
        RowBox[{"$img", ",", "\"\<Grayscale\>\""}], "]"}], ",", 
       "\"\<Real\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"1.", 
     RowBox[{"IdentityMatrix", "@", "4"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.", 
       RowBox[{"{", 
        RowBox[{"200", ",", "200", ",", "100", ",", "100"}], "}"}]}], ")"}], 
     "~", "Join", "~", 
     RowBox[{"ImageDimensions", "@", "$img"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.", 
       RowBox[{"{", 
        RowBox[{"200", ",", "200", ",", "100", ",", "100"}], "}"}]}], ")"}], 
     "~", "Join", "~", 
     RowBox[{"ImageDimensions", "@", "$img"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"1.", 
     RowBox[{"IdentityMatrix", "@", "4"}]}]}], "\[IndentingNewLine]", "]"}], 
  "~", "VerificationTest", "~", "Null"}]], "Input",
 CellChangeTimes->{{3.6818195602212305`*^9, 3.6818195787123165`*^9}, {
  3.6818201342838907`*^9, 3.68182013751993*^9}, {3.681820290626067*^9, 
  3.6818202974926577`*^9}, {3.6818203989652996`*^9, 3.681820400833645*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"InfiniTAM`Private`processFrame", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                  RowBox[{"1.`", " ", 
                   RowBox[{
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "[", "4", "]"}]}]}], "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["Null",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["Null",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.1501685`6.327093840547432","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 40, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      InfiniTAM`Private`processFrame[0, $CellContext`$scene, 
       ImageData[
        SetAlphaChannel[$CellContext`$img], "Byte"], 1. ImageData[
         ColorConvert[$CellContext`$img, "Grayscale"], "Real"], 1. 
       IdentityMatrix[4], 
       Join[1. {200, 200, 100, 100}, 
        ImageDimensions[$CellContext`$img]], 
       Join[1. {200, 200, 100, 100}, 
        ImageDimensions[$CellContext`$img]], 1. IdentityMatrix[4]]], 
    "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null], 
    "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.1501685`6.327093840547432, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[168, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.681821219047098*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$rgbImage", ",", "$depthImageData"}], "}"}], "=", 
   RowBox[{"InfiniTAM`Private`renderScene", "[", 
    RowBox[{"$scene", ",", "\"\<renderColour\>\"", ",", 
     RowBox[{"1.", 
      RowBox[{"IdentityMatrix", "@", "4"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.", 
        RowBox[{"{", 
         RowBox[{"200", ",", "200", ",", "100", ",", "100"}], "}"}]}], ")"}], 
      "~", "Join", "~", 
      RowBox[{"ImageDimensions", "@", "$img"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6818202823347125`*^9, 3.681820286101398*^9}, {
   3.6818203297408934`*^9, 3.681820337911105*^9}, 3.6818212162075357`*^9, 
   3.681821579615226*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"$ci", "=", 
  RowBox[{"Image", "[", 
   RowBox[{"$rgbImage", ",", 
    RowBox[{"ColorSpace", "\[Rule]", "\"\<RGB\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"$di", "=", 
  RowBox[{"Image", "[", 
   RowBox[{"$depthImageData", ",", 
    RowBox[{"ColorSpace", "->", "\"\<Grayscale\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"VerificationTest", "@", 
  RowBox[{"AllEqual", "@", 
   RowBox[{"Thread", "[", 
    RowBox[{"Unevaluated", "@", 
     RowBox[{"ImageDimensions", "@", 
      RowBox[{"{", 
       RowBox[{"$ci", ",", "$di", ",", "$img"}], "}"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.681820342602934*^9, 3.681820373271242*^9}, {
  3.681820417302204*^9, 3.6818204681777153`*^9}, {3.681820553296979*^9, 
  3.68182055984315*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvUuy7Mx1pRlmVQ021VCDDTWirtFkNJpMJpIiKZIif+SlnklJf0qZKaWU
Sip4xJf4yilgKNGogWAmdYbAIZQqz/52VqwI/O4IOB4RZy2za8vO9QDgcAAO
x36s/X+9/M+/+/H/cTgc/u9///f//Pu///MwE6//s6v74V90N5ntzz+9zdX7
L/Tv9G+3udX+z7+4zaX91x7//OvuJuf2P73N1ef3291NZvvjL25zq/M7fOhu
co7vz25z7r/Q/1L/ul/f5rx/fnqbc/+/+eQm17Yff32bae9/eptb3b+HH97m
bP+329zs+t+5Pe2vPx5htv+D21x7fc4jnO0/v83Zvx+NcG3/Drc52z+5zbXz
0+knt3mt63v+4W3O5/Pntzmfjx/f5mb9/93uJuf4vdzmpcevhOr9/1l3k/P6
/Oo2186fh1/c5lbv/+Gfupuc98df3Obq6/Ol21y9/U9uc/bvV7e59v07/Ow2
5/5/cpurx/efu5uc23/3Nje7/0vv12/e5mz/wm2e278c3z+7zXl9fnyb8/n5
0W3een7Yy/t98/bS/fdHtzmv/9/f5trrX7p/Svdf8fxK7aXnp/T8lcbvTtTO
P8X5q4DS/Fmaf0vzd2n+L70/xtDq/VV6f5bevyUU3/+F9UNp/VFav5TWP/di
rfm7uP4srF/nHr+0/i6t30vr/9Lx70Xt90/RvlP4/ip+vxW+/0rfj6Xvz9L3
a3F+LvWv9P09gtXWFyX7Rcn+MbN/JftNyf4z175Usl8Vv99GkO0F+1vRfvfh
Nre6/kX75Z32w0TB/lq0396J6vmpsH0J99rPm73/C/6De5H3/9/e5tr9d/G+
UM7tP73NrdafY2g1Px1+5zZv/f2XKKwPZ+9/5vzQxXgq7+X9aDabzWaz2Ww2
m9fjMZTaazHEfpRz//98yd1/r+tfCVuPq9lsNpvNZrPZbDabzY/Ec7F1/81m
s9lsNpvN5mfiMZTaS2i1/UA+wM/l75nnp8cxm81ms9lsNpvNZrPZPM5FFPJf
zWaz2Ww2m81mczu+F6Xt5+5/aj/uPb+tx99sNpvNZrPZbDabzeZH4DHQXtK/
NZvNZrPZbDabze34XpS2n7v/Zvjr7iZvPe5ms9lsNpvNZrPZbDY/Es/F1v03
m81ms9lsNpvN/5sfHVuPn9lsNpvNZrPZbDabzY/A92LrfpvNZrPZbDabzeZr
fnRsPX5ms9lsNpvNZrPZbDY/Apdw+rfuJm/db7PZbDabzWaz2XzNY5jb3gpb
j4/ZbDabzWaz2Ww2m83PwHOxdf/NZrPZbDabzeZn4nsxd/u9YOvxN5vNZrPZ
bDabzWaz+RH4Xmzdb7PZbDabzWaz+Rl5DHPbE1+O330t+Et1x5+L2v1vPf5m
s9lsNpvNZrPZbDY/Ao+B9vMvbvPW/TabzWaz2Ww2m5+R++9f8uH7l+2Hr9zm
bC/h9+N3fxj8xYnbL4ytx99sNpvNZrPZbDabzeZH4Huxdb/NZrPZbDabzeZn
ZPxtytm+EdY6/tbjbzabzWaz2Ww2m81m8yPwXGzdf7PZbDabzWaz+Zl4K+Tx
PwT/bvDnu8v20vZ3ticK+YmnH8XfypX73/r6ms1ms9lsNpvNZrPZ3IJLOP+6
u8lb99tsNpvNZrPZbH5G3gql4y/dDvq/j9/9wyXX7r/79W3O7T9/m7e+7maz
2Ww2m81ms9lsNk/hIn7a3eSt+202m81ms9lsNj8jj6HUPhdzj79W//uP3U1u
tf+tr7/ZbDabzWaz2Ww2m801PBdb999sNpvNZrPZbH4mHkOp3ahD98vuJm99
3c1ms9lsNpvNZrPZbJ7CRfx2d5O37rfZbDabzWaz2fyMPIZS+3tH7fiZzWaz
2Ww2m81ms9n8DDwG2o+/uM1b99tsNpvNZrPZbH5GNpbF1tfXbDabzWaz2Ww2
m83mFnwvtu632Ww2m81ms9m8BY+B9vMIl7Y39oGt7y+z2Ww2m81ms9lsNptr
eC627r/ZbDabzWaz2bwmj6HUbjwGtr6/zGaz2Ww2m81ms9lsruEiPnQ3eet+
m81ms9lsNpufk0sY4nfKax1/DHO3N/aBre9/s9lsNpvNZrPZbDaba7iE88+6
m7x1v81ms9lsNpvNz8kl3Ls97cMI1x5/KdT2//A5fhf8m0+qtjfqULq/utNt
3vq5MZvNZrPZbDabzWbz++Iifru7yVv322w2m81ms9lsvsX3Yu729Yjj/Faw
+ue+Efwx+EvdZfuH4GPw56R9BOud32OjeH99+TZvfd+bzWaz2Ww2m81ms/l9
8Rhq281ms9lsNpvN5jW5hCF+p1y7/eL4avfG3wn+3Temf/3H+P+/Dv7GZfvh
d4I/BFf694w6nH7U3eTa8d36+TCbzWaz2Ww2m81m8/vgErpfdzd5636bzWaz
2Ww2m98n9y/xt3K07x6fdG/8F8Hh78vz+17w30T7Ny/bD58P/hBs/15TnMOf
p7z1fW82m81ms9lsNpvNZvP/n8dA++mnt3nrfpvNZrPZbDabn5OL4HfC1dtv
jT/t3vg/BX/rjel/H+0d7d++bE/d/In6nEYbLH1/b/38mc1ms9lsNpvNZrP5
MbiIqAeivHW/zWaz2Ww2m83PyWOgfRjh0vaGMQdr3V9bP39ms9lsNpvNZrPZ
bH4MHkO2279nNpvNZrPZbF6RSzj+8O135+D+h9O2f6/Y+/jU9q/717ffvZ7e
uPunrmr7bC9839yLVuO79fNnNpvNZrPZbDabzebH4BKOUW9Peet+m81ms9ls
Npufk7u/v820Gwsj6gP23Rtf1f+bif5PYj8fg7/TZv9sf3554+Ffgv9R9v/z
+N2Po139wz+L/w8/Yneq69/e789H6V//t288hD4tdSi37j/HH0Y4+/cN4a9f
tpvNZrPZbDabzWZzKx4D7f1Pb/PW/TabzWaz2Ww2v08+hr8F/03/L5ft7xWt
zr+PfLj+H954+Luu6f43h/jvDuK/O0X760T/3qOgC39m94M3HirzH/eCU/hl
OY/Df3/juf1f6/y3nj/NZrPZbDabzWbz8/BcbN1/s9lsNpvNZvP74j78LqeX
S6Z9a/ThN+n/xxu3yj8sbb/1+XN8rkeH/1X8R6fwl/Xhl+n+4bL98Ito/8kb
Dy+3t+9i+0HG9xj5eQN+INl+LvrIB+S69v+57f7vRbPjhz+3/6vgP++q9r/1
+QP8s4cfvbH6/4doR+f18D8u20sg7/PI/jX/80vBXwz+wmW72Ww2m81ms9ls
NrfiMdS2m81ms9lsNpvNa/IYSu1zsfT+9461zv/1396O0+NHeekmHb//XmyP
vugf122f7XH89ONQ76/y+K+/fPtdF36k048utz//Kpg8QW2P7Y/ip5o7/ls/
P6AP/+Hh0zeu9R8mvha/+3LwlyZu/9vxu98K/tzE7UfQany3nl/NZrPZbDab
zWbz43AR6J4Ib91vs9lsNpvNz8v9z29zto8w7ed/vc21++9GuNX5lXCKesfK
rfY/xO+US9vX7v8Q/e3xc/xyWv+2wtz+7f385uJZzu9V/GdT/XcPj690b/z7
wVP9YwV0kc94iPp5h7+83H8nuqia3/oaeZuvL288VT900O0r9TubzX+F7XvJ
K+0kv7CP/8/vb9GHPeIfHplf8Z8qb/1e3wuX3q9LoXb/c9/vW4+v2Ww2m81m
s3ldHkO2/9tt3rrfZrPZbDabn5fxDylXb19A/1+6m8z23a8v+Tjx+CU+4/8S
ru1/EaEHpzx3/6Xt57ZXH/83n9zkVsfvw98whJ9iCD9F7fbdP8d2/y1+/18v
t8eej9+ib6TfabQB9Qb7v3njK/9UXK/Usfzry/Yh5hPum/77l+0H8gq/Ffw1
ab8TW98/tc/fEPXcibtQ/9s5/HNZJ3BqfUDJy/v3Pdw8/nCnPid6sunH1Otb
APEkmR8q8bNdzBv5fvrbafs/hP8PP/brxPiKrd//m3OM3yDcav1xiPlfuXr/
v7rNm4+b2Ww2m81ms3kTvhdb99tsNpvNZrN5jEvAXgofxH6K3yX9L/942Y7u
HvXBup9cts9FT/0x9Pl+3Hb/92Lu8Zfuf2n/1cc/xu8+Hxx6frn954TFf7A1
TuG/wD8yyP17L/ZyfkvjLPX7BvW/xPN5jOf+rPXXFkLuv+C/Wvz4M4HeKn49
ja/IvMr43aEy/+5/I3430f9fDXRVwz+IP5/953sl/L79n122p98ytuvE/3/+
6eX+NX9vKeR7FH3a4NOTxffei7w+I0z76Ve3eevzNpvNZrPZbDY/J8/F1v03
m81ms9n8/vj4o0vuRF8v866CVZ9sDKX2EtbaP7qX+BdOL13T/W+1fTXQXcVO
Lvk3Pfbpe8cH3cIvBjfKf2yFc9j78Ttzn+f5x3PRo384Nf9pIWz9/K2FHr9M
+G/Uf1Xyzx3Rb4zrRx5obv87wVJHLq9/XG/yRqlzl9tHPuLhT4K/K+0jqB1f
6gkOkZek+ak9+a3Rv176x3Ob+pT/0LZ/iyOey8y/k/zOpdBq/6e472DNLzsL
9/J+Rn9Uea31Afnxynu5P7ZeP5nNZrPZbDabH4uXwtbnZTabzWaz+f3y0wO/
QNjFW/knq8fv6/G7Lwf/3uXxhx8Ehx9B62ftHeQFpU6m+k9GQPuVPuNEfb57
0ez6LrR9LchXyjynyvFr1T/Vh1T/Ren4+E/Zbph6/4f/OfPYxP/ao9sXfi3N
L+7/NP7/k+BvXLbrfT1Uzh+JP47f/WGwPP8n7X/l85MI/2L/MX7/zcvt8e+9
4sfW8RW/Jn7SrZ+/ve8fkN9L3ck+5vO9zB9z1wfUJ1TO5+NXt1nvb+Xa83sl
b1p463WT2Ww2m81ms/kxeSlsfV5ms9lsNpvfLxdB/gj5B1Ptzwshjx/28sPv
Bn/oLtpPof9Gfahjc3227pJFv26g7rLkgWn7UcY5+/cXsV3kB2HH33r8a4G9
G//KVf0r/B5/EPwlaR9B7fmTf4UfrJP6f5m3GXbjXvxDqn/Yaf7Yp8FxnQ7f
k/bwBx3+Klj0BXvs1vRT8gfHUNtOPTJ0GfvG+7+3HaCfSP7olX+L55frI+34
V7h+3cT5ieNzHTrRX32lvtxI+1ZY6/jpNyZPsTI/cWusdf8Wt6cuZPiND1/p
LtqzHp34CZfun+6n9fqhtn/kp6Zu9o/m9cdsNpvNZrPZbP4snotX1q3KOzk/
s9lsNpvN74+N++Dxe0Mv/hnVr6TuFLqvqv95+Gqw+Gmrx5e8yPALXul/4pcO
v0yt/2wtkP+GDmVXWR+ttp18meEljjNx/9TDxO+s9Qczbymu65X+Y+QT4p8m
T67Z+Bf0Ne/FXu6Pe1Hbf/QuM4/x293F9uRXZn2/lfQxS9j6+LV4jfqT5FGe
V6r/B1R/u9Z/WIsT84xw7f63Xv+YzWaz2Ww2m98XzwZxycJbn5fZbDabzeb3
y+8VpfN/7+OzFrrIz6KuH/XEqq/P3wSP5c/tFLX9o55ant/Hrmp72ofwL+A/
HCaOb6/6juLfO4nfohP/Xk/eIv6j79QdvxpxPuRVMk55/tRVRP9V26mvF35f
za8s4mvxO+pMHiduXwL+b/zXrfcfz0/6X79+uX/ynnOc/qrx8edirr5oF79D
R1n0U+diiPmN56/Wv14L9Ge5z6kTWT0/SF29Xuvr/eo25zriV5c8SHsJW69/
9s73Yunnc+txMZvNZrPZbB7jxRF6Tcpbn7fZbDabzeb3y2MotZcwd/vVgH17
Z/6hpa9PNb4Yx/kQ/Plu3eOXgO6d5PFl/8KflH4Yia/D39WP6HcuhbXGD13J
g/ix8vjoo+KfkvxJ8v46xkn0SU+S36f13ciXxC/U/wdpj/E+/HnwH0v/FkaO
D/6R1vlp6AaTZzgxv7BD3zbuT/VfjmE3z+edqO1/z30T9xX3c27/3cv/n5wf
XIDWZVT/cV437vM/rTs+7ejrpj6w+O/Iu+S5avX8rHX/bL3+uXd99F5A3j26
4l1lfAg4/SK2Cx4q6y/WXp/jz29zbf+2vr/MZrPZbDa356VxjuMob33eZrPZ
bDabn5cz/0M4243PRthTqUPV/8c3Zvx66lKRnyT+ixKy7lr4Tfq/udz+FHru
x7H6h+TdYMeW/JtSfNnieHk7DvqN6v85Sv3Bww8u2+9Fbi/1w7R+4Tnslwf6
V5n/AsjPeR2p31fs305R3b+C/xf/R9ZxE/8G9QqGuO6D1mdEt5X9//ZlO/X4
+vCfqP9wDLsZf/w21GlsFF9Qe/7UHzzhn/07OX7kM+b88uXL9uGXsX08v1r/
kOc754GJ+WVzgX8C/3b//brjl5Dzc5x/R31VOf+8P8f8fxvjGM9fN1KfFr8O
z2fr/MMxsP8u8gmP5BVW5gfW9q9jXvo0WPJTe/I7uf+/ddlO/868B6R+4Jnn
I+IgupfLdvSKD98MVv/0ndjL/TUXs9e/WtfR9R3NZrPZbH73PBdn9PeFtz4v
s9lsNpvNz8sd9lXipn922X6Iv9MO8sPLduy/6Qf5F9n+2TFX/62A9HuE3Rl/
HftPu7v4MfL6Yp+n/p3oI2JP7MSPMLf/tdv3EbePzuMg9xfx/dg/T2JfHmT7
XutXFerv4Y/tw2+i+S1D3M+M2yDjq3XrBsl/O0Y7dQe1vh/76+/U18z6dfRf
7Mv3onb7M35X6uvJ+WEvJc9san1D9AW78PviL8/9h3089Q0lf5D6jnn/r3x/
GzNBXUzmwdb50y+x/5g/DxqfwX2F/69Sf/RZ7o8j74+XNz5ofdSFgd+Q99Og
9TsLwF+c+roaHzCCZ7l+Y/D81wZbr9/NZrPZbDa357m4ihty/JDZbDabzeaF
eXGI32uq/4u8jwM6eZqftjHwJ2R8f+jBteof+XqpT/jJ5f57yd+bml82hqXH
N/eP/4XrLP65E/Xh4jx78R/j3zuP+ffm9q8E8esdJP8H/2AfdulO7Mvnl/j/
2M9B/FOvcV55faV9LrJuGvlDU+vLLYQcP847xk/zY0v+vb2i1L98vrX+W2P9
yHux9fET5IdG3cGp+qZFiG5mq/ypZiDvHv1ciV+YDcY18m41P3ZpkPc2xPtB
8wdLIF5kCL+kxrdsDnQpR95vxjKoHd9edD3Plfqhehyz2Ww2m83Pw0VEvQ/l
rfttNpvNZrP5eXkMpfZnQeZvoWOp9YmoiyV5etlesH/2Un9J/T8laP23q/pf
ov84Nb9hDGxPvlOOU1e3/9r21F+UOlJb338cn3pA+I+GJ9HXBOQ9duTJVea3
zEXeX2G3Z1x7ub8Hue/Vv710/7YG+og8F1Pnj6WQ8xt1E8kfXVs/8EP8jvlX
40eY178d/HvSXgL+VepzNvKfbX39QPqVRupj3ovq+R/9AOI7pH7bEPqWAzoB
4t/rQo/zLHEQ2t7H9gfJDz+w/Vi7sQg8vm/Yev1vNpvNZvN75BLmbv/vK9Cb
vPV5m81ms9lsfl7eK2r714lfaND8HbFfqv9L8wKu7Jux/WFke+q14RfEDryb
8f20e2PqZDXSbwQ9eWuSZ1h9/cJvlv6lf5y2/dI4ow+Kn0Xsz5x3T37Pt6V9
YVBP7vCN4C9dHp/7vqNO5M7qe40h+z/XP7MwjnF/oPN4VR+wBHRjR/LP8G/0
6Jw+SH4iOIf/hPqZOj/jt2F+VX3hrbD08R/l/AZ0cakvq/OH6EPX6l9ujVL/
fP3bYEBX++WNu5X1XWcDv/5XgiNPdm7/W21vNpvNZrN5Oi8O6icLb33eZrPZ
bDabn5ffPcT/1zXS/3z28S2dX6vxI7/sTP009a8tdPy9AP8HOpVX9evILxrx
713p4/7mk8v2Eax1fU+hr0kdw070ZY/hH3qNdq1vmHGRcV6157d35Dwd/r3z
iH+PduIUdPzSLo2O5e9I+0LI/XPfyXXK9tAbzTw87R9xE9zfX5b20vHvbF8L
1JXM+IhG+dG5f+oXTtTfzXb0j/HPyvyL/xYdYdVXNpYF9XP78Ju10uduhSt9
7Z3kR249P7Ta/9bfD2az2Ww2PyPPBfHBylufl9lsNpvN5udl7C7U/T3962X7
1iA/rxedylb9O2v+3s7q+3Xh3zmO+HfOUpcQvbxm/Q97evoHPjTe/0wcX7r/
xcNI/bo+9AxH9VdnolP91Kn5R+Slha6h6vMvBfaf+nbo4+n9H/63V/Is134+
vhnH4T78IMcn7w393In1PWcDv6JgL89HCT11PT8G/9Eb53si/IcnmYe0fUw/
cQxzxyefb+qfRt7YQeoz4u8kr3Iv+qaPjqWv79Z49vNbGu9mfOS9vbf88q2/
L8xms9lsfkSeixP6BcJbn5fZbDabzebnZeq3HcI+2/34sn3Aro8OZmX+1FrA
r5P6g+JfId+nJz9iqj4h+nlRd6lV/kv19uTlxLgPcn7kY2Qe11fb9G8utj5+
K3T4fSMPphf/6rGg/7o00m/5nWC9/ujrfRp//4m0bwz8Rt1YfmIJ+G3wU4l/
anF8iOOM1H9Lv2jMU1pfsIQ+/KvcZ7X5q+AU/rfjiH+uiJe33/XMs3J9Xgv5
W+eor3Ycyf8qgd/jdyYPLY+Pf1HqZDabn9Efjnn38Jd1+68+v7iuR9HRZfsu
zuv8En/vLP5kLrJu43eDd6JvvfXxHx3V8xt1bdHnlvv7RH1h5tEfXLY/PdDf
5v3eSF+9dvvi98NMbL1/s9lsNpvv4Xuxdb/NZrPZbDY/L6fdFx3EH8nvXt44
9Ssb+/f6sNegI6b6e2n/fzD7Tql/S/e/2f7DH3rADts4/20r0P+l8jfXGp9X
8Sui85fP90u0o9PXqL5Zq/v7FHol+XxPrL84hP+LvGPVr8z6iS+xP/EPjWGt
69dLftxpJD/uHO194/a5eCU+JMa//6fL/avdXv1zmb9KnauJ+atDvA/G/O9p
H59YH3Wt9nzvhV+va1S/7tHnZ8D8gL5A8/pt5KUTv3Nsu3/82gd0COT5MG4j
xwdd3ohbucqPi/mF93ZfOb8nNH5r4vVn3mb+G2R9OsT9i844eqqrvV+ID4k4
gUHW98RrDDFuU9+PJUYfAD786rL98OtLftX2Avr4vfLW31Vms9lsfm6ei637
bzabzWaz+fn4XrB95s2FXbIX/bO0u6Cjpvln6LqN2Ec67Mdhl+j/pU3/t0b2
P+yVmWcYeUh7P7+t+7f18VtBdUOn5l+m3506XqLPil5r5smsnN+WeV3Uh6r0
X8xtfy9Y2n+3NI7i9xjEvtzLvE8+6tX9/afR/t3L9sxrFp1X2qnveIz3DP7w
bI/x7bGP70y/eik8zfmJbnIv+q34G4aYp/qXy/Zz1I/Dv3h8kPpxa4H5HX2H
w8r562PY+viAeYX1bSfr14zLIU9Y4nPQi8j88N+S9gLQTWb9rOvrA/Na5BGT
J7yX8cM/qZzz/y9u89bfVWaz2WzeN5dQ2p7vBeXS/rc+b7PZbDabzc/LJaAL
N7y8cW3+XLZTn4T6WV+63B7/Xeq3if3jVfx/hyfx7yXi/DLPZWr8+Qhajc+r
5B8Mlflt1cdX+9Vvy/7D7o+dFp3Jta4/+oLE5x8a5V+wPf6MPvIk+67N/muR
zzd1BNW+uBFyfIgLoI6ijM+Z/Dd0UhvrF5b0J+eCvEryJvqd6afuHVz/fiz/
kfzvl/jdxPzQzDv52eV+tr4+c+ffbCcuJ3RjNb6EvFrqKg4y//UfYz/4UUU/
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
hy7qRP3S7J/kZ3SV8d3V/Qu7H/azw5+22T/IujAj9xfXi7yiw99MOz71X8jj
VP/aUqi9ftRHOzTWx0tI3Tb9/sq6OOKHy+NLfpfqe3aiu0ce0dbjm5Dnqja/
OtvJTxnJz6JuJv7jg9rHYzyyDuKj1T9cCNXPB3knY/q/M49PfhN+iNb5uenX
xv/QOP7ivSP93ozvxPfDbJDXGuvKK/8Y/sVYZx4kf7ojroj5daJ/cSlUH//l
7Xf4bQ5T9b0XBvcF/arNX9tL/0tgXdSH/7RrVN849/8x9s869dvT9s/3F/69
qfGJxmej9H3Nd5Vy7f0//Po2b203MJvNFc//wkAPQXnr8zabzWaz2bwdY/dS
pp3v86xDtVL+TbaHPSb1rUSfcS70+3dYSf+vdv/oO6I/1aq+ymogfwqdzZc3
rr7+D4rq86M+ZfhnNL8H+1HWh6msL5cQvwp6WluPb6v540T+ZtxfU/M/lkIe
/9NgqbOZ87DUL1N9ufR7N66fZTw3nn1+TTBvMj+K/yB1ncP/MVnflLqlkbe9
l/q1HB/d3tQPFPu9nv+V//+Pg4njaaTP995RO36v5M+/vLGuv7Nu5IfgifX5
tgZ6lhmf9CD5y8aDAH2NmNda+Y/3fn9ubTcwm83zeSlsfV5ms9lsNpu3Y+pv
nYRpH0OpvRnIH4r4/r6RfXsv22v9Pc2fS7sk9Xkq67OsBfLpDuhAaX0haa+t
X1JC9fZhP8v8S6lv1Uv9m170Oef2ryOvIfJg0HPL8Yn8sW5EHzPrQk307+3m
+d0pas8fvzR5HVqfsBO/Yq/xAXH9hoiP0Ppd6ffDj/ANae8u/1/1/1QXr7b+
0bNj7+e/l+eTeqb4vQ7f6iYdvyP/lfu/UX5cq/Mf5PkdJL9G8we7yviZvdxf
1HUdZJ7Zy/jPBfl1Gd8k+c3kh7/K7x7l+pVwVZ9R1n+qO6HvD3RLuT9a64cX
Qb/wI+v7607Ubp95uxPzB+ci939nfcTq/d/Z3g7dJf/mk3WPH+ujPnQtpuY3
7h353Ebc11X9XrPZ/LC8NLY+P7PZbDab98j9r24z7VkfTpj2jPsWzuP8coQb
9b8E/Hnq56vd/l7U7p+8lhP5K+KfWer4tfunng52gyv7/MbAfpv1/yR/4Yz+
X+hMvqr+5UtsF3a1Tvyrg9ZH1PwI9T9I/hh+W/LX+kr7ZD5/6LrSP7HPan6D
9r8Ezm/M/5p+N+xY35y2/62wVv/Qu0S/qnV9ocXx+e6NJ9rn9n5+c/uf7WHP
U977+a8G/LJR1/XwpTeunt+YV7Hj/1nd9u8dSz+f1esX8S/2O9HH2/r41aAu
GPNwZf5atqM/Pab/HvEWvNcP371sT793+MVax//sFa36l3FNH4Mr9X3Xen4z
bi7yCunn6Pp17fgZ9JH5vqj0X+1lfLc6vrEsqq8P+cfCW9t1zOY98NLY+vzM
ZrPZbN6C0StSpn0Mte3qtxsa+++oP3TFtP/skoefSXuBl0KOP/ZLvrMr6xO0
An4t9JHUP1tqH8Na/S8dHz1PrbNHu9qvDmK/yvpF+Lka1f/L8dX6YeL/oT4Z
eYCD6LN21HejftnE+ojkzw3Uz9P8K+yLI/adtAviv6+03ye4LsQfi/2rp74R
85PoOxYR+8v6b8e67Wv3T15kTx6Qjp/4xa7tY8ET/UPZLrqXGj+xFFrd/0u1
1x4/655G/bpa/zo4x/bUv7vKX5zZv1I780IX85TqFx9jfjhTX+sHl+3oo1Lf
sJP8IOJdOE/ykPP4xMOQJyPtxAPhX+ikPet3kucs/VsKuX/GjfeA1Icsbn9n
+1rg/UGeW+v6tVuDfLV8P+8sfy/1h+P+P4t+cupGRByO1o/pYvvXeD6PE+u3
drF/8gCPEr/E+if9UFLfluOfyPOsPP6j3F88F+QFMQ5bv99qcRT96md7vsdQ
Pb7EtcX17VYan2cf/63xLPPPvdjabmQ2t+ClsPV5mc1ms9m8JKd+jTDt94Lt
T/gVsA/+aOL+Q29POc8j7IMH6mtL/iB+Q+qcTfUfbg3yqrLO2ET7cPo9Ig77
Kv422jNOe2r9shFsPX7V44PuGPa/q/EVnupfIb5Z8pzWGp+T5O9pfmIf/rus
QyT2DeyFmT/4YPVh8Dvj11T/bepD4j8X++Vc5Pijn6v6duim4cfdmX98iPma
uneaf9qrvljr+ltfjP2IH/lR7r8xbH198/kWv91B7k/mB/wKg+aHa/1TiS/g
/cs64KD+Qd5v5Dlr/qrm51U+n49+f+wF1D9LfQCZP1nPEWeh+rrEl/Qvb1xb
v7e6nXUL8Qtfq9s/wP+d6yu9/wrxK0sD/QD84534z3rx/x3EP5fxP7H9q2zP
ugfd0qv1f+hlZ3zOV6Rd4p5arR8B6w/iI4aJ8UlL4xTzY8ZhTfx+Yt7Ev1S7
vqptV1113tPNxo+6lNQx1viHrxbaR7CX6zsbd+bvP835jyDPj7i2p9Vn3RZb
25fM5jm8NLY+P7PZbDabl2Bjn2h2fdDVwQ6/dv0Fvuux03+h8fHRdSP/6osT
9x96kWqHYPsz+pXYpyW/ZCtsffxE1IvBbnPlf4n8m8wfkvh3/EfEx2t+wFwM
4a/I+jJT8/vCX0HeVm3+bKt27KXU/dL6PNov1Uc1PhuD5jc0ql9aAvtHP3cI
+/VB9Am78K9kHon4z47iX9P2g2x/5Z97UDx6/98NeL/ynvjwxnOvX+38SV4a
+bddo/y9vSPfD7z3yOP+2F20M7/g59f82oP436/yv9DljPe2+vfw71LHkXz2
nL9ifYC+wCD5iyVkXNJO/X97xV7Gh7jDMX1N/NpcZ9WfSP8oz3dlfdClMXf9
V71/rV+4cvzgfHRvRP/j72bjw/uHdfTO6kMsja3tS2bzZ/HiYN0jvPV5m81m
89JcwpH4ROGlj1/bvyLwLwiz/+OvLvkg+V8ldPF92mPHFn1Hw/hM8P0hcbC1
90/GzUueQ6v7L+OS4zia34W9hvrmndbPEV3CQevPRbx92v+k/kAR+n3bqP7X
avPTk2Iv49fx3np546v7swT0OyfWB0to/PzHidtvhIfpH3Zh/LhhJ9zL/VdC
5ueQRzTRPn1CXxMdTvXfxXoG/c3hHz+7vdP2mTij3/cSx2/sX8y8nrj+V++/
ue8H4mOwP2v+S7wfyW++yv8q7d9YFlvXB5uJV/F/qT7tgH8//CBH8Y/xvKEL
rPr66ONSB/Es+X2v6O+O6HdqezfSTpzPoPWLN0Ke/8c3zjzFqfXvYvwP5Bk2
1mfn+qeOwtr+afIziQ9cSd97LfC+RFehdv5OkNfK99vvT9x+BNXffy/xO77T
NL5n70DX5EPw1PqhG+HRvx/X+j7O+BLhre2e5n3w0jizvhHe+rzNZrN5aT6M
cLYXgD7iFVcevzT/FkHejjDbH39xyXwP047dKe1PE+tXGMY9qL2/yCfBbtBK
P7Ua1P2OvLtW8fdzUX189F9EZzO3x66NTmdl/k62Y3+LeePQyD5evX34VbN+
4J9cHj911fD/Vvo/APp8fRynF/01/BLo+tX6r6rP7yWOiz6oxN+VEb+7Ux8J
v8d5LL8Lv1I8l1qfsbT/Qex3V/qdC2Hr5xdgDybuvpX9sNn996TI5zfuv8yD
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
8nwY4WwfAe3EpxEnTZxjaXvDMJ4fmd8wUp+vF/tFP9F+QX4YdtSD6otjn4/2
TvIbiTsmD/Ig7djtiNu+8o+Jf6uT/Lkx0I797YD+0sTvxxJS3+8ljif9H8R/
2f/X2+3oqx6k/aznL/679C+SX6j6qNT9Ct281vW1UreKPFTRbxx+edm/2vqO
1cdHPxb9ObEvD5IXOtl/jl0WnbCvXG6Pvmn6uSvrC+X+0TUkj+z3pm1fbMf/
P1Zfo9S/GN/Mo5H7k/bTSPw8emEH7DgSX5D391j9POMuzL1/doPwF2qeaXX/
tX5MILcn/+FZ64fOBP63w4h/jvwi5sHhn6e1F7Hw+3suMj+NPFt9v6BfgP9I
/XtSN1X90xr/sDf9wr2idnyyfi368rK+yvXTh+Cp8QHodqEvrPoIxB/wftb8
UPJCvzHSPoL6+yN+NzI/pm4p6zv1/9E/4js+XLbzfGR8oKz/etaH1DfQ8S+g
Z17h+dD1l+jLqj73SfQv1H+Yuukj8UlbYenj5/m/vDHxc33l99fe8TTro4XQ
7PtjI2x9fDAQ3yS8tV36vXAJc7e/d79ms/n52TCM9bH087fa8y26LFf2z8jn
y/wFya8gbj7rS0z0n83Fq/j3NP+qE//YVX5W9B//w9T48SLEP6n5Aa+i36n1
Oab699S+lN/X5D9W1perBf6ozLP6Izk+di/yE8Q/08X4o1s7VPq3mgH7KvYh
9e9RHxP9SL2/8d+RhyT2V+wZ5KUexD5UAv7FrCOi/nXsTvSjcf0p7FfUBdX8
ztkgbhH/8UT9I+q7ZH5vI31Hr68+Gzk++MXRR5uoz3tCd4LnS+yjndz32Kmr
74+4bzt5TnJ7/O6850QfMe8rnt+J8S0n9OFiflP78LOD/KCO+ksSn5P6gSP+
u7O0X83PxCuO6F8fRBegtf6r1rXV9VHG76D/+/Gy/RT+icyf1/rl5OeP6P+m
/+Abl797L/fX0sCflO/fqfrNrAvG/G8zkfrb1AF8Ev/J0mg2PuhyjvjX7z3+
1tev2fHlu7JVfbhHGR9036k/UPt9bBj/H7a2L793LmG2fR7dCeGtz9tsNi8/
fxiGsV+krj92zon16dN+j33007rtaT++vDF5LmvFR9b2b3GQPzHmn9T8oz+Q
9hHs5vy4r4gjFv/XUdpV3zTjo7Fff1Had4pW/RvCX0pemOZvHMO/0Mk4zj1+
7f2T+as/uOwn7akfRH6a5l/8dfDH4Mb1xQbq+mHnrLRv0t5L3t6VfmbkM3Jf
Wv/wEh1+DfKodzI+reZH8nP7sfzhQn5SCalbQZ2mleqzzkX1/mO9cPhucOP8
6qWQ8xt+CfyvMj+8vsT/42etzD/L+T3mz35i/M5aOMb9n/oDlfrCe+n/owNd
iXy/SvwK1+coeVpbP/97v/5779/SqH4/8dyjEyHxd4N817WOz9sK9J+4hsyf
1PhMvotZ/+j6k3Wj5MmutX7P+A7iGxvpc+79+u6mf9SlQL9Ev++Je7kzPuzZ
sbX9e++8NPrQJ1fe+rzN5mfgMaz1fBuG8XjI+SHi89Hv76V+Bf4D4nKwY9bO
L8T9o2M4TNRX6kR/86D2TfKm+I7S70f8DnH8Wv3AVniVvKor/aOljhv7z/h4
7KcT69+cRZesVl9yrfNLXUSu/0T9yb0Dfxm6Z1ofA31O4uDVP07dmtThauw/
z/wz8uMmPt8n6he9vLHqu84GeSOic1i7/1epa4U/ku2ZN7POo9x/mRfK97vz
Uy6QceHon0n+WQmv+A95P0ysr1qEXN9e/OtnyV9S/eAx7P36771/ewH5jJnn
JPV/5yL1nbkPV6rP22r/WTeQdZzYt9HrIk+/Nr862zU+qjK/JkH9Nfzvat/+
EDxRH7fV+PWxfhzu1AccqNv3EtuL/kIn+vKT44NE1xLUjg/19HL9IP7rY6xv
uP+HndSnrkXqghAf9PGNc/xpJ0+38v31KOf/3kH+M/U5NX87v8tYH4r+/e6B
vv7H4InxS8ZzA/tD2iGCW81vW9vfH53nAvug8tbnZTY/AhuGYSwF3scnqTPH
/HNGfwydP2kfov080p66i/FdU1s/DnDctP9PrV+zMXrVpxT7CvVliPNX+0XG
ZWOH+vSyHfsP/re1/Yf3tj/K8bGP9SP5acXt0bcJv1etvl318yHXXf0P+O8P
Y/pvd6LV+J7Cfkdcgeq33ova8e0kr1D176grSFyC1s+jHidxBbZvtMGjj1/2
n/zryEu99u8GS528rc9/6+M/Cjrin3gPy/v9XuT7P/bH/HPYSX3O6uMTF0T/
pT5t5idE3VXN703/KXn8U+t/UR835medvwfiA8iPXWn9VIsz8fCxDjlPjK9b
HDF+GWfVKD6ndnvez6P59YZxB/b+fVMLvt/P4udfrf/xvcp3yVrP59bXz1gW
tddva/v93nkusv6K8NbnZTbvgXkesMO9yvNhGIbxXpH6hOhfPZi+Sye6Sb3k
/4yBduKWyUM8aP29Ygfid+h7Snwouo6D6Izl/om7x35S2f88PHYp6lNpfT3q
D9Kuxw97IHVfpub39NhfX+J44j8lvy3r07XOH1sYZ+6Pxv7d3B67KuMv9ZkW
h+bHSP0f/OfHkfuL66t1zHJ79KOwP3+8bOf+TX29yvzQBLo66PA0qt/y3rGX
8cMfnfmH9u8aDVB9/0je2lr+4dr9s65Ifbqo85fbk19NHt7U/LudI+NDyMNv
XT+xAOo6Ujeyr9RfeHRsfX61x8d/S31r/b7BL8P6X/Vv0y/Ne2hqfWT0VdAv
/yj7V/38if4Z8ncH4rca3X+tri96LpzX1Pq7s0FeLuvL1vEFhfqBmV/K+ljj
U6jbiY7+1PqdBeR3F9+fK31/bT0/GG2wtf3+0XkuiL9X3vq8zOY1eAytni/D
MN4xsItM1A8C1EdKfbGd5Mfl8SWvQe1X+KPyO2Rn8bvk2/FddGX/lfo6B/m+
yfxH4vg1f4z6DR+CNf6duit8R8n3G3VZMn9K/YfoQuKn+Ja0F0D+Wzfif1ka
Jf8edSe7sfElPwv7pN5f+L3kOuzl/nt0oN+FHerq+hC/P1GfFWBvyjwR1a8N
/2HaXxrbNzKv60PwTvK3apG6e+g0hT0p+x/2/NRHbXR+Of8zv2B/1PzVpUF+
EPbB7658/AcH+mW892rry7yX8UX/mPz/bmp8z1yQd0GcTWX9zKXbm4G4kZH4
p7lAdxTdiqnvJ13XXc2vC2G168P4x3tX608NrM9G6gui29+z/t9Jfms1wr/H
OlTj63r0efGz6flHPmu+Xx+kfmkt+D4hPlDjG9E9IQ5xqr7GGJqNH/cv/rPK
+Xvv1696fc36kPXzzurHGs+Nre3/e+elsfX5mZ+bx5Drx1g/vf5S/p75/vX7
yzCMvaMv6G92Bf3OMaz1faX1/fqJ9b/uRe6fugrk102tTxf+Auq+UIeB9tSt
D7+a5i9d5ed9eeLxFwZx49RNXF1fjPsWnTD5vhyI38W/s1L+Te6fvAvR6as+
foxn3gfhL8rtPwTf6f8vgfqMQ4zvWs9fLdAnSn1ctS8Ql8z4/Z60i3+vdfzy
bOBXC7v01PqC9yL3j92V+UvbS9sbm+KV+A7qC0p+EXWDsk6Z1icrIONvuE81
/1r9ezJ/URcMu+3V8/ng6NU/ofq/jD/267XnV/wG5IE8WPzBXBAXRXxV38h/
0AqvUb+QPHWel9r+UfeOvJmp58fxWOftRd/U9pt9gPqOxI9e6UtEfE7qu8r3
00n0KWrXl6t933B+Y/X1ZoJ6q1mfUc4/66O/BO8kPjeh3zfBu+nfQnia8yO/
nu+LiGPdy/M3F1v7J7bmuUjdJ+Gtz8v8Pngp5P6pG/DVy78fZX4zDON5QX5D
xsHGdxTzk9bPI96Ydvx/2AEn2w/iuwcdEPxxrdaH2Me6ifqdc+dntieuljpo
V/qSdx4/x1/8Tvjx6vsfv9tZfacSavt3ZvzH7J+c9537z/pA6CuKfRr7xUB8
rta3I28T/4fkp/SiX1qrv5rt1BUaya/spX5Tq/p/ze4f7NufBjfWLyNui3nt
Kj+1gNSPxc6ydn6w5i8H8viia3f1fM+9/wvALpx5GHp88oL/ZKT9Tux9/noY
cP+g3yX2N/xOOX+JfWfA78d7SuqjZX4s85PMn7yv8/6pzA8r4Vnujy7qkxJ3
VVu/uNn8yboPHcD/VHf8p4HExbTWDz0RX8c6Rq8v9gX8rI2eD9BF/ljqa0l9
vxP65eSP/eCyvWddOhZ/Rv/juT8cpf3ZEfF6Y/Zx6j+ij7hW/ewStj7+1qj+
/oj1fydxGNXbk5/48saDfB8z/79yn8jzOUQ799Eg3/dLYbXvg50ef2k0O7+I
983vWJ2fS1D79pV/L1j8uM8+/vq7R+XZCL0S5a3Py/w+eCk8+vxlGMY7QEHf
cgzV6xv0PV/eGD9Xfp/I94/6F4uI/WZ8UCN9qurt0RfBDyH15/Bb8l3WOr6b
uNb0Y4r/iuOmPqH0rxP9TdWHOZE/8RL7q7Qf1iJ1P6k/uLf8p/BPMK67y8+a
C+zurL//8I13c35z8xdHwPbYT7I+4c7yC/P7m/yYAP1L/8pXb7cfwn+b+VFi
P03/Cfm9jfXdMv8VfTW5ftRFPITfdq36Wq3eb8Yy2Pv4t7p/hvCfkD98Vd92
5v7nbn+M/C/8O/gZcn2BPnL8/3X8SfDO4oe2nl+qEf691F/U9Ve8r1WHMdvD
v651xPL9F+tz4od60WfvyGuP+JWr+LRPg9GZ+CjtI/D8+9lY7fulsH0v8Z2v
rf1D+DWlzmb1/lWfQuJH9g7ia4lDVP9dCSeNz5X5uRf/39X1Q/+d9ePU8UOf
gfzlnfifAfoCw8j8NnBfv0R7pf/1Yd4fS4P4lviuaK4PTdzMQvoyY6i2b+3E
j/Fo/pOt+23eB4+h+v7i/SWc69sRfpj51TAMozHy+z78O+dYJ58kPnDu/ovA
byZ19LJ/rNvxn61df6YE8qKoUxN5Cnvp3zG+D7OOutqPyEujflxlfPVa55f1
C/FfaH20jdDq+Bn/PlJ/Zmmg/zOM1RecCb6nsRte7T/+7u/OT/1sdOKXr30+
0z6AXSbsqIfK/MdqsG7l+1aOn/bVr9xuz/qZXD/Vj+C5wT7c2r+G/Y39i30/
6xaS/2X/3irI+yPyb1In+fvdRXvGzeAf2Nn7a3Fw3+bz98at7p8+/HvU0VX7
aOa1Uqeycv5fen1Wu3/q1ub803p+vBN7GZ9j2N+zjvLE+JJedPnG/HfEUQ1a
v5n885fgif6F94rq+5/8ZdFRyO1ZX0Xc39T6gOivnqVON9uf8M+LDkSr+x89
89R/mFo/8tkR71ONo6sdH/Rw0Dk4iH8qdW/RzxX/O/cFfq5e/H/HWL9qHOpu
rl+MW9ahqBy/3fR/BHvvXwL9hg/BK+n7J4gbYf6snB/Xsk+V/BdZ30Z4rfHb
yj+zl/6Zt+V7ke+vEV7r/jQMw3g25Po/vg+6sBPwPdBs/fR5YYn/Sr/Cp8Hy
/Ug9j178aNkufkHND+v4ro79T/2+pt4g30278y+WQF1F7D9af0zq/u2tft9s
kL/Ed+RK9fUAda2GkftzDPl8cH/jP/4o24tu2FR9lMzvIr/qO5fbD1r/RO3T
2K3Jg5xav4f6Jdg3xD6ZdrGwa16d/wiaXV+Oy/Mh8edZtwwd1kb67Lk9eXd8
h0s79V8yPkL1EfGbEj/fSD9n7vhvffylsff+vXfs5fp0oR98fInjyfv5lfwM
2mX9cQx70oH8DrEPj6HV85f2Z3RYG+k/1yLrv6IT3FjfeS7S7vfyxrX1mRPk
9ZF/LvcH++2Io5H2vC4R37L29VkaR9EXVf3Ce1G9fgn/Wups/tPl8fHPpY7G
VP9KbI9O7kH8d8QPHBr79wDzE/tvnt/34Mh1L9+p8n3KejX1MyR+jbw+xrWX
+4fvzsOIfs0x7ju+UzvRz7kXefw4Ht8hk/WZqQ9AfJx8H6RuPt/Xcv7Un2V8
WtUX9P0Lupu81vjme4n6yqI/tBVqj1/yPwwjXNu+NZ9+fptzfAr6YGbzkmwY
hvFuQf4J8XuV32e17a+S99c6PjDr2sV+p+pz5voRO/3E/ASNr2ylD9oK6LXQ
r7Xq4+zl/GeD+nkj8e9z0Ynfq5f8mRJeI/+G+3BQ+1HYD7M+jn7/ov/YuP5N
7fyAPh32raPY314Zf9EJazX+5xg/8hc62X/GB+Cfmxh/vRXoH/VfUp9X8n+w
O6W+VaP43Lnvj2dHnj/50fhnp+pjU9eK/OqV9IuMdXCmfhL62eL/ufLfFfx7
qk82hlbtXdRjG8tP6skveglW/1OcP+sY1R+fC/SNqeuq9WmXBvnVA/ExUh8a
/2368SbW3833Jutjjd/aGCf089C51/5pfbovSXtp/+F/GqtPdi9yfNEN4T06
df0m/j/1vx8L9RePsn5SfcbUP6C+qcRnjfZL1z/kb0v82YnjU2fhZdr+9w7q
E2R908br/xI6qb93UP9c3HfDSHxr6iayvpi4vsN/l/eBzE/cr8QNEIeb8zv3
7Yh/cjburC8yF9XzL3HRxJk0mn9Ww4fujVlfqv7zQv6/BPX9RId67+O3Vv+2
9p/kvC989f4W3rrf5n2wYRjGuwXrqrH1Fbr52Anl+xd7CnHLV/UxyC+hTsfE
+OHU3UeHRuwv1AfoR+oDpH8BHSytLx/7y/oh+v3M+aFjJflXud3E+ORaZHz0
o+bvzcWH7o1X1sevReq6hF2jeX05yTttrS9IfQ7sC7Xxqdku5635YwPf5xvV
F0z7XtiB17afjCGPjy7Mx/hb9UG/d/n/V9+fYY9LfSbNf+X68B3bqH4F26Or
nHX6ZH4tbW9sDPyu3B8yv2TdLPJsv3LZjn1pwP68sn8aexbxC7X25QTnzzph
an2mBwd6CZkHPDF+/SzxHRq/kH6/+H/Nn2B+Rkd5cv1g0SU8fONye+ofpZ/k
04n7H8HS2692/4X/JOtI7W19yfsrrmutvsNa6Ml/xf8l9nXej6lPr/E9sX3H
Oky3f3lj7t+hUX3tfP7I70NHRfPzRLfuSn+C+ZM4kK+27V+pnfgE/Btaf31z
4BcSNOsfugjEz018f71KftpQGZ9R3G/t9z36LfKcX9nv0ZFf+/nnuwb/f6U+
xmr9m+lfLSKe67xO+n0S10frPOT8wXbMHx9le9Xn3Mn6a+vjr4Wt/S8lzrgS
4bw+X7jNW/fbvA82DMMwLrGX+bGT+tTqv3st6INk3CH2Sakfwndh6lP94LJ9
DLn+IK5QdIhajV9PfDp1pFauL67+ET3+KfKTjiPx+320dyPtmf/zEiz+l4yL
juuq+lLYTbLOmfqPNP4ysNr9Tf4c9+FK+l05/h/jONhf1P9YGB/0lwbR6Rpr
H9Q/+CF4xD/bi31Y82/P6D9xH6j/fgR7mb968kNER3St659+QexAK9W3eJTr
U4T4RUHev+jyEQdSaZ94mPPnuSe+vtJ/W8LDnP87Re31Kfn3iBvROI/3fv/k
/EFcHPZRtW/PROZn4l9SfTryz0byM0vIvLjYTvMD94q1+pf1kNCpF//dMcaf
OMWztKeuA/VLK/MjW52f6qtO1Z8d4vw0jizvP/kuI46ydv/dnfl9JTS7P0S3
vlX+117WF6lr+OkbX+v/B4/lv7G+Ir74g2z/MXih+thF4DfFf6D6I8S1RV7j
dXzvbV76+jWzPzDuxA/+cTdt/zEumZ+p9TPj74zPEvsM+aLDmP7sTrH3/u0F
Jf8M9ifl2ufH/Nycdo3fu2Q/f4ZhvHcM4X85hf1cvy+x31Bn6Sp+ZgTZzrps
LD+uAPw/mSci8aWp/0Z+kO6f9fmHYLG/sl/OW/0XR6lPoPqESwNdxONYfCX6
T7FOnvp9vBWq12cvb4zdcBD9T/JH8IO20gettl8Q94z/cWp9O9FvbBU/CzJv
gu+rif7ngfjolze+8t9Sn3yh72/iyrFztdJ/y/3H+L9O1OfM9oL9hvho5o2D
2LfTbkZ+8MTvZ+oekZdy+Pbl9ll38WO0i36mUYDkdYF8/xDf8b3L3+X1ZV7G
z7qz/OMSqM+T9pdG/r29AL8GeTFX9sUHB/Z14guu9BfxS5M/IfNDxhexzhL7
2ynWh2PxPWNoNb7EHR1E53gv9u+9Hn8uqtc3kR92RmdD88OwG4/lhywN5vXG
+giPfn3BGX1b/HON6t/l9Y/9nyQOMPcf7QfWydKO/vpJ4gQfZfx76ktTX0L0
UbOu8p3rwzGsNT74tfM9OxKfm3Uo5PsbvQ382pp/ne3kn7eOfy3o/2yFZsfX
/Lmr+L/gO+urp/0dHSjVP/4kmPdApf7D1u3GPFTb/166m1xtPzI/Ne8Ve++f
YRjPD+qP4Cd5Ff/evah9/3ZS11rtT1qfoRf70r3Hn4vq44deRa5vJ+q7Yzc7
TfRvPAvSf8f5y/cb34/ZvpP8gGbXZ+v8wxLwW4zUr8n8WewUHy/bx7DW8419
OvNLK/VJp+4/64Nq/D12A+KD5fs663Zi//xaXf+2nh+fHTl+H4LDb6ft2C3R
vVP/yfFnn91OvUz8tq30VWvR4Z8mfmZifarNUZg/ic/I+lbS/u6h9eNEf4v6
XIe4T670OUew2vjiXyf+pFI/MM+P53fE/p7r55f4e6J/M/Xnuf8eJP+tFq8F
/x76kMcRfci9IvsndZuIJ8x2dBPQF9T4mo/BYdfW56t4/AJSP5R5XO7fEkr6
nZrXNLn+Grobd+qfvKIfEe/Ro/oH70Sr+y/rX3N+kr/0GuNKv1W/dTZU31K/
P0X3cvX8fNGv3d33reYXXtWH2watjo9+5rPGBy/VbrRB0X/zw9uc66c/u81b
+53M67BhGIbRFjm/UleP+HfJn0r9db5fv1Vol/q4xePf2V5C7fZ8NxMff6VP
OBfEbTJOMn6Mf/pRVP/iTjT7fuD7nf5NrE9I/hO6qXp/Gcug1fNHfsUwFn/L
/1O/ciX9UkA9y8x/+/O2x0eflrjlw8T44k7yU/oH+f4GWRcLO9KHN877I94b
aV/43mV71v/Bv/DJZftWyO+MlzdOnTGJb87zp36tbF/a/73txnNj7/fH0sfP
/RNXgv11JX3cd2NfJD8G//7E92PmZ43kf1Hf84CfszI+ay/jQ723jM+oXJ/m
+0/iKg+iTz4X5LdRh+Aw0X/Sx7plEJ351v17Jf+u0j+X79fYHn2Z18b+vaz7
ENdFz//M+o78tKnjy/cbcRSN67fnugM/1U78U3PxKPPDVqg+f9blC+lDL4Wt
3797H5+nAd/Nwvr+VN7a7/Re2LgP/3v8gu/NjzYMw2iMtew3fP9QN+QqvlN0
PybHP7K+xU4k8Y2pC4gOnsZv47fCPzFRH4r9pZ9U7QNSN7s2f2M1+9pGx5+L
2v4TX5vXv/X399JA15X7TOrvjKGVfSR1edHx/A+Xx8/nO/xrrcdX7Vu96P8s
jqgXkfqN4p/XuhI6Pvcix1fqZlifsw0eff5bC6l7if1I9Un5rmmcn7xafAB5
B+hcNqpvuZb9aa/xA49yfPz7xHUNUh+Y+mCH0BnoKus7z8WjjN9cUD8gdYQb
68OiL0pdgn5ife4SMm8LP9rE+oeLI9Zl1D2oze+p7v/H+B3xnarPyvoN/5/U
XyI/FJ37s9h3M69QdFhzfYQ+AuuzlfRht76+ezl+6fsXfR/qT/aqf3Hn97ER
IO8YnSH9PqB+gMRBbr3+3dp/5/trHt7L+G/tf7N/b5/w+BmGsTlU36OxfZh6
61nn5b9d7p/2rLMi3+/EV/Yj7Udp1+9/2vP7Wvcv+iGd5Oepf6+2/ksJuX90
m/Bvan3pgv4n/T+Lnye3V/2yRvXf9wLsPpw3deLy/PB7oE+j+ohh18n6aa3t
Gwsh+49dnec4/Nj5fOH3wj8uz99Vfbmr+CLhifdPX9LvDH2pjI/W5y/aX0fa
sQ9Rl/uqvmbYh7JOXqX/r9X1zfptxAdI/lo+t+QHNNZvQxcu8+c0P475hfwY
9c9I3sxe4s+u7n/sGJX5PY8C3g/9yP1jPCZq55/MD0Unr3L7WmT+Vbwnav0n
a4H4jWFkft8c1B/6ELyS//e94Bjvf/w+V/p+EjcA1rI/pz7pSH25Y/gnyTvo
JD/hUbHW+qno3ysBXe3G8fPV21M3jjiYRt+PW6P6/YUuDXXYxL9KXXN0n2vr
63l+rQTr+wfL35uLZ/cvXT0/wluff3V8TdhtlPc+/mBr/5v9e/vEo88vhmEY
WwN7feoMSXx11jWP+ECt/9ejS4OfTeIL8QucZD/V/g38RvifJL+qw//yEr+T
+OEzfkfR0cl24prRQdL1kcY/qv3+SVH9/Rn+otSnWim+t4Q8ftw/eX9Kfmsv
9z1x2Hp/pX97b+tndA/Rqf3OG7fq3yD6r53EB5MfgA6v1ufD70aeYv/nt9s7
yWPM/kvdE+LNq+cPdCuJf59Yny/9i8TnS3174qUzzl3rA9F//AsT5w90ufAb
9B8vt8duR1yF3r/GZwO7GPHx/ZPV93pW5P3P8xl2N42fwF+Q86NsPxf49w6s
QzT+YyHk/qlfRvyS1H88Sf27XvQb0v6PftOT5M/t5fl9VX3CxvqSS6GZfyn0
HbL+pNxf6n/q1b8X9+/rzvzT1e9viXus9b8AvndS33qif+ss/tPTVP/eQqg+
PrqfzPMavzkX6NKgz/mhzf5ze+IXWL822v9aYF0Pvz5I/U/jsbH1/bUX/09p
++7vb/PW41eLrf1v9t8ZhmEYzwj9bryq7/TXn92eddE/jfa/vGw/S/29rtK+
kcfnuNjpRZ/vJP49tR/kdwn1OzS/Cbv4SP2MrH82Vv8h9E40zrU6/iTGK+M0
d6IPuNrxP8RxGEeJD8Yvm/G7Gr8a9xP1Oa78KwvhvcQXoaeW+XOSn0k+4EHq
BM4dn3y+iQvAv6X6bsw/4de6yu8L/+MJO38j+2qr81sKz3L/PTr6eD8d0bEW
/zj5NR06xz+8bB/Do1/ftZ6/XL+Qn9ro+CW02n8n+sQHya8nv5o8eo1v6mP+
I39b9RUyLwT9CdE3KKGX/P/a+ILd3L/k7XN/iH7dEOPHeXaqP89zHf+v+nm8
twZ5Ty19/68F8kPPEYdyfnnjPH/1L4n/ruTfO+CfHokf2gq1xz/FeWUdcvFP
nhm/mP/RS9Hvj8NI/XC2yzq3+v2DfzTeQ+i9bD1+a4HvubH1a09c54h+cM6P
xFGIvse92Pr9U3t84kIOopP7Xu6fpdBsfUDcM++fifGn5EcrV7//43tLea37
497+N1ufEDcK/3Hd8WtR9O/959v8KM+n/W+GYRjvC56fK1HUB/xsqC6n1h9L
/TZ0GivzX0DWF8L/Iv6/7P+Y/gt+r8hLUv9OL/69q/jzgn9vDNXjR900dMC+
Xbf/p0HkY+V98odvXD2+8fuMc32S+hDNvt/Q1UV/Q/zP9x5/63Zwon4P9i2x
7+Vzxfwj91cv+Snqv3vFf4K+qOYXSl7hlT4t85bU6Xv0+zNBXgHxGe9t/loI
ef+Rv/IS3Fi/Ef3ew4h/G/9P1tdcyT7+7P7ztTDg98UOrfoJXF/mz4n5FSf0
D5kfd2K/3fr4IPXxWR9rfm/4tdCnv9J/eHK8hn+qj3FQ/xH+vcxDl/ZHRbP+
x/hRv7CrjO8oYTfj+7F745H1W8Y3/snl76r7jz4C+XdfkO2lLvyg/vdo70bi
O6n/3IlO/m7GdwRX8S3oT4h+xqOiuv8RL5ss8Sv3+geW9kuY3weXUNz+b2/z
ozzfW43vo4yPYRjGs+G9z7/V5x92B+I89fukjO4m5/ZaX3BifHcJ2KMyj26i
vgD+j0F01t6NfZG8Rvyfv9ute/wCeqlboPphj4ra69+LvtBa+n+Pcv9iH0Tf
TvNvUxdX8mRr+5/5h+S/SPx26vNGXH0v80/Gf1N/b2J8Kv6UjHOYal+h/kc8
11PP31gYcT2JO1lLf6t2/9jX+5Hn6yj6kppfT15O6nSrvhz63uSZaX77TOAf
pV/Wn61Dzn8SF3IVX7URtj7+XOT4xvsL/che8rM0bkTj07i/T439g63Gt+O9
Fe9PjR/gvdaP5EfN7h/zKjqKjda3q62PiE8iD6xx/S7yvbN+VKU+8GrPX/Qn
7xOdf7i/8EPp/UPe3MTvz+r12cf4HddH9T+kPkSt/Xwv7/+9YrXvi534cczm
W1xCcfu/uc2PMj9sNb5Lz99bH98wDMPYJ6q/T17efpf15abmB1AXgPpQE+tb
zQX1sfI7q1F+zLt5P4bfIfU9J/rPTlLX5Cq+VfS9Dmo/iHyfrP/zxWnH3wpr
ra+o33caq++4cwzE5Uf/W9cfJH+kG9OPw69FHUzJ70SvKuPEv3XZPkhdxcn6
Mdz3I/6/MWT/tP5fI/3YVuOfdmfeA1K/rHh84vKJn6/cfi5aPb+ZN0AesfQ/
30tfud2+FFrt/5X5++WNtT4c+e5Zn3RifgL2/9TRrsz/rLZvEP+zkP/w4YF/
iPeLxjfhl1moPmsR6F5+CH62+sXkxeDHkfdPxscxf+j6SPIzW9XPafb8Rf/G
8uPxb2oeY86fzAsL3X8Zf8NxpD7u0sjvF96jev1nYhD9UvJs045JfmS0Hyrr
6601PqpPuhd91RLy/n15Y+JbOqlfWtr+2UF9DLiT+89sNo9zCaXtsy6F8KPM
P4uPb3eba8dniN8pz53/l243DMMwnhNLvx9ye77b8S+Jfa/X+EfR/1wKuX+p
r3dVvwv7ZvRT6yPNBvVXxA662vnf2Q6ybsxI/lOP3TXixmrjt7dG9o+8R3R+
GuuDDhL/fhWf/KTg/NB7Iy9X6/ORd5s6mTsZn9XmzxIYF+zH4h/sxa7JfVzd
f7bDj6r+rU/j/8mjkPxu4gPSj7qSvu7V+ZPnONH/Nmj/tX4q5z0yPnOBblj6
X1aOrxnD1sd/dOx9/FbrH+su/GCN85eeFc3Gh3kr5hXy4a/sX+RJffWyPfUx
0C/U9TvxZcSxfCLtxiy8Sv1C9d+pf68X/18R+N/Rx9+Z/kcJ+t12iPVKri9F
30b1M1LfOrbrW+tX8lyhX1K5PtsL+O7L77/gtfq/tf/FbF6SSyhtTz608qPM
L3sf/3tR2v/S7cZnw+NnGMajonr+ivhcdOqu6tc9KKrfj3x3kb8ROv1Lv1/3
Pr65fqR+FPpRkv+ReR8P5t9bC2lX+DT4neSfPMzzgV+X/LUPXZPjsz32JeIK
avVT1pp/Mj+N/DvdP/Pjh5F28naPI+2F488F+rfY5Vodfy/fV+nXxf660vGf
Zn4iPgX/Q2V92KVRfX9FXATxD1f5lcSn4N9eaf1ifDZ28/4Tvx3z/N6v/176
16u+5sT640XwfiW/s/L6bD0+Wx8/wbyIn/njG2f/RNf9Kn5nLlh/jNXH1voW
lfPz0tjarm42m8sobU98o3Lt++PZGT0L5VbjT7yncrbH+ybfQ5Xvn7nthmEY
xnOidv7vqHs/Uj9kNviu4ftV6iccpX6E6oedI14VnRT1P5baSzhz3vivRD/m
VdtF/5T8xGEkfvRe1G4/xPmfQ9+pl/pI+Oe6l+DK+hzg+JO331En8Uqfs6Q/
VQC6jNjpB8mv7Lk/uU90fYZ9E//szvRB+192/4vTfy73zyBx1we5f08/j7/l
Ouf9GfHbxxin/l9l+2jv4j44SvsYdP+v6G+N6EMdOQ/ZP3HlZ9Ep1e3PolNW
27/UrYo8wV7yCzri3skjlPurtP8O+xH+o9b5CaFvxvXvVf9Mrnutvmu28/ww
P4l9iXzKtDPK9nld/m7b9mFm+73HL43PGGrvD54X6qLp9uhdpQ7txP1vDvrN
PD3Rvsl6RHVA8/ow7/B+kOeDuoPMq9PrEy+DufMfOMb8wX1ymDh/Lo1cf8S6
QfPDlsKj7z9B/t2HYMm/K90/xfa4bwbWj1P1t0XfQeO7VN/hMDG+iXUD8WWT
+zcT59A3znlk4vfRq+hr6vqIdXkf85O+309y/a7Wb/H8D7FOP7xM699ov2vn
5/jeSZ3aJ4lfq55/X95+x3dn7f3Zanx4blnfav3cEub6H+bu32x+z1xCcfu/
uM2188+zM9+9yrXjP8j+9O/0233h8u9s5/+Jr/pQd/y57cZnw+NnGIaxDR5l
/sUf1Y3F14+g+vzwW6Gj84W6/VcD/bmx+G7qa2HfFvtsfl+iwzrRfzK3PfPj
wg5PHcK93z+t7g/qI1L/Qu13JftQ5rV8DK6sn1UN6gqF3UHrC71ityMOWttf
oh/hd5+6Pr8Xq62vw3/bS52xPH/8woxfI33j6u9L7Ib4v6bW5yN+kfjGicdf
CnP716r/1JvM+qmy/3wuRtofFdXzO/ObPAc5v1H/S/x4uX/0CagfOrF+ZhG8
l8n/FX3VI/6tmOeGifE1xn1oNr7YZ0bqvy6OQn7m+eWNB96P+v6U+C59fohf
Sx3tlf0TW+2/Fhk3GH69w8T6iH2sv4hD6NQ/F/tPHVTZP+u3fmT9lvOfXOe1
1gdLofr4rEuIw6nUD3n28dnarm42m8tcQml75+8ty0V8iN8R3671Ffg+YB2n
9jXn9xmGYRgPiAHdkrDLX+mXjOBh3k+8t/GTxXue/nfUf0Cf7z9etmvd9v4/
STvv/6h71ar+U64PI7+M+N9O/ENDtGPnn5pfUDw++R3Un/rjuv1nu9hVV6//
RdwydWykfgn23AN1Phrlf9Vuz/Xt4/qdf9jm+CU8+vO9df9bre+JO+i5Pz90
l9vH36lfJfX1yO/IOjWt9a3uRB4ffdXIa7lqZ14Z0x81FsHS36e7+f4lf5/3
u9Qn6mL+xf/YPZr+OXE/I/7LrZH+rVhnHXT99ODI+Rv7XWX80qOf/176T1wS
fj29vzLuQvyw2X+pT8h7ONvJayR/+3uyf/RBOc63ZPtS/9HXJz7iX6ZtvxWq
17cvb78jf26Q+C/q8hEXdfX99aBYy37fqp9ms3n681Xa/t76e1uf917G1zAM
wzCMO8B3l9Q5r33/oveT+UXfqds+21UfW9sXwmrri9DDye//0Mvk+IPUp1D7
AfmGaUdQ/xpxsaFPeGWfGEEeP+wi+C1b6ffk9iX/52/d/l2uj9G1oL5KI/2w
6u1F17TWflrdHvZldFZPa/v3GFd0XBvVv6r+PkL/8uWNW+XPzL0+tfs/vcR+
eH5E31jnNd0efcPUR/uGbL93YPfkOQnQf+z76WeX9qO2N4qPeBpwXzD/R5xK
zt+iizl1/i/hlfxV8ohEH7u0/9Q3RR+tcn2R54f/Gn1fyT8nf5A82l70lYnL
OVCHVvx7e61/tvXxa5H55cQn6P3J/Mb4V9q33guI2xrIk9f6yeH/IY/+MFHf
bzZK9Wt2jjO65SP6CcwrfP+o/jx+w4yf+b5s/2kwfkLJT3uVvL7+0eIHZgJd
ZuaBVvoOW4/fWutLs9m8HZdQ2p7vGuXa+ePZeQy1428YhmEY7xHYC1InUeOn
536/f4zfiZ8gt0c3ifyNyvytZu93/EPYoVrX57oTeXypf4K9rNn44DeceP6t
jp92jxH/pOoqMQ6Pvv6jfyfq9qGvJfY79KFO2PFeLttfw35NnZuj+P+oH0Od
zpPoQ1GXkTzVQfQlS/0vgbqCqVNZab/K/lGfDX0+0R87h38h/WgT/QOl9v5j
/I48M/Evz91/sZ38UfxkjfyrWyP7j24w+bvSnvnBX73d/uzAf6Z5TnPPP8eX
5yrus6v6qegmE4ei/sE71wdrvV/QG8j3nOZPfQge0W88kv+O/f2fZPsSWPeM
6GMz76Nr3DXKX7u6vjEOtf5dgH70EOffaX1j8hqp//Zg+qXUpc06amv7xwrA
/53+j8r3c/X+yVslDkzWl73EnV3dv4X4q61QPX8Ql/UhOOaBtfr/KvWZj6qv
Ec/fYUSf4xjbU7+zk/w+6j+fJQ5i6+sDiOfI+rmV9u0S9nJ+Y8jvmxHe2q5u
NpvLXEJx+7+5zdleWF+/dzYMwzAMoz2o/0Edisnx+/HdiX1+rfjV2v5thTy+
5rep/aTUvhBy/wvZd3J7yZuYWr8w7QeRl6H1PdJuHn6jK/37Qn7VvWh1fdT/
d9D6MAXgH+M57MQ/mHWtsQ9Lfgv1ZbqR+jJjaHX+Z+zu1LerrB9ZQp4f8xt2
UL3/yO/BTrhS/sLW85OxDtIvs7K+X/X7m/xA/ANT87ulvl1XWT9sLZzQR455
QP1bJeT759NgGR/1PxJPkONLXiP5bfp+krx11ZeeDeq/xvsBP1PuP46X/vnP
Tzw+dediftXx2Rr4TU7UKd6Z/5J4ntTXEP38s+T31T5fef+xX57zP6/bfmlk
/yK/X/Mc8/mS+tL9RP8ougHo8tZe/zw++qzkn+/s/i7ia90bE9/0pTeu7393
yRPXR/jdMw5tav1VdBMkTmXu+3Mv71+z2bwdl1Dc/m9vc7Z/8zZvfd5r8TDC
teNvGIZhGMZ0nML+kX4Ssf+gn0XekebvsP0Q7Rp/Ohcd8c98H060byzV3grE
7x7D/tjcP1qy30n+gdY3oX4RdrKp+VsloK+EbmVXmd9SPT7kj4Ud8mr9XQDX
I/NjW+uPSd1I1Y+jXks3kp9z+G4w+SWib4o9Je17El9IfiB2xF78e6/kjzB+
O7Pf7x7kNaf//A2MX8blx/013f72zkF+Cs+R6qcWcJT8iqn1TcmrbT1/5/bk
RRAfrP4h4yZq3x+nf3vj9J9Ifl/mPxEHIPV9l0Kr/aOf14/4j6gLq36mPD5+
F3Q4tb6W5IXiR2h2/xt3Ia/Pp8Fcp1gv5Psn1p/EFXUT8x81fmjt+mqsn08j
8U33onr9Gusm4pQOEj9wpu7yyxtPzh8uAP3r1MlopI9ZQvX+qYvI/Fk5P2R7
+KMPohO81vdb1leI+7s2P3tru7rZbC5zCaXtiWtSfi/zwzDCtedvGIZhGO8S
+n1UWR+sFaj/w3dNr9/v+A0+DW7k/8h1xMsbn0f0/UrbD1J/kP6utv5A9wr7
muqnhT1lEDtJrh/F/qz6jR36PdiXK/2rtedHvkM34v8rQuoOTq7fOBfkxWGf
rPTvVd9fqr/aOr6bvJ+PsT+xz6V9bez5lLhtzQ8p+ffw1xM/r/pi6t+40qcq
4eu3+7n0/Pbo3x+P3v+lkc8n/rGR/KrS9ve2gw5dPnS05f3D/I9+sc7/+Csz
TuODtM/sXwno6xIHMqxkPwbU78w6fRJ/dFb9yUb6jGudH/Mt98fV/P3ewfp3
TB91BI9y/ZfCWvNDxqdQP1D8V/jPB/LoR/QrqU98lvVtL/qXvfrvYr/kZw6N
/WfkO6b+vOrfhx6w6mBsvX6p3p68RKkDnuMv/rUrfeCPwfj3vy7tM5G6DsS3
6fcb70fWt5X6IK3s+2az+XG5hNL2GT8rXLv/rbH0+BmGYRiGcQN8V/F92Vq/
aS6k7h7fubvp39KQuj+tv+81LlnryxzFv1frX5nbXo2wx2mdlNw/dfnQsau0
b9Leo8uJf030O0vbZ14efshG/sfq8ZO8yqn1KznvjHMW+8w5/Hf9iP5mMX8P
/VCpw6ftWQfpR3X9T0S9RvXztbr/9L7S+0P97lf1IbF/Mf9+q23/igh7Vc4v
qp/L88V9VDn/7H1+btY/fT/p+HwIHqnfNoZs/xgsebR5f5H/hZ9C7Z88Vy/x
e/Ff4TcfxvTlxK5+mKhfhz+MOl5r+5fUbzc0ir8Ax/APMi8ddlafbXGgCzWS
H34vmo2f+L1r81MffX4rYS/9P4X/rQv/20nWl2epDzdo/bjw77E+vaovJ+uK
q/i0O9dHJTS7f/Avja1v0T0Yq48+9/gz0RO/F+sg1T9Fz524zav1E3F/xLl9
etm+OZj37owf29r/YDabl+MSStvz/ahcu/+lMPf4S433MHH8DcMwDMN4P1h6
fZDrkZc37sfyF9C1Iv5e/QML92+vyP4V6n9gP0o7r9p38Nvhv6rU52kF/GId
dWAq81eyHbs5dpI/vdwe/2LWGZlo38Q+Tx6h6gehr4r9TfM/S/69g+jHDlPz
8wr9v7c9f4d+L/6Bifqh5AehU0cd0hwf7kvycFvnB6A7hX/oD9vsfzfzA/q/
+OHXtm/emV+x1vgzv3DfaX24rN8W4zdMzJ9m//1Y/jv+Qd5fU/OzZ2JA/xl9
O7EvD1I3rzZ/fDf3/wiyfyX/86OD9yZxPDvJT9z6+An1X723+Li5wD818n6h
7uZR5rmneb/OBO8X8h6v8uPmQnQjWuWft+rf1v4Fs9m8HZdQ3P6fb3Pt/rfG
EP1UfpT+34u55/fs42MYhmG8c+CX+DR4J/YbQF5O1lGo1A/dS//3jqzr8jH4
229cPb7h3+L69K3rS0W+QuZBSf1B9CWpM9ep/474c+xDlfobuf+wJ2Udre/L
8cMuRX0P1bftsO+LH7DV+Kh/76T+vbnQ+0PyI9PvE88p80jt8anbiH2q9vqA
Ifx7r9Rfe7ncvotxyfpcld9vnj8aQfyrU/UXB/Tf5DrWbt/F/XEauT/uBdsT
1zBM1J9uhZPEL6h+6L3w87EPaF20Q2V+ewk5f6N7TRyLvN94XtBHv4p/kn6R
z730/bH1/Tf3+Vjr+WTeXKw+dAG95PV1K/nnHn3+qu2f6l9e6UPPBXEjI/UH
xpDzx8dg8uBFnz7X9R+CG9evwN8J9xPrO5jN5v1yCcXt/+U2N5s/F8bex38r
7L1/hmEYhmEYY0jdV/KH/uiNa9c3md8Ydp9O7NPoMaFbcZWfIfHXk+OHIy8O
Hdur+igbA3t5P2Jf7akrMqJPOkT+HPktfeP4wNfwf7yO6LuiD3ue6F/J88Nu
i32m0n6r21P35Wp79R+q/acE/L9j8eX4P17eeBD9xGdFfoeF/xc/96h+a7Qf
fnS7vYv215H2s9Rpyusf7cdoV/3XV/JLx+o3ET+An+OvLtsPkv+q/vOTPB/d
xPxV/IL4FQd5fl8lr3aYqO/DuLH/fiX/4Nz9P/vzU8Jq10fjW1au32wsDJn3
tP6d6nKrf+4kcT3Dyv67MdSuD+5tB4PoZk6uH/7e6xNw3mPnj26H6PSv9f7Y
2n5tNpv3yyUUt//hba7d/9ZYenxPwb38vfX45PHRdeE9rvUvStsbhmEYhmE0
R/dGv/nkglutP85SP2Xt+O0u7N+qg5rHp64afsrK+nmrAV1O/Fzqf0KXLuz+
g9Y/Kfj3qJeSOqai//ms2Pr88jsm/E9DPCfHEf/VMOIfO0d+2DnySM8vl+2z
QV25sfpFcXytA0c7frNT/P9Bnv9O6y6K/2sQ/13/48v2q/GTdvJe+78O/nNp
H8HS90ft8Rkf/Hdr1+cYuD7EWfz1usd/VlSPX+htJqv9AL+bPKe+PnU4i198
bX3ZpZDvB+YP9LElP6AjP1niCJrNj6JrXGv/SjDvxbqll/x6dAPO8V7U+nxj
2Hr+T4jfvPb5ffT7M6H5czGP5fkRN3VvfAH6nmP1DUewtd/AbDbvn0sobc/3
mnLt/rfG1uO7FUr923v/DcMwDGNTYFcesy/vFHP7t/T57X19str532lfqQZ1
SdB3nahvlnln3wj+8uX26CMNUqePdvyZ5AGq/m3u/49u7z/z5r55u538Iuxq
tfmTa91/mlfVqn5Tbf9TvxP/V8l/V/BfnaT9LPWBNL+riK/E734/WOpbknep
ebK0H+O8yJs7i3+u/zT2G7p75EvWjh/+yz6O08v4DZKfp/l/96J6+6/H7xbK
LyD/Fp3Cg+S/DuTNxP9rfnMJ6J1lfdJvTdt+K+z9/VVCtX0IXd+4vr3oP/Nc
DhP164w3pD4477l4zz77+O3l/I7qv5P5C3tn6peJfw/98QP6DlP1G9CXvFO/
HH/wYaQ+8rNiL+u7uTizThHe2m9gNpv3zyWUtj/96DbX7n9rlM5vGOFW42sY
hmEYhlEL1heZ9xR260Olftmjr0/WOr+j5NfV1kepPT76Umknmur/wK5EnTet
/0N8MfkToi/UhX8v6xhV+jdA+lXC7nWVP0P+4cf4W+zzvdTlw45ZPb74FfFf
fKjbfmvMvX+qz4/xjetykPqP6h+7yh8tHL/k/yNv4RTH6dX/Q/1G7P9i/yRv
Bbsp9Ubz/qEuIXUeNT8U/zLPx0T/0hiqn4/w+50a52/UAj1a/J79O/OvoMeH
X795/bPwC2ccwu/X7b/6/iH+QfKYc/5+if9HP1r8CwPvrdDdnVq/0zC2QN7f
8V46jOmbE79Bnc/G+mGDvr9kfU1dXJ671vWD70W+n9FVY37Q+svGQ2Nr/4HZ
bH5e7n5ym2nfO0rnZxiGYRiGsRd4fdIGveQV9GGvzfHF/4adpHF9sl7sVprf
lnl7+OckP/RE3hV2XKlPcy/YHr0sdKdUH4z+Hsb0ObVd9EXT/0H/Rd+P+l19
jHun/pk4X/wW6r+6F9k/rgv+x4n1D/kewo/WV/rPcnvOCz9pZX5l7f5T93Wk
fiD+sMxzk/xCrS/XaX4f+pgj9emoK9lz/G9LO7pVovM39/w9f76hY16TOpmM
z5H5j/tX7MPo6mX90XfmP3xUVF8f8meJn5D82RJ6zT/6dNr2RWh90cr5wdgH
Mu4i4jb25h8bND5mYv6bri8Psr7stb6uvv8KOEp9Qa0f3Ev/a9cPzRDxXBqH
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
DV0k7KgPMz7hz8OutJZ/72HGxzDeMbp4TpW3Xte9Fx4D7cMIV8+v4bdI/Sit
z4buYOg+HcR+Qb4deVS1+R21QM8O/5jW/8vjR37JVP/LIHkpU+0zu0fkr2V8
UPg7qseH68r6Rvy3ry9vTH5P8/w2/Kb459Q/E39n/shvPml7/JlI3Uy5Dtk/
8qPC73XlvzUeGpn/Fs/RZP/wnVjr/ulf3o5DfcDV6+Np/rnUJzNm4qV7Y3S4
ww+W8//P4//JM5f6u9zvPesHjQ+Kdcfw/7Z3fsuSE0ca1yWXXHDBBRcdBEE4
CIKwsdc2Zs2Wh8XexWYHG9ZgsLE4NgOemXOeoR5Fj6JH6UfZNZ1f7SpPVVf1
KZVSan3fzW/OVKskVZb+pjLz99Pf0X5l8nI/hOvvWFhfNyyPfGTfKBYun7t/
9Yr33o9eOVOqXb5UrbZ/qfXr+eMvXN4liPYhwdBP5v19bf99gtbzdi08JFg6
P8a7OJeaHzn7jglaj/tWeK269v2jbJWbX7Xzr3X/S60f8Qx4P9jNXf/kfen/
d8L3Vf+I+5O6N51+P4S4QWyffr7aqLa+/RS1BuXuj2vJ55e2rLVfTqO8P4L/
zF34/uihCtuJ7+mkjs9B5fcK7w0lfuvS+KcQ//V42k9YHtddXEeVfwb+RsT9
wZ+21PUJ+VGDn1PVZ+vlfR38SJ26f/C6/dG03VziNwh2VvGBuB8K8XELxS8W
S+V9vDR+s1qoT4g4z1eXWf9qxt9Im9n/G3ci6meq+nwHyVcUfvdn1S7+gWHm
/MqlCnlHkD/lh8uuf+vqb9zpH6jTqPM3iv171NH7atreWuH6bHR9rZaqu4fn
+LVsf/X71U/iLN0/6/tn0pZUnaztR/u3kbVdtkKKoi5X7vipPb7uLS/fXT+4
Pdf/zAr9y/s0vH/S79eyeiTLoU6M9t9RFHW1Cvm+E/m/a3WQ78k00f+Y4FL3
X8dnLs6V3D9ac0iwdHx7sTfolP3Nhe9T8J5W8lWXXt9D3DnyRBbGn6/m/iGj
sH+or1NYPw7t8O8h/6iOvwz+W3wfdOH4P1Rhecl32r2C/tT2IS4Q+Te1fw/1
8d4RvjRtNxfydqk8nffm78r8E9brp6g9a/bn64cK59dHwsLrAxSuKzgPXtvz
LeLicf6+tH5GpVCPZxR6VZ/HJ7iW+1dy39y7kJdds3R8rO1H+7eVtX2sSVHU
8qo9/nLLt27PqXh5+PdS8XM5yXNBqL934fMTRVF2OkpeInDA36Xnp7/GOdfx
n/PvIT5JE+1jgkvdv/XyO03r+86lqOt6aP9MdnxfixPt2u93b340UnH/mJfI
D/nITZdH/sPHQh1/lxHyToY4MF2fEN+lS/96/HMaVXyf/1Atj36xHTp/I/Kn
Ik9q4f1F8f5j/OA/U/5Rh7xsyGM60/vZ4uUlHiiMk65vvHHpuE/4ucP5F/Ub
5bpwr74Q4hoRX/quas8J+fMS+eVHbB+Ow0u/X6sU8j6G+MeF4oep82r9/EVR
VBfiKkN+chU/mxPiMTVnuz/9PM7S7bO+vyZtSdXJ2n60f1tZ28eaOXF+UdT8
qj1+cstv5fgM+TlRP2Du/Jx7l7xvDN+PLlQfkKL+qVGep1EHyqvna/j1Neea
n9b3V6QtUypdHvFBmq2vv63Pz7NtP64vPxHq+Cn4V/Edj/J/DDcn4r3bqPLb
If8l/GRdYf662cZP1aW6V58OeRES+RGQly2c/1R9JC/1mIL/7ZfT9g71++A/
VPFrKS01f4L/SvyumAdL3V9o/55X/r1aOclvi3mKPIy8f6K2oKPUc3Pw82r/
rlH9vaWOn4NcP7yMw6X+k2pJPFr3tvCNhdf/QJVuXy/5rcN3LEuPb0LW950k
uQSpOlnbj/ZvK2v7WDMnzi+KWl6546t1O7USvee+R/g+XMdHoG6Om/4d2uV9
YcgTo98fUlSF3FP3PXsh/p7r/mRIEO3+qzjD/E7Q+r6LvA7C/4K4oE7HB9VK
xcV1v5i3f+SzPch7Ovihwn7ieIafStXvcxIXhfem8PeE4xN+F4mPuhdfl1Dr
+xfr9VNtZT0/avsvlZfjb0zUf6OoppJ8vsFPWOgfXPv8XPvxH5bX35eo708G
ua734t9Endji/dP+ycL81hD8fwPWr+4vajVKvgSv8qhb3xeS5BKk6mRtP9q/
raztY82cOL8oannljq/admohyfNQqP+jv9/EcxPe3xbWjwntr077xd+0P1Ui
L+/3e6FT9ev8XZyl82t87qLE8rq+mX4+d1/HifbhNk7r+ypyHczNr6t/vpJ6
a93LQlVfLeQtRX7r96btncQ/DOLX84Xxczm1Hr9gf8n329/I+grzc6H9oOIG
x8L8hnr84IfR/pcB7fJdgvtE9S/teC9aun4o5AVFfkj9fVBGeC8c6vjp74PE
7zsiD+hK6kO1vj+2Xp7at5aaPw55kR94/qBsNcj9vI6Dv5bzl3viogzPDwla
35eS5BykzsvaPrS/razts3VSFDW/eHxRFNXhPKBYen44yPttTSyfa3d/mxJ5
ysL6P5tyVPUpxts40Y737pph/bdxhvb/jhPtPkHr+yZyGaYU2p/FWdp/yE+I
+m6q/mJ2/Q9sh5CPEHXDSvM35lS6/Cj+Hfjddf5d1LtHHF93af5tqRfXvSV8
XS2PuF0574wfX9h/Y3l539jBT6bOj4O09/Aj6vOXnHfHVH693Pp1/s+Z81e2
kvX2zXX8IH4F/l03c/66A757kePOM37vKjTX9SEnfE/QIT+6jq/W15e3VPtO
tfb9n2v7jpKf2Il/8KC+r8vpIPdT+G7woPxvD96uufav8v6yT9D6vnc23iVo
vV1kR+VlbR/a31bW9tk6qTaaa3zD+wHkaRDSfhRFUZXCe2fwwvw18Kf1Cf9a
SmgfnsZpfV9AkltgSuH4SrD4/gnxcciPrOLjUJcu1Ed957LtC3Fp4ufqFq5/
A78C1juq/KSjvM9D/s+Dih+A/wvfDfiZ83elVNy/rr93YX2qEfF5st/6+4NO
9n9MtI8yHk78gqX+47B+5I1Nvb9vpGBf+L1xHPxsun7kd+1k/3A8oP1wcyLi
A0vrMy81/3t8D4A4V/X+O/hX4Ud5PG3fqra+/VtXmF/yPUM4vmbO39xc8t2C
w3Gysu8z1qprGR/4/0IecPX8gvOrVyy9v/MJhvZMfhLUvdUM16/v4ixdvzVx
/6FZOr+st3/vpNoq+/x3F2doTzDc3ycYzi93cdL+88j6+LXmVrX17V9MufMT
6qYozja+mfzxKdG+FLUBIT+cYjh+fyR8e/r3Usf3UZ7HOvlO9aiez3Ia1XPp
qJ5Pk+uV9sNdnNbXfZIk2z9fefj9UGfvXdW/tPtH8vfM728HVV/vXv4u8c+E
Onq/nrb7D6f/fy8/o4or1Pmn4f8bUZ/nS7V8pULcwI30V5ifs1ZruT9FXUgv
/r1O+c+oK9fP3Yk4/uQ+i/an1iE3ZeHzP7VvYX4MCdbOn7mW98/jDPeZxvFx
w12c1vfdJFlCqk7W9iNtSZ3XKOOkifFD/V/N2cYX3xcrhv6/m/Ko4kNy9WlS
Qju+z9UMyz/Qf5dT6fLXOr9L7WMu1IVTXM32ZYT8WZph/v89zrXv3162r/r6
l/n+4fg8wYWuz3w+I8l2zGm8kd8jv+JXly2f7f8L6QfxTY+n/Qe/DeI3Hs27
/hAfKHFW/otp/w5111Dn7dL8kagvB/+e6r9WR+RHhH0+m7f/WsGvivkzqu2D
XxJxjffi/1L9Yn4gLhB2utA+rVS6/TkdMH+wnyp+lKKo5cXjj9qDHPKPKmL+
67oEuj54fxtn6fOdT3Cu+9uUrO/LSZJKy9ou5DZIbVvW86d6fv3URVm8POqC
Ky41/7Xf0830fmWu7eslbgl0iGNayfxoPr/kflrTerut50dY/uU4c/23bocG
+Z3mXOOfe37zn8dZunz1/PhDnGgfbuO0ntckuQQfqrmWd+KX8eJfGSVPX+j/
JeGLQv19Vkaoi9kl/Fchfgt53FR+qZxQz65D/TwVv1crJ9/L+BvhQvk555LH
eRf5L3V+C/k71LEqzL8a+hd/3oj7yP+cLg//Mvyvpf7L/2tX3Fj8zIC4U9n/
e8fXRlVuP4ranjh/KcpO4f5B7g9xn9jN/H1Mrv56Lv7BJ4j2w22cpf3XPj/U
Pp/k4ivI86TisrYLuQ3uXdbn/9b9kyRJkiRJXhsR36MZfpeJv00p1w55yTc5
SvzdWFhfqLh/8Ych7utefBbye8K/tJH6THNt3yh5K1DfbyzMz6nnD+Lr9Pcb
vbS7r+PtqHeHce9+XLb+sP3wW6XqU+G7G+UnDuuX7cF7O39h/b5Wsl4/NKJu
Jcb3oxPXsn0URd0Xj0+KomrlxB+oifOL+yTO4ueP53GW3n+S50nFZW0Xch2k
zqt2/FqPv/X8IUmSJEmSXBvd0zjD7zL1T1KqbS8W6pbCj6P8N6Py783tP6yW
xAuG+oLvuUXXD/8n8puW5k8I8yMTH9laWD/sPPf39cn1zjR/kE801HH8jbto
eSut5vihKCopnRej0/kx5PsOfOfRF9bX5vFNUVROXp4XNHH+GBIMzyeZ+t7k
ee5eeK5StLYLuQ5S57X18beeXyRJkiRJkkszlx+olX8v6E353Q+Er5f1Xyr4
8/yHwkeqf8RvSR5JX5ifc67ts9YocXWjxFH6C+vX4Xvt7rHwwvykqK/nJQ5P
188bVX7JLtGO/Juj8u/5THtf2J7aPof5hfqOv5q254S8osiL79X7B2sdMD4S
x3cvv6f4o7ufCd9S7TuX/3d3+gfGSY8P4kY/mv6O40ctoer7COUfHK7MPziK
PxQclH+U2rgkH7gm7bsN5eovjgkWn98yzz9rJ3Ve1vYhbUmd19rH33r+kCRJ
kiRJro39szjD79Rzra7PkRLaUf/Oix8Jfhq04/03/G7I15jrv7Ws17+UjmKX
TvJyjoX+vWy/hfOjtX8vp171r/2bul1vn1dxj91G4u+omST1GANFxfYXfx++
a9D1m1Gvsvs3N/k95xf1T3nME8XS+ZG9P6isf9V/F2fr68tS6uV7qD6Rv7CW
2r846vuzrxPE8r+Pcy3jh+u3/2bKucav+yLOtex/SqXbNyi7D8r+2f6fxBmu
P1/GWdz/SlW7/dbPbcXznzora/uQ6+betfbxtZ4fJEmSJEmSW2NKuXZqG/Iq
L2j38xOL7fuK/C5R3+5e/bsXpu3HSv/dIO2oE+dnzs85Iv+o9O8Wyv+ZU+36
rbe/Vtbbb71+iqrRXOcPa6K+a5+oH7xWhetXgqH9WZxh/27jRDuuh5ql46PX
6xeOXxxxH6CI9R/u4iydPz7B0vHP1aerjS9DPTqnGPbjNkFsX4LWx+1cRH4G
3Afi78WOf7GHZql9+gTD9lf2T2Wk8lbr/NW54zsX35n7PiOXPyc3P/zzOEu3
jzzPvct6/LduH+v9t7YPSZIkSZLrY0qt26lllMsP6f4k/488nL+dtnvJT9k9
MD9lrX/Pi//N/WW6nWH7v5wuh/20np+LrV/HlwlD/7l28dfCL/u/IzptR17d
V4UvqfZfCH88/X3t/m3m/PRfp3685K3FePD8R1kK80/Hn/WF74et70sCnyTI
46tMEm+uifE79HGG6++HcZbab5T30YNisN/ncba+fuxF5sev0fMLdZK1fWj/
dcvafta8dlmPL1nHnKy3jyRJkiTJ9XG8izO0/+PETvJuHb6dtlNUS6FeIvK7
Xhx/+ECF/jPxid2PhD+Y/i60w+/1ZqJd+890/28IX5tuT2h/M9OeUPH43cjv
JO8Z8u0udvy/LevBfr668PpbC37BR0Kpcxj2T97Hhzhc1o+iLpD1/UVrUnWq
HX9816BZah/av62sj08e/7aytg/tv25Z28+a1y7r8d26faz3nyRJkiRJ8lKm
hPYD8pqIn+8wU32dvcjduNM/JP6s0/Fn0j4iDk3VzzmgHfVlMu3jx/H2DvVV
Eu1YvrY9tf5U+0NVOn/9Y/mdxB2gztls81fq4XiJO/AfTfs/9tN2xHuF7UPd
SsRRqnbEO4Y4sQvjJ1sJ64c9ETep4zsd4kLldzp+tJO4S4d+Cv2Hc+2/+4Ns
l8Stws8W+sd7a6kb2v10me1bav+3Ko5PmazvL2qp477uxX9RZ1V9f3gXZ+n4
W92/7l3Wx6318wt1krV9aP91y9p+1rx2WY8vSZIkSZIkOS9zyuXvTy5X2D8V
F8evTmH8fihEfNfBTdo9/KJ/lL9VfjH/gbQ/Ehb6byiR5FX14p/sHp8Yxg/+
T/Eva//0iLysWH4m/29Oxf2L/69L+P8c6gIl6je6xvUjqbg4vidZ339Y39/s
Xdb2of1tZW0f2t9W1vah/dcta/txfrSV9fiTJEmSJEmS83L4Ok60UxlJvrzu
J0LxJ4XxE39QyMP4lmqXuKtk/TrxL4X4IJ2fLyMP/wPiny7Mj/VQlfbvJH4N
8Yujil+0kvX6FxPmLfKIvn5ibv9Du67fp9tzy/9SKHlV7x0fG1d/474n4m9x
PGL/vLRj/js9/3Hcvyt8W7VTTVQ8fxu1LyXr+4/WpM7L2j60v62s7UP728ra
PrT/umVtP2teu6zHlzzPnKy3jyRJkiTJ9dFLPs1BEe0p5dqpbWiEf61V/BDq
oyGOrtB/tHdxfKg5hHy+IQ+tfEcQ5tefTxyRH7bw+Of8PK+tjJ/1/UdrUudl
bR/a31bW9qH9bWVtH9rfVtb2WTuvXdbje+32ab1/1uNPkiRJkuT26KS+l1dE
+5gg2lPKtVPLyMn7fdR30/X9rHX4m/ueIc5P/BBh+yS/4UHiTrs/qfaESvfv
eCO/Q528z6b9O+SPRP1A5leklhTi+hD/KHHCmH8ecYGJ+Yn8tJjXo4ovbC2P
uozid1xL/ci9yPr+ojWp87K2D+1vK2v70P62srYP7W8ra/usndcu6/Hdu/1a
b7+7dVGW9j9IPR7NubZvkH405+rfev6RJEmS5B5JUXsW6tKN4jdfm3+VWrn+
1Z34jlDyrWL+hLg9+NE+mLZbyXr91Em9PK9rwj5DgovZT7ZHM8zvBHn/USbr
+z/eX25bzc8P6EeR9p1H1scnj/+2wnebmtZ2uRamFO6fKuufWO8fuW1S52Vt
H5IkSZJsQYpqKSfPM4gj8ir+7ijxeZ38DvGEaD98I7w5cfxLvL0zah8lfnBU
+1l6fGF8nCx3Lz6Roh6gvc+f3P6j3d3FOdf48fq+brUeP2v7k3Ws1da3/9pl
bR+SrGFO1tt37Qz1JxRz9rHebnIfpM7L2j4kSZIkeY3MyX17+t1BOD4pW760
/73rkPEv5do7FXfmP5q2e+TNlPp++vtRL/4zfyO/++u0fVDt41fLtqM+WZeo
Txbio34rf/9aLZ9RL+MzJvyfFLVpveamfPXE4vkt+WSG5yf659PlfR8n2vvb
OK2ve0txSJDnlzJZ248ka0idl7V9SJJc7/kxtzzy3WvO1T9J1pA6L2v7kCRJ
kmQLUvvWIPFn8MONKn4u1476jJ3U7dL+PeQjceI3G5V/D/618Ub66ePtZv69
96Xdyd/vqvaEatspag2yvj49tP5D6fFlvX+8vtvK2j4k2ZLUeVnbhyTJ9Z4f
c8sjr4xmrn/r/Savg1SdrO1HkiRJktfIWrXu/6GyXn+pnOTH7MWv1n15IrZ/
UPF39+LLUPfrX4QqP4n27+n4PfjXhhtpvzB+76iW1/F/ncR7wn+o+x/V8l4v
L99jOolP7JT/MqWt2J+6blmf30lbUnWyth9J1pA6L2v7kCS5XebUy/OnpvV2
k9dBqk7W9iNJkiTJFqTiyo3P1YzfC27K7sS59u94c+rnkPIfVsbXHfC8JO3a
v+ekvRM/pvbfjZn4QZ0/c5w7f+bHsl2S37P7zcz9U6tU6fl5TDDMjxfjtL6u
kOsgdV7W9iHJlqTOy9o+JElulzkNz1yU1ttNXgepOlnbjyRJkiRbkIqrdvy2
Mr4Hyb/Z3QhV/s1cfb1eloPfzH0xbT9K/0flJ0N7rX/PKf+ejs/D95KHhH/v
qPx7ut2J/637nbTT/0b9P9Wef/vncaIdx6em9XUjbN+TOK23izyxu4uT56+T
rO1Dki1JnZe1fUiSXC+r9Z6L0nq/yOsgVSdr+5EkSZIkeTkfKuv1r0Ve8mmO
qs4e9i/kxZS4N6/8e1YqXj/8JuJ/9Lq+4I38v/j9xpn2L7e89fjtRQPmsWLp
+GfPA3cJVtp/qfOnT3At20ee50PttxdZ24ckW5I6L2v7kCS5Xm5d1uNnzcPz
OK/FvtR5+T+6KPdif+vjz5ruH3HS/iRJXjv3LuvxX7v9/H+c1uM/EP7qsvUj
vi7E36n4vVYq7V/nD9X+O53f89L6gFQb5ca32P4rOY5JG1679r7/e9fwrYvS
+rhbCynqqnXrorQ+7tbCa9co/gxN63FfC/cu6/GnfW1lbR/a31bW9qH9bWVt
H5Ikr5fWst7/VuO3lvG1Uun4HMVv10n8nlPxe8jfGeIUF/bv9ahbKH7R7rNp
/6P8HfKofjzv+lsrN7+d8KBYbF9y33ya4EaOj9aqvT6b27dy+6nzsrYf7d9W
PP73LWv70P62sraPNXO69vllPf7W9t27rO1D+9vK2j60v62s7UOSJLlX+s/j
LF0+Jy/5NsGt+Ye6F92UL5yY2360oy6fgx/ty+nyXvnv/FeXtT9UoX/EFcK/
p+zvJN9E96n8vRL7lc7P8bsTB8Ww/5/GWbp/1scvaUv3PE7r42MrsrZfLak6
WduP9reVtf1o/zaytgvtbytru1wLty7r8aN9bGVtH9rfVtb2of3bapBx0LS2
C0mS5N7ZvRFn8fK1knzVoM7vZaXa9eeWR3sv/rv+5kSv84sehK8IX1btxjoi
L9uTKZeav0OCS42P9fFL2nK4jXMtx+faZW2/6usndVbW9qH91y1r+9H+bWVt
H9rfRtZ22QqvXdbjS/vZyto+tL+trO1D+9vK2j4kSZLkNmml2vVbb3+trO1O
kmvgcBfn1o/vpWRtv61ef7Yia/vQ/uuWtf1o/7aytg/tbytr+6yd1y7r8aX9
bGVtH9rfVtb2of1tZW0fkiRJ0obD0zhLl89J/368cPnmUnF53Usnrmb7MrKe
PyRpySHBrRy/rWVtn9akzsvaPrT/umVtP9q/raztQ/vbyNoua+HeZT3+tK+t
rO1D+9vK2j60v62s7UOSJEnacPw0zsW2Q/JJHhTRvnUdpB6YZhj/BMP+f3Ki
V7SeNyS5Bg7P4ryW80etrO3TmlSdrO1H+7eVtX1of1tZ24f2t5G1XdbCvct6
/K3sS/ufZG0fHt+2srYPj/+2OiJfkeZK7EOSJEnukynl2ktlvX+tx4ck98zu
Ns65zh9bl7V9rM6P1EnW9qH9bWRtF9p/HbK2D+1vI2u7bIUURVFrE89PFEVR
FEVRFEVR1ET0f1LU7oTju38aJ49/iqKoB+t/AEWfi1o=
    "], {{0, 164}, {223, 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{303., Automatic},
  ImageSizeRaw->{223, 164},
  PlotRange->{{0, 223}, {0, 164}}]], "Output",
 CellChangeTimes->{
  3.6818203737027764`*^9, 3.6818204685511665`*^9, 3.6818205611197305`*^9, {
   3.681821211230321*^9, 3.681821219240321*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzMvQfUHXXxx33TQzqkF5JNQgiQAoQkhL50AkjvoKz0onTpwlJUINJBEClL
EQUUBKUqsIAISAuKoNQFItJD78j7njvzGTPDfW7uk8D/ffec59zz3LL7q1O+
8535jd5l/y1271ir1a74f/+er7krO2zS22vM+/8BI+T/c3q492s3LVX/P9+r
u/9+Lu/X9uoin/9taf+7yzrI/9/u6X83fFz9/2xC1/prtaNvR3Lp2Pr/5XaL
yH3nLCH//17unwzuWH9N35B2VmuMl/tNk9d8A/m8vMf3I3tH2lst21/u85D0
p7xtovteevhk+fwTeU1f6iX3vX+0vI6R5xRb1+R+13fVdvWR96+T71UzlpT3
3xkp9z9IxqmYLPdLOyzrnlttJP0rN1pMXqd2k99v21v6t7Yfp7TXWG3HovLa
yd/Pvrenfz9/TuY5fVzGqegir8m60o/ivDBuKw2S78+Q3yVPSv+TrcbI9++S
8atul35VvTrJ7wfL/fIhMo9pv17uvsWPBsrnH8n4JBct5T4va/Kc9LNRMh7L
67p4WJ83U+YnK7U/XWWcqpf6NByH5IGN59Y/31THcZUV/Lj8bJKuB7lv/pq8
FvvK+JUvy2u6rq6Pn0v7ap9L+6pfDpbfPdfHtSe5X9u3hfyu/OtE1x/rn/bX
2qvjkX+h4/OTgX7+dTwZX8ab8S//JJ8npTwv33KMm790RWkX82vzovNv60HX
B+ulenaEb8eejdcd65H1yXrlYj2zvlnvrH/2gz1H9wv7h/3E/mK/sf/Yj+xP
9iv7l/3M/rb9rvufC/mAvEB+IE/seypvkD/II+QT8gr5hTwz+abyDvnHhXxE
XiI/7UK+Im/1Mnms8tnkNZ8jz2/y7yP/TR8wX6ovsieH+u/vpOvwumF+HX3e
U8cjyK3Zcv9ipSX89yfJ9/I/+XlPtpR+l894OV372P++7CfPSy6R/hSLTGjY
/uS7sg5qHVV+T9L/t5PXMtfXJeQ13VhfD9LvDdXX1eW10PslPfV3er9kU/3d
/vr+cH3eyvr77fV73eU1G6f3W1Nfd9Lf9dHvLa3rdy19fwe9X1/9/ni9j7Yr
3Upfe+nno/W50/X/mXq/znq/wfr9ZfS+q+j72v+yh95f+5FM0P+1P9UG+rqI
3meI/q/9qqbo89bQ33fS//v6+xZL6v/L6//ajlTnK9P+JIP0/1H6+VLazuX0
dYaf55q2v1hUP9f2Ffxen5tP1Ptqe2vcR8epWMTPS9lff0d/R2j7dLwT7X+p
7Uv1/sWy+qrPKWr6quOSdtXf6fqo6fpKeuv/Om5lP/3+YtruJ4+c4/aJXuV3
9HfHP/eW2xfrHyV6cbBfB7m+Jvyv410M1O8N0P/7++fTHtpn7e3p+0P/6K/1
f4ofH8aL8WM8GV/Gm/FnPpgf5ov5Yz6ZX+ab+Wc92PpY1K8f1hPri/XG+mM9
2vrs5dcv69nWN+t9uN8Ptj/W8PuH/WT7axG//9iPtj+H+/3LfmZ/s99t3lnn
M4O80PFGniBfkDfIH+QR8gl5hfyyeVH5hrxD/iEPkY/IS+Qn8hT5avJW1xfy
GPmMvEZ+I8+R78h75L/pA50v0xdTtZ1d9D576ucr+vervbUdjFsHfc5e+n3m
8Rc6Prvq/XR8inP1VftfIBdP0ftsqL9Hbxyp99Hn5Vdre+Ol/Ukn6++3Qx7o
fXQdppvocw7R7zHuOk/p7toPneca+3VL/Vz3cU3XS57q/VT+ZDr/la7PhHWr
41DTfZPrvqppf7Nd9Puse5UP5Xr6quspQz7puk7ZP1vofVl/yGed12pdfV5n
fx/TX9P0c/0e8ivR7+Vj9X/d1yl6mHUU9FyCvtbxS1bT76OPGSftbz5G39dx
y2n3qtqubvp75AfyfKTvR6nyLllBn7+S/p7+6P6uVO5lep9iRJADS/pxrnRd
ldqfUtd9ofsiUTmV6/1L5AR6i/HGDhmm39fnZtqPJNHfMX83Hjh33vWefjzV
6b/0b999pf7/GWIHl5P9/siR2+gXfUWe2TxhH+g4Zio/krGhPYlvbzbC94f+
2TpdzI8H48N4MX6MJ+Nr4806R3+N9vPF/DGfzC/zzfyzHlgftl4Yd+aFfd/N
rz/Wo63PMX79sp5Z36x3W/+MM/ujr98/7Cf2l+23gX4/sj/Zr/SD8WZ/s9/Z
/4wb8gF5gfxgnG3esM9V/iCPkE/IK+SXyTPsApV3yD/kIfIReYn8RJ6m2Ekq
b5G/Nl4qn5HXyG/kOfKd9Yz8Rx+gH8zOyfz6MPmozyl1/HL9fr6HX6fpz/X+
2l/srepcP44V9typ+rzN9fe6PyrV06mOR3K93m8//Xxpv6/xX9Hn9C/X/qa6
3gq1I7JD9fe63ou19f+9fDsKXVf5tvqq44FcSHVdldrfSu3RQtdtTce/Yh6R
D2pHVJvp77GP1Z4s9POc+dP9Vy7u56daX7+HXc3+Z/3qvqtpv2vsy1F+HZe6
7jOVO5Xa9ZV+r6brxPwz+qP2fqbyDvs2xd7W5ycq12p634Lv43fr/TPtt8k/
/FDGVdd3Ntb3k31hfiD+FPJVf5+ofVjpvKf6/FzXU8Z+QD7ih+r4F/g1+OHc
F3t6mJ+nIvHtrWH/q97Jl/H7xJ6/nJ8PrvR+wauqX3d4Yd7345V2C7/DD8Pe
1tccuY49oK8pehz52TG0ZznfXtpPf+if9XesHw/Gh/Fi/BhPG9+eYf3j368Q
nr+0n0/ml/lm/sugD229oGeXCe1lvfF7/KoOfr2yflnPrG/WO+uf/cD+MH+Q
/dA77K9V/P5jP7I/mQ/2L/uZ/c1+Z/8jD+gn8gL5gTwx+2BxP/7II+ST+c86
nsgz5BvyrsJP4PcqH5GXyE/kKfLV5K3KX+Qx8hl5bfIbO0zlO/Ie+Z8H/Ye+
SJjPnfUVfx27dhf/fnWO3lffxy+tztbXb+srdtVp2j7FpTPk0In6v457xb7V
9mNnJb/Udqh/mj+jODzxu+Df0d+azkdymL6Cf2E3qf8KvpPqfsjVn0dO4K+m
4ASMO/6K+qOp2im5rgfswhQ9pPOY6TrPsbPBFYiz6boFJwAXYD4rlQs15Cv6
EL8O+cX6xt5X+xf8xHBc9p/2s0L/ot/Bg/BHdZ/XdD2UaheXul5T9j3+PHjv
sr4d2Fc546H2Yg1cCZxF93863f8u6+n3A/Y3+z9l/JBrKrcL9iN2tN4HPCcD
78OeB3fT8a5p/zPsKuQJeIreH72BX2PrCb0OvoSc0nHLF7X71K/072ndzysO
TBvinV+5Lh4z180X+gW/Bn+Z8dZX/Iua9r9aLLSnn2+vtb+H7x/9pf+MB+PD
eDF+jCfjy3gz/swH88N8MX/MJ/PLfDP/Zu+xPvDDuQ/rdrpfb6w/1iPrk/XK
71jPhnOD74En9fP7g/3C/rH9xHrr4fcf+5H9yX5l/9p+Xins98FeHiAfkBfI
D+SJyReVNyZ/wJGIK6q8Qn4hz5BvyDvkH/LQ5CN4ofbX/A6Vr8hbs9NUHiOf
kdfIb+Q58h15j/w3faD6AX2B3VZTvDFRvVVgb6jeqtQ/TXT9pmfo+/hzyAH1
58pt9Pv4Vz/W/8GjdR1XimcWuh6Sq32/wGXK87w84ALPxb9l/ug/9klN/fZk
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
Xnjj9Wb3r069o+Hn+R37vyrtm9WS/i3XOUL03QE/cHovP/fd+u+TewbW25cH
fJD5YH5svmp+PsvgF9o5E4H3yXph/di5tKyvEN+LfM+SeWV/gOuwH9iPMe8v
5L3b/ol1fEb5+7Mfrd4E8Qny/NjP2KngDkv5+5l8YB2jR5AnQf8hf5BHxi+n
f+g3/Dv2JfIOOYwcpb/UJ0N+0n7iWyv639m+C3Wt7bxH+JXgkthHm/p+WL1D
znOHJ4lfqvqSvHPGvSTfYXnfHupw1jgvkHnGT4Ufo3yV2hp+fZEvyDxQ39Pq
bWNnwQ/YWfy97J2l/PomT5P4IfoCuwS8k32Av8Q5ScTx8eOoQ4q/i18IX0rr
C9j5CKwv8j6InyPnweHh84I/YLeBZ/Dc4N8ZzwZ7CdwEf2mUbx9+CXw7xtFw
aPQY6xh7FH+TeHhn/z3WA/gP52bn7Fv0Yqgflgb8EjwqD+fBWv1AcEZwnXCu
AnIMfqDJqcDvA98qgn/HfNt92jg/ATzM8Fj2L/oYuwE5h51HO3e/pKFeSJZ9
rX1+U7iyuVMaxuXs8zf/4+6fnNFB4nwHdanryfK8250+y55/UfRltxfkdfyz
7vd5r7Pr/UjfWrPpc5MXjnV6LTttP///Ld95yd13h9mi97bbaY5rb18/H5xH
ZPor8F1qHfx82zqN/JmgB1lPFXoUf474IHwV4kisV9Yv9h52LfnzxBNZV+AH
yJdwDrztL/KtyHcLdc9sv6L/2c/4ZeAhtJP4DPoU+c86x78I/h/yB3lk8on4
Zzg3yc7pDPXN7BxQ5BPyelXfPuQr8hb5izxmvg3fpF4o+x9/EhwT+U9eGfqJ
daD6KaVuB+uM+pToV+I4+EvYCcpLsXMqsGt20+/Dj8Hupv4zdZE5j13jg9Rv
y+F1cn5GqGuYL9dfPifOpPo0Zx/Ai+KcW3B7/Fj8dc0TMbybfFDikqwj+MbU
kQHnYh1z/gT+C/KV+BvxU/YtegD8mM97+PZkwb+zuAL6AH3L+kGfwgMj74X7
oI9DvZWUPAL2EbhowDGpEwvvGtza8L7AS+G8L/QDcQvLUw/n5pldGuJzxF+M
/xr1HP0lHveP3hIvOk7yCMp/9pd40nt966/plE7S/uC/cRXXdJJ4Vjf/fnqN
/v+9dV28Kz/4spb8uvywaU6fpPcOaupvtXmfrGtT/dPWVTz+4ELp23zWZw3x
0eTEn9T1W7nhuvXX9MJVnb5Lnp9a/794eru63ivfe9rpv3SlcfX+JIP/Wr9/
uvJd4q9e1E3qqE0fNXfe+bJzykJ8j/Wdd/Drwfjb3bu+3aj9VY/j3PzhZ3LZ
+uztn29xcOJO+C+h/ovhOthD8JgDDmr7jecTjwv1Xti/9Jf9zX43/hV8VOQ4
+ifovyrgn8gfi8Pj75Anj38HLw35RT4xfirykPrByEvsY86tQ6/iD1E3bLJv
D/Ia+W3ynHxQzg2Ch44dCo452n+f89rtXE7qOMN3pL2Khyaqr61+G3Uw8X/R
n+pXkldSaD678W+oV6XxQctDII90G9/eNBceZ/JQd2k38dZQR8z8KsYJngX5
mxrnTJkfcEHirOwv8gKIw6H/Wa/UA9PxsPMRwBvxz9Aj4Vx08mmMHwUvA55y
wDPToO+o327xM3A84sDYcew35Hs49xz7yfyfwGdJsEfAeZAzjBN+5UD/ffyf
spv/vuV9oKfwH0NdTcOZsD9D3THjHYX4XvZH0Ws14oZ6FXePEX14vci/LPhv
Rc+O7vtc+ay335j3/eyC08SPG7RWXV7nU2c6PZT+bkxdn5WLiP+U7PuZ0zfF
Pb92+q6c+ZHcb8DHCxS3a+9V7f628Fs+fFP0TL+5wnO5/WOv1+4Y1VS/FgMP
E/2WHFp/zbquLP+v0Mn5b9n6F9T1XHbsuk4fFput7/XjC7+T5x/8hmtH9nhP
Z2fY+sQvD3zTNMT3bH3cpPN9r6yP5KMv3X2LN4a6+9b+1sWvz/5+/dp67ubX
O+uf/WB5jj19+/Ka/77xx+DdgLejj+CPss/AI+gn+xg9GfgtVdB/yBM7HxD8
E/mDX4pfFc5xt/ovxAeW9fdHHiIfkZdmH2A3I1/Bb/GviceR34V/vJ6X5+YH
IO/BWfFPwSWnh/epw8K5AMhFeCHcB7xI+Z7oY+K0mT4Xfq3lnaO/sSM0jpcE
fVLpfcl74Tz3DHxUr/I2Ob+lUP8TXL8C76QOOPECeJPocfYJ9gn5mMhz+MPh
3B87dwYeCHksyH/WJfXP8TPRR/C4GDfWNXoZvi/8TPwi4gjBv7N4elvnoKM/
2B/sl3AOTxridvDGrN4KcYWQp2D1bAIP2eLswa+zOvsBv8QO5v7gLLUQn7Pz
laOewx/Evg18Ta5q0Q7i7137Qf088/STXzX007JVVmqqf9JHFvF66/Jujf22
1b8n+u7Ow7yft9rBcv8tO7fkf6UbeP2Q73VfU37IfO+X3yn6bnLZ0H8r7u8l
/M/bD2z8nDVGNuaTfvp+Xb9Vl3zm8cyJv3ip4Th/Z6X6/fO7fyF+4jG3iz6+
+OaG98+WuljyIifWRF+F+mbMt81/d78+uMqj+8p59jfrut2zs1tvrD/WYx7w
UNZvEfzAeM5Dxv4inhHyHLg/+4v9ZudAEDfuHp4PX4N9hB2AnxjyG5Kg/8qA
f5aB/2L8z9G+v2a/Epca7fuFvDP5h7+EfUCeOfIYfgByAL1K3hLymHoj4FH4
AamX73ZOLnnyoZ4n+oI8QHhJ1EuxeBnjjX6BD888cX/4Mcq/hAdj9T2pB0q+
PjwR+Cfgkpr/kIR8ATv/L1ysR/NfqT+G3MUvYtx4LvKc/BVwNew68r5V35p9
h56kDie4IvGzZayd8j1+B7+K9UD7kOP45RP9fWuBr5IFPLMW9J3VrQZ/Ic6P
H8k5rdQjAS8ing/+ih/YyX/P4lzMK/Fu8uLgUcIPY9+GOmLg1lngbVrdjBDn
K9kXIS/B8snAYwKfJV2nqsu38tkL6nK03H/S8/Ouo3LWpnV9lS96lNN/6aLT
635OtdqZnm9y+XTn/2Q3/aCpfiyuHCL+3nHvuO8VH3dtCd9MtzhD8MHvntec
BzntN6I3Jl/jvldNuqYl/Zjetkn9e8nOd4ke+uNZ8jpk/3/LPtlaPj9R/Lvy
/t7Onyvzq0Sv9Sjqr/m3bq2/FuMubOn52Qk7Nfxe8eMdGo5veuVbYrdMVBz7
TMWvA7+F9VC83bmh/IiXye++fj1aHciufv1aHnL/sN57+v1g+yPgoFYvEn0J
TkvcnPpB/fz32L/sZ+M1I9+JNwf9Z+e/Yw8gT/DP0H/EJckTxw9jH6NfkWfk
8+PfoZ/Jdxvq72u8T/QY4wZPkLz7UB8QeW1+CfKcOiD0A7sj1DNDX3D+n50j
AC5OvIx6U8o/KTgvgvnTemOW34G8aaOOJ3wXeLalnvdg57nj3yovlLyKeKWH
az4D9TvgR8LjAQ+mXjZ6G9yO/HPO5wOHII4HDxa7gvYSp8X+ww7CHmAcqPdA
nQbmn3gVdiL6kDrr2DesT/IRqJvQzf8+Cf6drXfi+bHOGLxs9Fg4P8jyD+C9
hXor4CtW/xK9iP5Bb4F7RnsOXCPUD8tDnI74uOnHLv53tCuPei7wTRb0SjsI
zpaM71bXc+WmidN3yUmHCB/je1u2C5fMP39K/Kh7u8h9B9zWOJ/gw07yva37
uc/zfK05zZ5X5peIvuqwdsPv5c8JHpmeNaX+ebrPI84Pq4bJ58k04V1WH28j
/9+3v9NL6TYfyO8u/4P7ffHdF+v/J4/dLnG83n0btiOdO7Ph+9mrYxr6hXb/
2bd4/PPLPzXmDXXw66G2m+Y9fbmIxAt/3svhm8kRQ9x6Y/2xHm199vTrkPWc
1/x6N9y8l98f7Bc7f5D91Neva9t/4Twj4yXDW6a9xNvRE0H/IR8s/kH+DvIE
/if6C/0fzs+1+mfE04ljwBvBv8PeoM4J+YXgquif5YJ8pf+cy0AeGfbMWkF+
g4Phx1HHCvmPPuB89XD+A/iqndegeGMKDxRcVfPWqQcOnybW8UyVl5JQFxq+
i9ZJ43wImz/Vk9R3qR3i7/OVdf2J6L004JpW/4i6nxq3tDq08EhW8c+3up7w
WPGXWJ/4xeQLMh7kZawQ+sPvWE/sQ/I94CmBV2KfcF/yW8L5wbafiF+P9b9P
gr5jPeXgD4GXaXXkwT3RS9iryA38NOJ84Ivh/FezJ7FTQz5eEfw6O28Tv7WN
OtJWH6mX76f9Hr5nqKdp62XrjZv6Hfldz9flZ9bzI/ELt32koT4qN7tLeI0X
H15/rc4/VP7f6ol2nR9bDfiptOfOZ+q/q27q5P3IfR6W9899t/5a/H5F0T+b
XSx66yTBBcvdpst91tlwjuzHLUWfTJH3054TRL/tvkz9tThnJadvis1vVz1z
h/hpu/zd6Z3szX+IHut/Z1N9lC6xdNPxLc/o3pLfV9y5hPiJM8ZJPPDHt/rf
XfmM4KDjVpfxf2EXGf9VV26cVw/fHXu+8yS3LvJtBrr1xXpj/bEezQ4N9Txt
XQa/ztZ/qGfNfjG/Y5j/vu23cJ5DFc59sHO1sP/gdQT9Z3gP+FLgvyBPkC+W
1w1fJPCfrf4n8gt7GDuTOFyoa4Z8NP+O9lNHmbot4GbwITjPbpS/H/Lb5Dnz
wXkNyF3wKepQqr4wvrnyPXP6hfzW9xPyqNHva/v25KrPOD/Q8unUH+S8hxp5
Vpv6cUg1DoifafFQ6qaFK32pl/wePxH7iDxs5QlhNzGPjCN2EvkjKXqcfAf8
efS43g882Oo+wwMmjob9RnyTfH38P+qdkE+O/wfPA7ySPD7ui75Enwa+iuH7
wb9jP1idE9Yb/eZ77Iue/nvxfB2+Z3U3wWnIf4JXBI8qnIeXBr/O4qXoq1BP
mnxwq/sE/hnyyy2uH+qyfF1XsVyPBcrzjle+9vmiv0YdLq+XnOH8lfKWoaJ3
H3y+JT2anS68ybyYKHrt+RXmyLis8u95/y8eEv+sOqkmevDTRRv7g9P/6/Xb
bYc31XfxqvbZ0+Oft/eT9t30reZ6b9DMdsUr01X7NfWz81NffavR5+UffZ1w
23e9/Xpj/Rme18mvV1u/4bw/1jvrn/3A/jD+cRvn+xl/JpxnZN8DHxriv5cE
/Wf4DvkVgf9i8oP8B+wDnoO8xz/kc/Ad4nPYwdix6DfqkYCHcV/kJf1AbsGT
J1+QuifgcfARkVvwJsBLictgL6/k9YHhc6ovqD8Nvpmq3rJz0jTvgHqd1PdM
9DwI8hdNHqn/WIHPMk7kPzAfek4D+Kblq3IuEP7aoY3lV37/aHk++Q/oG/hE
yhfFDzacGn0NfjHe95v1n5J/zrjCt8A+45ws7Bz8ldG+HZZfQt1y7JOa77fV
JQOvBOcHr2DciS8yroGvYnh/8O9sn1KHFTwjnKtg+Rf4gYG/mQQ+pvGqiY9i
J4dz8bIQr0uCX4e8qAX80uKJ2MHYtZ1Du8L5CIZHLeCVPrKK6IuTvtcUV1zY
K99D+C3lmfcKbvqnl1rTr1du6PPdrhgs//96qui9lab9e97/k51fEv/pmsfk
tfdrjfXZYUtIv+96UPy8WxP3nPSY9Rrjlm+v2xi3/O9Govd6HdFanG+bA5y+
L57ZuvHvRo5trPe6zha7YdF3hP/ynPA2q6nCg0lOD3G+jn592Xme4fy/NPiB
hrst5tdZ0u2txvksJ+wwd979wrlISeB3VsiFUE/d9id+EHI06D9rL/Zg4L+Y
n4P8IM8KuYC8wR4nPgjvHnkTz4sHPwTPWdbLQzt/GHlJ3hx+J/sfvwS+BvKY
+Br8FXBazlEIuCfy39qBfKSe5vJeflHfuga/njoqytM0fxT/FX3G+Kg+w9+0
uvsaH4RHanWO0ZPUMdHz1u082DaufMx4fx9+v4ZfT8Zros43fiw8EvL2wSnw
t8gbYf0wPtRDhQ8Lr5H6luCh+B3MA3FV8hLaqLNZgqv08p/D77X4A/sy8DMt
Phvqr9SCvqN9VleLPHH8NeLmIV8hD3E78A3ib1nAMa2+InH/cE5QHvw642MF
fIr4Nb8r4NmFetLgHTXi6rdf4uR7cv1DLzRbV/Eqd/5xc/zuvxuLnvh8o+b6
8beftOY37TNE5PY2VwuOufuhDZ+fn/Vy03YVh42Xz5dQvZXMEfzwbY27dXtH
9NpqjfWV3ef5sY0/v8/7b/lTywvO2m2pdvnF1f0r+zyGX+5U13vlzNUb9i95
eHPRi0sdL9+7/AvBPa/6U/01nxLqlp69c3O+bGe/vlhvVt8o5HUu6JUe+YBr
V3Ke8K2yt/aZO+/+Kjov5p7HfjQ+JusbXlfw/+z8hsB/sTqDyAvsSvR+ON/I
+DzIgTbqeiLPjH8/wLfPzgVY3I8n8tPkKfIVuxY5ib9Jf6d5+W18I3A/4pjI
A+rDoB/I11c/kria6V3y38eE9qBXQt0zwwHxr8i7w/9Czqq+Nb6+8lo4z8jw
YvzMNi7OmTCePefaM0/YEdRDxZ9lfZBHgB+N38I5SeTb0x78OPioyGvsIPBk
9CRxOOLA4dxy43tQLwxeC/4OeQSjfL/43OwU4sjI+cBXsbpywb9j/6TEH/BH
2Sfd/Pewh63ePXZbOBcBPncScEz8fuII6Ku0Db8uC/gl68fOycSPpX3YH4zT
Xye0VEe51as44wTheVybeXn82lviP63aoS73qy+Hi574W6fm+uSRUzRO9Xsn
D4vDBove+0z4mbU1TvL5bgPWlv+veLo1XPCV7t4v/Oxz0Xu7fPiSyA+J/+UX
ny79W+Zgue/bN7R0/2rGLv57e90u+OrUW4WXM+Inwg86/3Lp7w4r1/VVdsSa
EresZjR+zjnBz7vlFrED/j5d9N15Z7SEA+cPDZY6bUtu1dAPq+7vUdc/1UPi
BybLzfDn0N96Yv136cVH11/zIXndz8ynHitxxQdW9TzdOf0XrO4p65742+6D
3X6085KC/qsC/lkG/oudowVuQ54V9jj7CPuVuNXA8Dn4Fvom8D6Rb8i7MuAz
yEer9wk+g9+FX0g8B3yReCF+MrwW/JJQF8PqvAzz/TL9gF/DeUGqf3N4euTn
wXdB3imvJVN/0PJQNg79o7/UmYanofnwnN9kcS/Nb7fzevR8W+pSf2WdaN5x
gr9MPgX6hvNW4bXAlwI/Ji6KXxLOEbK6eTpO1JfB/ze7Btxyir8fdkqGPiRO
B28FnhZ5NPDDyMPmc3gt6LPFfLssnxVcMfAz7Rz1gGcmQd9VrHv8KOYF+5F8
znA+gumfPr5/Jfuss78vcY0kxOuqUJ/F4qWhHlkZ4n1ViPPZ87YWXnt+n8TR
qtVOWbh8t5WWbKjHigfOEr/p8j+L/tvycdEnX1aeH7L1DPf7qsMfRL/1k/yK
2iXnib9yRwfJq7vtesEH199D+Ck/lHon+c2iD4rrfyevO4i/Vhz1He833er9
uOL8LwTvTL/w788VHLTYTu5bnbSHv0/y2TeK81Zds8b+7OmbyvubHS39nnrX
As1fOW1m0zhgdePJzh/MPvrkNRmHSW8syPOSH33ucdp/bL5Q646rCvqP/ct+
Zn9Xgf+JPLD8XOQFcg38EdwEHBG5gTzi90v75xgOC96DvMMfwa6F3wH+Bg+T
/U4cit8hD6d6+Wx17akvib8IPkT9FdqJ/lX9gL6wPBXNf8/J80PurefHw3Bo
6klTR05xTKvjAj9J43XUsQHXIr/d/GfO4VO/j3xNzuGLVzK4j3y+cmgX+Xrw
RZHP+NkadyV+a/gydXTAEcO5eXY+IPoTP2yy75fxjZlfcEf0AnFgvS/+kuET
6Ev88m7+c+M/wyPt5ttlPM7Az7T6Mzwn+HfoJXjXxislP5d4Ic/jfsTpAx+T
5yYBxzT+Dby4EOcrg19ndX9Yj/A2w3lA4Kz4hW1dyfJeflZdNmot7vTlow1x
yuKSq+X9C37n8dQZezT8fnppP+FtzhA/L9v0F1InpTjP8/O/87rXPyf3lXoo
D+wj7599iPBiXlqjMR64yutNcdXyn7uLHjxEeC/Zrm3E0cKVX/iK8Eyv7yp6
+4DHm/pd6SmvteaXbbx8w+eXZ6/Qmt955I8bPic5fP3m/Je+z/s6pr2ebK2O
239//rXwnL5yTZ7qnl9N93XVLI4xOOznwP80fgY8N/QCeB48gXC+LfLG6oYN
958bvkpeArxy5AB4G3gjcT/kPn7aKN8u5CvyFvlr+xz5DC+QeMcKQb4jP7gf
dWnAXVf27yM/8C/BYyvFKznPHb+S+mPGT2VclacJX9T0+br+vgn5DNwXHir1
Wshn0HhfNsvLs+I64bUQv7RxQg/xPPwycEbN78desjx8+D/ku1KfjHP14Csz
z0uH/i3mf8c8mdxm/qkjFHgr8H7tvEnsJ/Qs4w7OEOqwgEvkgddUC/zMNMTv
kuDfWXw85JenoX605WNgd+LfU98bPDLk55k/jn1BnC/kKxTBrwPHYNzAPzPW
eTg/IZvRa6HOe83+86Tw+nt1Ff3wH4nPpZf/2+e7PXWF+HtnX+f13nHrC39y
kT4it4+5UHj3v/1S/bo28vb0KucuJjjhrreJnnlgbLv8hmzs4MY8k53PEDx2
wLLSr+Ua803yn3Zoyc/L97ujqV5L5rxQ/zy55Ul/HtG9T7n/y8/OlHbsf6Rv
z4PLeP0/ekRr+nmNcZ4n++sBUifgrH1lHsbJ58XGI4VXNHi44JePy2u62/Bv
pF5ctd177cp3aeti/9p+Zt9Sb5a4JTz2UNcF+WH1QuDHENcEP8U/HOr3sckv
5BV6GL4F9V6QV/AHiNOTLw8eiXyd4n9neYgreXlt8U7OaQCHJX5EXht1Zeg/
5wyE8xtSzSsvtd3GX50Z5D32uOKYGX6b4pip+m0Zfjnnp6vfB9+vCvG+Sut0
Wn6CXuhf+3/GkvI9+JKMP/wVxl/viz1hcpX6MiG/gnkoJ/j5BV/+yrkK+C/E
2fCv8Tv4HfUOwMGJY8MzZp4DT9PqNWAfsZ57+XZZPSLaS7yNOB/PCefnpQHP
NN4x+eLhPHR4ZnbeeKinmYS4nZ2vUPP9s7gEdmCI19WCXwf/wPYj7Qo8TuMz
zedKfnKL47lXvcRvK9a9RvTY9/8oemvvf2od5Xdb4qWUazXOu05+k/q6L69U
LfkLxWI31+Vk/uKU5vyahw4QvLLfli3pq/KGywXX/NeprflT5VUevzvvWWnX
z37WPjn+5C0S1zuzub4sZtzWOM/ijDHN+Ty77OHjbWOniB77eJmW9Fh+of5+
5zbw0c9eaDpvyZuN63bb/X92Z7v8xGQdf45wdv1vfV2hlyVvEdyF/W757+Ah
xLXQC8Q7sI+J6+Ef9g77FflFfjfyC38CP4G4IfYo+cnIR/jr4RwH41dg1wa+
J/IZeW28CeIf+HfIe/wN8gWoy4/8V/1k+YT4g9T7wn8h/rJyaI/qo5R8eOx5
zgUEN0UeUzcz1LnmPHvyUNLNm8uv5J2R8j3imtQDR17iH+H/wfsY5NtF/znH
qxbORyfvkXFOAq5p/F39XY6chsdIfifxWeLA8JhH+vZZfRjWQchLiOcGUc8W
vNDi2OinkH9neHCoJ10EPDMN+s7sn/6+n2ngqRhOGuJ2VeC1lAHHtDhAG3l5
+HVW54XnwQOKenIhr+TQG3x9yS7LLFCcqxh+uOCI7+zk5Gh23hyRx+//UfDC
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
9gXCPctXX1gg/VSMkbho8kM5X6p6/+zm+X8ddmqp3/nes5vjATe+25LfV+0g
dblr750g7TvJ20e1/QQvru16d0vjVp0r+q8Y/t+35pU3pm/QU5wrs5jfZ0XA
PZF3ht+M9fLR5AL5evAb0EvkTwe+C3IPeW31SbF/4WfiL2FP488E3h/5D1Yv
mXNj4c2EeB/8T/pXKi/UeBvobeqMYQ9oXRer70U/N9P/OW9oX70P/FS9StWH
1QmSt1dttLQbL8vvpu4LuDN6lnoy+H/wT9Fr2DHkb8DDxX5BT1KnGr2GnqD+
aeBrWv44fFX8IXDLIf5z8D3an4b4LP6Q2TUD/efoATtvlfbBdw7nKFBfBRyf
dZ4HfmYR4nfFfPRdFnAPcHz6T7zPcAJ+F3BM+FD8LiFOyDh19/2P9ajz7wjv
sHa58AWSvaXuR3as5L+VO7dP73El5/73Rfe7bps3Ple172Uip9b53ONcM78v
fI4ZbzSVT0m3Hb1fduKloq/226Fpu5Odvt/8/Ilc9F6udWjS1U9sfM7r8o1x
xLzveQuE27Z1peNEb2azfP5B/uAjzcfnl8JryffZVOupPCT6bsWL66/pzNMk
fniS4KVV53skjvipvObDHnX3L27rXverk17rNex3mc0WXHbVTJ77r3fk/3MG
LpQfWPTp3Zwn+kCfhv5+/qE/BySb/J7076EPGo5b9ouRDgctPv28ru+KnbZ0
dWqQP3Z+KfIr5DvYfuZ8WvKC4VXDy0Q+giNh9yJPh3h5i/y1/HnsZ+p3EidC
j5DnEM8tIh8c/YD8on4Z+GCI95n/CG6F/wj/BD4nPFL8NviY5E/AM9fzHcjP
yJT/Qv1sy4PmfCTmQc8jKv4p54aUG0kdO4uzUY8MeU3eP34eeBjxROYjnKPH
POTIf/g8+Necaw8+Sd4d4wceCF8qnGtu/MiAa1ocrrf/nPxT/JskxPGSkMeZ
Bp6m8ZTwi1lX8JhDfRXWsen7wM/MQvwum4++q0KeHjwVq8fQwz8/C/noKf4m
epL4fPfQ7g6+fVzFT+5qaEenvY8Rvbe6nC9XrjbU1zE5sKv7P39s5Eu6f0S/
nf3qi43uW5zm/YNkt6uayrNsC+Fb5l/KeX7pJuJnJLP2kPy9U7fyem/whqK3
h6/t9drros/T3tsLf3T/jtKvKcPVz9U6L6e2lp+efkv4OOWam4k+0ldr93ot
1s/WK1n22obnI9j91pB8g6L71l8r7zJ/aM126aOiy/ca47QrSl5DOXFpaecB
35L/hyjfZMW7Fo6P82TjuGx2r5wHnBZrtcs+Kx76vDkeOnOK4OmDX286Psn+
n741736vzeov++zStZw8q9iHyCv8QuxU5OPQICfgAyJfkbfENdo4tw/5jTxH
viPvkf/InSz4fVWI91F3uxbqVls9No3rFZwLjpxWPqfxYojfrObbV9tW/4cn
Aq61oe9/uav+j17sKf54ecDi8qo4teG35F1gp1BvVPWp1cPCTqAeNXqEPAX4
nOCIjCt4deCvUFcOeWt55OhD8FLkPX4V8xJwTc75gpdlvJwe4ff4gfjt8CQD
bwW/Cf/IzkfAn2ReQ30V8s2xp1jX9r0Qv0vno++SNvQd9wXHSPAf28AxjddK
XJXfEc8OV/FLqTdZXrxN+/DMEyRvPe34bcnru+5z0XP3vVN/LS/t21o+3z13
Sz2WrSY0jiPdsKN/v/MTvl7n9JWd3k6eHC39+dFWrj/lGr93/2cjpa5zcv3H
or+7v6n5Dq8IznnuY83jdxve1C69lo/x5+slTxwvdsIRg1oa9+RUyT9I7nlU
4ljv3Ch6/5NzGrYjWfM60Qc3rd4uPVn96Il26afk0p9JPsSge6Qdv1lGzgve
SeyA8pab5fVbb/l6Zy+/8rXyYr7Srs33bY2/9H7j+gh5n9tl3O54rLE//5hv
fzbmDxJnPRs7tIfbb+V48RdN3uFfBL621eGE50GcA94KcpO4PvWd8Q+oEz7N
y3OT78h7ePLEmchXQ/9y7gbxO/QFeX/k94Vz2jmXiDpv1POkfgt5D1aHGp4q
edngoOTrax1q4oIm7zRfPjtC9F6+/jj5/ba95X14QCGeZ/kI6Hvq8Uz0/SC/
IsMPJv6E/gnnCtk8YjdQzy7Um6YOTq2T/52d80qclH7ClwJHQM+Ao4PPwucE
ZySuRXwW/iV4IffHHwMX4HwE/MBQf4y6DNwH/8vwycBXSQOeGfVdLeTbwavh
+zZ/sd5YwDHND8euaiNPPd/lhaZyvXz6sub8xVE9JQ/u2bHC19xW8hWq258T
/Xf1Ew39vbau5Jw2+IHrX9Wcp3npRp7f8APx32pnyWu2TWP/LX/0ZPn8nq6i
J9d5UfTdpc/J+XvJm1IHZhvRb/nj53t9e+u1C8Y/ndy8XnR5wITm9brPF31X
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
f24D0XvFdjt/LXl+C3sVw2W+qnEzF6g91R5y7lNt8jX+3Kern2qqB5Op/5Y6
3Of8Vfzdi38kr2sf+7Xmc2RjS8+bvUzqqBbHte88jvy8uxcIn/+mr/L7T/+9
vi/XW+7x+vgNW+/xVtpZ9Xng9XnlNfIbeY6cQd6bXAZn4pwB5CXnqqM3qGuj
dcQ4f8Hko+bVwds0XEtxU+pN1zR/nbrbdv6v5q+TN1Eh75RXY+ffaD2XZM/G
+q/oJPVa7Hxg6mLjR5J3wvnoyG9wSsVhrZ4yfulSvl/gz0Ubfh71CMgPieel
g0fn+CfkaQy2fsn98KtCPTL0gMVPA1+TOB14dMQ10VPoC/INihDHwy4pA2/F
8jXCubB2v5BvnoV8hCTwVSKeWUZ9R520oO/g5zBerJtsETknu7bes835IX/2
PPBk2R973G/Qll5O3Lad1nmW+El6zGqtncuzmuTj5U+c79vz0y4uLpS8fZzo
5eN/5u35047Vc9vXlvjNWHl+uavovfyUvUUPPllbKD1UPu5x0+JSOe+hvEvi
itlRoleqtQR3LR+6ROTv568slDxNN+7dEs6X3rSx1GvZeFBzPT2khx+HLW9z
+is9+u7G4/TSIRI3/Oluor+G5a3V7Znj6++kj33Z2jzs9Lrk1Z0o+X+15Xq1
D+8c+qGcC/J3wR2qxyc1XY/Joh6fz/t4vKJa+oXG+MZWA+X+L/pzD9OTZso6
fDpt/twd/9Ec9+zw5d8XZP0k62zy+rzy2s55A2fjfeQ9/iDymPNr4dsQt6FO
M/WZwZWIGxKfQm/BlyEPcX2vN4wPv4a/b0UeA3qKeKPeFx5spXkM8fyheFnd
No1Lgvuhh2rgbPCDlgjvk99IfWn6RX7GcN8vxhe7oSCPAd4o94N/gnzu4dvH
ffHTjN/S3/8eeW/17xbz7Tf9g59IvC/gmoY/hnor6CdwQ+OhBN6K4ZShfqbx
Ots4DzYP/MwYvzN916WH4BlXjZa6Sr2Xlbjdf4QvnfD9kJ+Xntq54frIDrve
65PNz/T44c39Zf9e2NHt43Rg8zqbdt3ykcixKXNEjq3+rvAYjtR6W9NF7yUn
SX2p2txDpf7XmPXlPLoXTnTtyVdeXeTKLVu0pF+T+/do+r38qOHt8kPK2T8V
uXpl3qJeO1Zw2aG/kv58JOfp5jd9+bX4P8nGXYQfeeEYkaMTr/9a8vqq868R
PX7G1W78i1ln+bqjR53YVJ9l7x7ePj++n+Q71F4eJP15RviUyVTxy6sLPK8y
2+Sx1vTi8fs3Xgd3Cw85+UTOYcxW/LaPX1+8pvy/yNuC45/63+bzvs1Wdf5y
/gfBT/PD58jvtu7l47LPaf+uljq31dD/G7+zfOEkz8PaZPLceeUt+sHqp6EP
qBc23usjcEnqqVndspW9Pks1zzwhnx7+quqzZBkv/+B9WlxMz2mI57zaOYFt
9VfxyBpyGD4l/Bb0OnqI+CdxMvwueLLoEdoPr5Y6OX39c4jnYVdQb43zhM3P
6eufl4dzFjgfwc5vRB+hV8J5QeZ34QcGvibtTdrANeG3GB8FfzHE8WqBt8I4
2/km+I/gyyHfvAz5CPQb/Vn71VL19Vk+uZ7ouUeG1PNk0/92dvrO+MbX9NDv
aR4L+R/hqt7+i+SvLf9o8zjOP28W+bCfvNZ2a45nFpuNkLjMYp/W5VQy5wvR
f9W7Pt5xQGeJn41QfkTPZSUO1We6b89Zw0XfjdlM/Lsp63h8tfMQ8fPG9vH2
+gEHy33G/8v7HwcKHlfM/q/o2dGbil+5chf13+Y0lEPV7lu594sdJa6Yvryt
yM2rjvXPn32R6Lvxa/l6IRdc7Xn/49+X7z36uujJ8sfC47n/bPneiCvF37pQ
8hWKg+U8n+JiqUOZn92Y/5o9KPHLcom/ijx+6oPn6/9/6/3nm843/Xt1+wXy
l7PJ6/n522KfxnHUSVK/rFhGX+88xucBXHuctP86yQ9IH3la7KaPJ7cv72/f
H3q/bNuHZDzSvRrHg1/9ol35N3bfE7vIOjhW4qZljwsbr6Mre3wjeYvFzQP+
Vl9Hd0/62wLdv5gmcuM6lRfwTPE7OB8I/ov6ceZXIle1/jTnR8BTT6j/As6I
v6b1ydC/qdZDgxdpcSDqTKMf2vD30j0F5yQOaXVPOR841EMzvwy9Ct5IvU3q
gRL3hN8S8vPAPeHhmN6At0kdzeDnkS9XoZdD3WnsBOaD+BU8yyTwV/icfAI7
XzboFcMrA66Zh3w8O4+R/oc4XtYGb8X0Uagnlod88zTkI2Qzxjs+SnHNmcIv
nNPXzXdyyCTx/17UOoK/7eLsgPlep/zF12P+u+A46Y99/K74VnN9l27wqOej
971Y5FZN8qaLG5eu67niweZ1MpJrlpbnnLy4vK45vX1xw3303IX1d2wot4tl
pe5H9rrwSvLThjbX41+OFn07umvD72W3r9a+/PWu4jelUzdrfA7fX84QvXfM
yaLfjtH42Mfnyv9PSp5/ttqyog8+Ft5Q9nL/1vIH2nmVU18Xu+PsF+T1JuHn
JCucLv+/fKHYHRtt7f3Bn3wm49WtOc5Zztpb1slFB8k6eVD4vHlfyR9Iy04S
t3r2o4Y8kWqTM1vTI5v+3Omz5EPJc8jX2F300zOrymvfUY39r9u6Sj2G3eT8
kfSgUxasft+u4u+nH+7+5oL8Pr92msT7vjfWxf2SQ8fX9V160swF03t6oS8K
zqFF/lLnDD2BvwS/kvgYcgw9Au9Q8/0q9e+Mj6/+HX4Q568niq+a3a557uCd
xa7zkW/4NYP9c5HXls9G/VD8FuJ25PvBk6e+GHnn8F7wp8grIb8fngrnbcDL
DPG8og0/D31l5xPBX8TvCvXG6JedG4//Bj5KP/ADA1+T8SoCrkl9lpT29fLf
s/uF84CKkJeQhHpi5s/Gc/K+4au4e1RjHufNHzTFXcoLb2lovye/vcPzRG75
k8itM3o0x7vWKVqSH9Wznwt+dP8z4n+u3Tj+Ul25hY9TFruI/T1irNjj54qe
S66Q1/Ky9wSPGvz614o3VSc3lovZO4eJ3rtX8hWSwwVfTu+XfLJk9untkqfZ
Qb/8RniXbV3pyct4fPzMiyTete794i9v/dICnT+cDf+r6LvB54ge7LKfvF51
rKyfowTHTX4k/6cnzfF1Q3c++2vxo9Kyb0v+XnlSZ/ne3OXldc6Mpr9LNuop
POHvh/zGa7au5/dVt5zTLj1YjL5u9rzfT9faVvTgS68uUHzQLuQfdZTRA6qf
MvLJqZemfBb4mYZvUa8TfQbehT6Db0PdFs7JpY4HeerU7QLvXL65fMyfG+Hk
MPrGcFL8IOKK4J7wIfGrwvm56J+McxOQ4+gV7afxQOB7wruE/8L9wJFDPK8M
fh75nTwvC3kKKX4VPMhQX9N4lsTR8MdC3RXT+1yDFnXPs3Xxq+nOH7Prygny
/vGf+nqLb/X5P9FnrV5V6s/ZSd8/tjEetb7UxawNv1LkzSHX6rlu/nzU2k13
yec33Svy6/M5Ytc+8MHXE8+auJL4oe8PbK6fjk09rjh+VR8nPP+LlvRbsvSa
LX2v2kPONco73yH1apY6siW5X749zecVFILzZvsoznvkio312efLN3y/fEFw
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
j2P9iv0PWq/3De2Uj+NZ9qUhzW/mMe6r7nQFH8dsqnipRX/l5/fz9eDO9+YZ
//GaU/ejz/3S5XrejLkmpPhdjs2oxTs7R3z9fXCzLcM7QX4tqq8s5SlN4kmq
Pg3UP8FSenfnbY4nYnpevO7is5Bvpo/4klRvU/VF0g2Qvk4oPLTp/QonSR9B
vtTSpdcj/o3vVHd2fs7nOfG5dt752ejhPeyvVT4z63Y2DxmtSnL9wqjOuP+q
1Awqn2McCy4esPf8ANxbdw+6hM7PeesADyfxxqn+MfX1+3WtPO9n6+162tfF
9JpYH2eIq3/9LPTvosxp1KWWrdbz6a7dR96y0DngXpav/HjnHEqljd9EnBn+
95kzB2nvd5n9JeBe0Y6Rwj3nBvo4+eKhT4RzPm2U8nR2jUPoK3qS456MC9wz
+kC3Yh7kvq+yMfDQnuvqyz7oR+98aHpeXzUOvAq8GsxxRd76jv1v5m0Dur14
wDvx7PNh0aOLzG9w/+vvbeQdEkzl51Ef/myGkYV/b/Xn4JsS52qk8oruIRNw
X0DxzgZcx/G2AfcKqf5Km/YEh3M5UBewSnj3m6Zh1tPfBxG+f3VSz/hOpJ7l
z5s6sWOx/Kmc2or7eVIe8p2E3nU7whXl42n1jiDfSXEi+U9T/BiTP2+6+Cyk
ryN+J+Uryc8lkC8lfR35P7viOUfkx/v3xcD7I+gXGD1CG87uWOhf+ZXD788T
zbHeTTsM/IJbb0A3F7s7dHuHG2K+rL2OXd9WvXghXe9O013Ilya6jP1W0PPV
Ivx8vSXe/I6e0N86Cw9gm/xF+Db2Xs0/1/w6zncudGfi8myeP01TAPPGGByn
bBhLe5xyQPFD/uczi0Psd/kuib9uZ6e748cxZ+pS5Dlfzcpwz3pFva8S4kI7
9iaGe3L+fD8/Rrbf5c2TeWa9Hw+tAosfazxo9buIOK96hr1e3+OcVTymZiMx
f+aFzsGYkoLNo+bKRdDT1EN8bdWKocU/q/O3wdVfb33L+yjVgk7buPOSwskW
wJ8R9ULyZxbbWnN8LdSO1wcH98P59e/Hj38V4lr7aDYt3hprVoUF98zy8M8z
lqt6+lfQH/re2ortoa38dykD/zNz9Ghex78+DP/b5SHIbzx4j9c7hjUIS78/
We4Tdv2Ys1ux694uPdezXiiencL+P1v5TNvPAy+cMQpnNqrnqT+R8i0Tii9i
bomj4rM8DMfIZ9qXm/NTDFd/ParTBfrkUR4zAj5LwM+F+ueRzzXpBsl3JSXH
y+gRtSF+iIF+zftTYN5fhz4JdtxJ+rzF7Hl8nd1lF6+7LUoQFO5Z02dq92/u
jxcpnpscOEi7P2tWGq4j+3Io8qvxwC91MmTk6+J28K+3F5XFfPy+6k+zZqSe
J3ABvsAyR4fg+iglq+PHOXM6cM+67uP9FLIqnns9fZ/7YIdR4zs/3slLr/q3
zu0e6FOUI/tjqQ8+asgKr+N3ujSC4Z64CV8U+yz6uhsPgIvmHBPX4TrwIJ1x
r+uvl8LnPK83ayHiHPMN7NdoXxtxXqyBQcV5Vm1cJzJBL54vPN6cf95Ij3jt
AdcnygHAPXlgML6/IOI8e3UF1BPfTOn/nMhyD37XsdHvQYxuEVocWkzfvyRw
vPHRR9H57Qh+5+xxeD6njvJ3KQ2dkVGvn/56n5RAj3Nv5oNvUA30CbZivRTS
9SvK1MB68EgWbdwnuxcOiidj7rC8+8zX4vwTQ8VtVjP1+D78l417z2BLOEY8
Tpc/S6CfXW5ep6N+s6arvx7pHUjXQLq8gN+nS6cePaI2jAQ5LvuvyxU3cN3m
+APzz9RfeX6zEdZ7Rhb0HXIqDsX91Hsw+GT9MyHeubRZn897PlHU/JrG/hnU
Ot6sf1ibnzFnxdde93KFqicNOYL7OyXqEcb+F7zrSAUHeM4/cnRa6A+vqP4y
H/XA404/IB7OeYD3m+34MnDvHPgtsl6xJ4JDsl4O6P6sW/7vNUr84tmnVg7n
cbzZa1iU/lfz+cE8jrC+A+5VQz7Qd2A3n0+fe4A83Fred88e4eqPdWc91jHV
G3jm34zBQ4OKS4z+3noeGk4arIfsyxdR33pV9SeKWZDjXrYdOE/Vf8I2yuH1
+bH5dfplMeBf53T+rVVjXVBxn72hhN6Pz+LrBMtey3X3SZ7h57kG/rbGvC6e
eGW3PwhcS3fTm79l6ftDGJ2O++M62XUp+vaVvOnHM7tqA0/estWmbpR4zcY+
hSOqTy315SMdgo/69aVGftQomgPxF/FNVJxlunicFvFW8vDnA30Ala6B+KDk
E22TP4vLf5r61Ab8RqNHlIbx5jtB6XDM5dAp+e4OBz7sgk5PTisN3Ct8Qemz
x+hxb9JvnnU9eecg9jMH/tO+JchXWd9iKxNBtyzamlg/Guu9/XkfNNDjVizl
C5ltBfD72CXMj4PSQt83PAPigF/bIX/Zexve/w3ybMbnx4LrRzt+md7n7Pob
8JXZou+r51zug/irWe+QeAqyzk7kL+/Dt0xUHR9SHtN6pSB7v1yRKiRdYWSH
uDKN1/UWAveMjdzPzK5QOqS+iHbmjshbFqyo54ce/x5xTgeT85J+KRRUPCWa
/Opd/3p3lx+frELbEK8tOI5tLX190qxXmuNivz3At4m3GM7Z6Y5xv+xujfX9
tA4UdK0DkJe0Y77hnf+/JfG+JapvSTHVJzN9C8/PWbWPAPe6w3/PODEW9++D
Dfw+yLtOj3vZvuL58Jcc9Kstcxbb68c98+U0nAfFwqvveZ74K9CrW9vQj4H6
DUmXLxnpICzqH6v68lFfdsvF4yS/MuqDF/CBcfmzSOq7sPrsU62b/F8Z8pMf
sO4stch/PxnLE/vnF6vLNV7HWou8jt2yjeIrDgHvZFgl4JL1pec6T35THH7/
dWMHp2M7jXjJmIm+LHZh+HMaCQZy34o0o7mu7Cd1HMPBz5Ddh+jzsnts7je1
TiCOmHtTXzfqu0LpzHhfT1+jEYqXkQXr9KuHgJOJlF/2x9f5/C1UPFxuV5Ti
JPdwPj2CvGXyWshj5ns5JNwTWwpGrt537+SxyHzOmglfU3F6HP6f25OAd7mX
4Hp8PoEW5+wPkeeU/RZ6zsOOqB9SPtA+3R84uQ+6AUMgDrMmefffs1sm4XmR
c69EzuflAuezWFeGwCflzvfAT9MG3hUKrc4n/4QfhNzVmP9ew97z/P3ENviq
i6MZVB4E/gD2/sHaz5kdhXc+9cI3et7lvgz+/KWYnovnMfuk9T+2rIfAvU86
o0/fe/38W6NLR//WtBt79jWK7JCFXuR80GtJEKc1KsT4l8RPof575D8mXf2G
SHce8M3Mw3GS4kDKf5IenfR8Rqrg4jxROfHOaFwMYry+kePb8JXIa0z6FHHQ
XPQvsUegv7PIu1Wf398E3yQrtdIvHN/P5nWRpljU8pxdEf/YN99muGf6ZjDc
E4f/1PuidBwRVJwmX5yAOk8N5HmtDmUR9zmz9X4dC/T1Dt8N+HKa2+CjJRom
VvwZ1a8vX/yw6pmNOTfgf990gn8rLmUBDn4osF3dwBPXZK5CIeGebJwNvNFN
yyKFe+4hGu4Fr6i14jtWiOednzyA/JtVFH4qdhzo6ZwXgZu+zA3AT1lzOVJ8
EJlV8SubZwmu3ifwfVZJ6CD+f32HddDdGMhTNtvP8fHmW/y+2wlei5O1Go/7
Olzn8d73PN4Tv7yuPT47ZlP8Pk2q6OvbPuQ7xczWvD7ZjfvNyIrPBVWPcxLq
+5LQMN97W4t7xoVFQemp5TXgnDgK3JNl+gIHi/Z6LLgXGFMU7ixMBtzakhn4
Q3oElx+nz6VfEIqXGej7R31qY7jw0NVXPaCzVzjpixMc7kWP0IacNQPrwuuq
3/gE1S/hI2zN3Xvx+CKvk8uh3L/ZaFBFf/3PexHz/YEyvD5UY742/ykqnuW+
ZGUmPBb9pfMldLjG8cvAuXKJMI/WQh8kWfsRccVHC/R5m0sPOJ/1y+Eh6bnN
Z/5Q/SUQP8p393r7eMn1fryzUjb0b+1PhmCb72vEf+PXPVb+5iNH6ZbQHVet
75mvEr/t1scT60cg/3wX+Qb7WHv+vkaZ4Cd2Kh3+v8M1gHvlgov7nBdXc53q
OfR/Nz9F3tOZmSqoPKtVqAg+dzgZ+CwvnNXirmVyPqdIUlh7nOb5zfj8s8n9
+zO3u/pGVES9wWyFfu32EI5zxhQ9j8Qs7l2vcw85qQTqGLEvRWn9atfOyPmY
V88ExUtxVnZBfNekP/rXDuur+tgC9+yhFx6rH6hTO4XisyDuoz521E+PcMyk
frAKD+2YLv5lFv484Sf1vQvXsA4X3e3/nrEXdkXjpccoXktfB1/0Avy21kro
CuqX5Xi0ZiCer/Eynl+VBfm9ivEwb58Fj8N+rwu2rbvp639p9wDXbu0ICt9k
98HwPWs/HdteZki4aPRUcUGjmry+U1T5+L+h8K6OHvdEh+88ccj+CvlN63w8
vp7utw/9YOcuCyuOmydvI96rsiGovmePHK/UBV5W6sbrfgu986fy63WMF2OX
rgV/qeJ5sC0Zh+Ge85XpPf8+XO/9+tHaDC/MJc8Cp+Lr4zR7XStv/V+ZRt6v
1y+Nul7zItyvrzJw0/oxGddf/HQxqHjT3F4Gx52Y64acorEQN64/jXxnwpPg
dX41F33eL5bX62bWjPXkEdunRnj+ruZ4rNuMkluRx3lvPe7fL4+FNT9vDH4I
/d3Mtdgeqq2N35xJCt+WKdzbAtwz1uF5cT+8uCebD8PvvKw+/C7XPxsSLhEe
kj80+UJTHOiQTkHhncwUXtxz8qfYHY13jx7mjB/0Pio7a6OO90Zj4NukOsCz
rdjaH+B56wbiPHsI7ytnTEe+zxllwU+w8ADcP5NU3FfgSqTmfytRHvhlHekJ
X+T4U5EHfWWf5/7Eb6qv5uL84MX3AP455YvicXPJcfAWcFDMXY95rafaZsfW
fh4+Z+aQ2Pp6VMb4yG9eva+dh0SmK/h8xzrge5p1veerPeizJN/LE6k8qZH4
Vlh0YMEOx8qP+swXv2He6rZSO68ZrvgnoiFXeuvWA9+blPc7kilWREn/QcOe
i7y3M7yL3vf1MPwerE0rwecsp4/3Ihwn4AvjtI6gvrnuCM97vliB92+oMIg9
tqZlCS2uW4e6tF0eugNnK3jH8jR4vHbykxz3zn8Wpd/VSn4tUn6d4vxs9Duq
ts2/NRtdDA73tmX19+sTI5Ijfst1G+u7BTfZes4uUJXV96wPUoeES+S3Isi3
mupzKg50FB4KV3/ZcA3nk+f9uGeuTRyNf2EcZhHEeebC0ZiHc7wDXPy+DPfl
zJ4bz1fCfO1cWgD/knLguYgXvHEqomGVMf14ZyScAp/IDrO8+63sWef31TI7
pQZe/ZkOeDNxSXA89lUv6+e54j/j82UV71MiXyrbYSu2rOLzwgjoReTnXVE3
PHJL/R7ow252q8P5+WuwXrC+tcK7znauPxH8ExPiAvdWLwLuzWmtxT3breNW
w9yKuMXcPR//1z38X9LVB5mGnKDvZ+A8WBzU/GwvzhxUXtTuro+XzIKI78Rm
4J5RwRv3nAPneH61H9c7OItb8XrfO8e895dmNL9+nk+hz8NPvc59BLutUv1E
QovnzD9eDMt6ItxDJK7r2W/HHAJcMwfw+pq5hOOPM1rhUoM0oeEe+U2THsLV
f8GJ44oDo8f/xBDlN6v+dz+o+gJw0K4P3BOpYuHxUtU3phNwz8i0HOvG+nkw
nz98D37HQzdBp/AgLvyrO47x9H+Uk03Pepk5di3yiS0TwBd0QR/t/py+D4BX
+ypGyl/C/vAq5uMcmL+MtvAZka9i69yHT68VR+VPzW38e3KBD2AnbI75alc7
vb9ki8thxb2IhlkHfeeMu/CFdIb3DImfaJVYy9bv1rV80GOVuwzcK/y1Pt7r
L/U+JTuwHjAOoB+7Uwv9EJzKt3h97GFO4OM3bwXnb3Ab9VNf9kHYX1Ls1/zk
Oe4rlvh0cPP6VegUzI8V/5Jwr6I37llZHvD+gxuz4/svN8bWrgqe1flhqFce
DTF+dA2z13PIXybJjvuvUg2Of9/G0ecRtt3A+4dt4fmcdeHFPTm/jhavjKWZ
uR/lRwkYXlgz8nninJESOgTn4kv+99lNa/L9NYqh/bzzssKllmlDwidL6fN8
1Nc8SzS+PYlh7ugS1vjWPp2UryPTKl1P41f5dX84G+K6ZugfKsajX5CREv1R
zJ+X4b6reovhljn0RJTqXaIF8n6iNvqiGw1XhaZ/O7BXz1P9Gvovp1NNzEMV
fwLfJd1RvL+XDzyKbdlZXspaPAjz1WLlX7j7J8zTFTcgXknyG+bbTr9FDm9z
9guvDmJ/T+j/Ps+lx7lCdzHfPlyjPV6nyArGV7CO/unHP/nwnn9rpLkbqXyW
lSMH1g12Bn5cp9p74rGR69vgeIgvjcF6JfOBKPlqCal0BttWhoRLxl2935oz
hfelENuLBuWXJm/kxn155BleV+5eEryyi5mRtyyB/utO9XJBXUdiI3jIMtXo
0PpLZ1vJjluIgoizFH9fno2L+sQ7Kj5ar+Ih5RNNfX3sher5Atz/RKp4zXlB
PX5Dvb+Vq35WTcVz6n3mcLXtoV5XOjvrFY5PpvJrkZXShYRbBvVZID8W4nFW
6hitv3uMwzrbMEq4ZyaOw3DDaNOWr/OqfYb8ZmO9ntWcw/3Wrb7XGc45N5vg
PmwAvot4pbPn/eesmhiU/7/xQeWQ/MyseW2w3s67HedxUN+nTUwD7hHemb7t
3vrfBuA5mOvm4nN3wRP1TUR86PupF+bz5OU4L+PUDd4P8C707c6boenYQx1O
/+ZavopVi/vSyJ3IL8oYq3AeTT5CHHv7I+38bXftG554oLPq19OxhCfeWRvP
hLYeaJzW/7+YSjfoFP8A57O4Ga/zVuqp5321Bh9FbIHu3CrO+z7I31uy/1Ok
6QV/hN4doRcdxv07fW+t1f6OIs+viCdLpfHEP1krKXRIx7KirnwW/XWty/O4
PmFWNeRdUt/B9XW6ufZ3c8yrIfGQxaQmnvO6fJX7jgR0bP/pHwf8yeXSBah+
sYbiizjkB1aM8/8N6p9OOnLiS1bieUZLfY9Unw/4orzgynM2V8/fDQ33SJce
wGfFWxHfV8L+ZhRm+xPW1m3+36XyRv9W3rmwLRofn/wwS6Ri86xdsCXDPSv2
UG+9zpK93J9zQc4ozdtyfieGe7JjNfgJXge/zrqXPqj51dzWxb8fO0dXLY7a
L+cNKa9nJiqh78fwI3R9ZrerWH8newnHO+0q51v8WQXxZN5smH8n3ODz3pE3
9f2ybwyCj2fyafCxvv2D1tdMZv8COrurzRiuiR/W+N9v1Fuj/9wAfR8juxV8
Dpzk3K/EaT0K5/ntPLbuMNbofQNCHda1utCbnazg+f84FQ9EKg42Ws/A775T
+Ub/2ZT/D8s/Bn5cbMDrb9PRH8kqlQD54RhF9eumtwt762F+bqL9nPPuVvic
1d8O3LuY2RP3xHy9P5l72O/VQ96lSjJsO1aMmj4hTWLwHlUfHLMsr18ZTdS8
T/7KVN8iX0vlW2krPDKUr2VAL6Bwz6f4ItS/1Syu8Ix8mWuoLfXBU583VP90
h/ojkK5OfT7Qd6+6Kx/ZUj3+IH1IuCfIpzo+Pz57QG6WT5XqfeL9AcC5OT38
W/v0bDx+90Q0/v2Nw8qPPupOvVtcHxQXftTWw67IM3Zup8fDop3987e1SsWN
y1to32dcGKFdX5r3PvLjlFOU+7M40+Yi7/ht4uDud5kd+6l2V+vDZaSdH7l5
+r1DwLkN4OWbfbz7wdvxegI3Js/gfv19MnB+/M/wtXZ2vgq+Z5zZ6FO0YIFf
ryDXQLdglzK0+OXkKgm+Wo44DMecmiPhy5l5q94H9GI1T72C0+qzSPmERzTE
d0mDyp/ZtXt74p6Y3iYscbHTRc/XtGuj3iYHQl/g7DiFOujMUmHpW+Qe4kf4
lcm23JfTrPZpSH0inBY1UZ9LVAE416uIXk+06LmQ8M96U3jW1cinmfrfmQr3
LIV7Jj2vcI903jb5ORPfsYx6H/k5k59JCVc8RfFiQZduzuCfl0o/J0pwvqVZ
g+OerXBP/BEa7hGeBeJS5UMmC/u0+7F75kWclyAz4r4fO/i3RupF4cW93l+G
R+f0Lxmi3VQe78UQIeGDuWQAeCYfZwf++QYBL3fy/fqa7ggur7JJ+UHt+kjl
c4LDvUcNMXBupPZj5D/K1wM7y3vO41autrzfy87PoHfOP0zVE6chfjg0gfdt
rzcPdTjZ7zDmjVH+rTHjffi0LJipva6d7B8iLtyC16031DbHIc/7wC4yW+uz
YReZFyncM1bofctpyHEbsG6Ydx7rmRdRXxXTR8O/ecehsPS3+a/vfY33OTBy
ddbinsxuBIVvcu+loPrXmS0i0GVsmwN8/TGLdx+BcVuDwj/zZF3gXVKpx7ts
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
+mXtfWit3gSeymT4QDtr0AdIxImNet/qLLwe0Xslj6tKL8F8uvmsfv5YCtwT
367F/NDmAPBl81d6X/tjFubpyzOBfyPWXPgr7hnDroKX9yP3E3bemKWNK8yv
juL5JT8GFXeICkPh691xSJRw0BzUFfN1+kv4HZt1Rd5yRQ8ej8yBX5avuuK3
jpyE822o70dvryvjGWc5+eEHZrZow32ma7/i+Tnzp/Ph8SfdOQTxVcE3+fEf
7B5SntQehL5ccnonbRxq3kdeUrSZh3zERdTrnEXrcN5Ddul93goC/+1bk/T4
n2041xdl6orfZdIJ+LuLhOA/NZunvT5km++R5ygMnxsnL68fUH8c6pcT6B+g
cI/4IDS/03xPeCgon6niN+JNSlVfM3Ly/ZslXXlUhVtUx7OyuL7vOR5fSsIt
4okS/6Wcep36/dRX+FeIf49T2YV7L6rjCbEfg0n1yNi+kD4XPf43ht2guifu
Bd7XdGlIdX73sB6+pvcPmYn8p+gQE/NJ7xjgFTYT+jxof+Q57QopMd+2hB++
ufo88PnBXswTY993/op/4mhTPr8kLoJ5a/R3mCdqTUF8UQs44RDuDVL+lm9x
n0vR6hM97p0Bfvoc4IlceMM7zzW9H9YNnd/AvPZu20NB4eXMM3pfrGwvAO8+
RL3N6oO+5ebGGPAnSRLbvzV+gi+01Qh1PPsTXp+S3yb09i/NORh559xbeLz9
df4o8U/MVT/x36vTRL2PXLOF+N/jtsT5LdT7hEU0jL6Ng9ODboFOwVyOrd15
DurQXwD3jPL3uI7hQn28fnQgjxfj/ojrM9MJxJXO896+AVehB7JTbcV1sfGP
oNZFonFZ/j+SDwrxImPxuCuAg2p+p36rDvFEiDdJeb//9N1hOGmpOJL4maR7
D+AW1fHI35n6tpJegfKOpNNz6eeE4oNK4r/UVd9LPtfqe+xKHKesxur5Z7z7
74nfP+Z69Jn5Gc77iOfTJBoHo8f/Xx9NE2jr6/KZRNAxpIqBvGeudFrcM2KW
9dQdB/b3GviH5ir4aFgFoBc2y+3znmcXxAUfZ6TqM/8+/H2dj7C1GsNXWJSA
j4d1pw3DPRHrY643rpcEuJGQ+3DYaT7nerYPodsyr4/X8/5P/s7rl9ntoHiO
cg/67Djdtup5qZfi4/jWJWHH54wR3Fd/el3sp72rHtZrAn6XQ9Ib96h/jdlW
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
/zHFcaQ/Jx2cirds6l9O/pJUH1PzeEC/rebvAH8zNd8/8TYMV37TUp8j30zC
UxnmPKPzh+J9ki6Q6nfUX4GeJ5wuHWZ8IV9R4rGSrkL5bvoUb5XqilLpFsgH
xpTq9df/mbjnq7/zycZ1T+lw9vP/VxaNj/s3awLg2e6b/nqFkVvg8RylY5kN
vDMPQ89pWIX88ZSj6vg24c1jxj/LFdeJtvALklmT4f1UH1n4DOpKQ39FfnH4
H2w+tcve5rzz5tV5XHDydcQD5ji+/s/ZBY+/bhRUPtHq2Rt4d+wt5Vc9hve3
nd0/qHne+ea+J16YJfPwvGv8WtBnLFihx72qJ55o3zsjU3Lkd1Me0J6H2bQI
6qHvBhffRTRErPXB8S3fNPV54j9t3qfx4kL2O1m1rurzCHQd03yr9OeU/wzw
M8lfk/CHfE/WqOt5QmyGT6R3IH6kUPM31QMl3QcUZ5HeQX1OuPKbRgT+ZpEd
cqPi6ZDPtMJjSTpv4pdQ3Fo0vN9v0e+j8DTQ/0/xNanPXmD9oXw/SU/he1k9
fufx4J4clFlbH5I3kv4zcfZvHmbd5/jvXSkZ6l5Vi6MedhRxnDs/I9z5SapX
UJ6F+GS0PnXhk/0I/DMjwD9fBLp0+QgcFLRd8TLOr5pLx9d0JfiVadZiPrV7
ncL7ennXhUpNA+6NBC/SEuO075edT/Dns3VheU477yTEfWvfht9Y3EkM9+yy
r+rn+Qxf4Lgbd8LrL7VAvXBvbWyHVfLmcyb/Hj4p4lJI8Z4z9dBjzX/aOy74
cc98pn9IfB6737NhqVvaiXNHyqfOECq+axQT6z/qD6D4mb5qyDs4Hwtsk+J+
s95W8ZCLx0K+JOR7YvdJza5bKz6/b2zKE5IOnPrkqfoW9cmTLv6mqeqBxDPx
Peb+cNZJ9b3TFL9N6budV9R9uzHuY/n+gD8n+USTnoH6DSm9gkV6P1o/1A3t
9zByVw9r/dzagN/DENn1PMHJ6Ifk/Fxn378JJ61DBXGfVS/pqZM03kjM/7+Y
iN+c4vAFswbGYXhF+RFB+lnaPgL/zEjin3gE/oVaB3Rv6biNhXodg/1hIeBR
2yLa+pts8ac/P2hePQQ93wyl53sGdTN56Q89P6LcXb0ubXuG4PRyxfs80bye
e5hX74Wnb+1jHnLx39OX3D2cWSUwPxl8vjQzJWW8TvlcEv9j82fgpZ1H6bOp
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
ceGhSb7v/STnP/8+jv8H2fNMDg==
    "], {{0, 164}, {223, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{313., Automatic},
  ImageSizeRaw->{223, 164},
  PlotRange->{{0, 223}, {0, 164}}]], "Output",
 CellChangeTimes->{
  3.6818203737027764`*^9, 3.6818204685511665`*^9, 3.6818205611197305`*^9, {
   3.681821211230321*^9, 3.681821219242324*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"AllEqual", "[", 
                 RowBox[{"Thread", "[", 
                  RowBox[{"Unevaluated", "[", 
                   RowBox[{"ImageDimensions", "[", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}], "]"}], "]"}], "]"}], "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.0009824`4.142803351629084","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 41, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      $CellContext`AllEqual[
       Thread[
        Unevaluated[
         ImageDimensions[{$CellContext`$ci, $CellContext`$di, \
$CellContext`$img}]]]]], "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
    HoldForm[True], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
    "AbsoluteTimeUsed" -> Quantity[0.0009824`4.142803351629084, "Seconds"], 
    "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
    Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6818203737027764`*^9, 3.6818204685511665`*^9, 3.6818205611197305`*^9, {
   3.681821211230321*^9, 3.681821219269373*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"$sfile", "=", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "~", "FileNameJoin", "~", 
   "\"\<relief-ps0.005\\\\afterFuseScene0.005000.bin\>\""}]}], "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VerificationTest", "@", 
   RowBox[{"FileExistsQ", "[", "$sfile", "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "this", " ", "might", " ", "takke", " ", "a", " ", "while", " ", "and", 
     " ", "or", " ", "crash", " ", "the", " ", "system"}], ",", " ", 
    RowBox[{"look", " ", "for", " ", 
     RowBox[{"(", "hidden", ")"}], " ", "assertion", " ", "error", " ", 
     "message", " ", "boxes", " ", "from", " ", "the", " ", "program"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"InfiniTAM`Private`deserializeScene", "[", 
     RowBox[{"$scene", ",", "$sfile"}], "]"}], "//", "AssertNull"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.681821456770869*^9, 3.681821487592347*^9}, {
  3.681821573682804*^9, 3.6818216469262567`*^9}, {3.681821678814064*^9, 
  3.681821680969742*^9}}],

Cell[BoxData[
 TemplateBox[{
  "LinkObject","linkd",
   "\"Unable to communicate with closed link \
\\!\\(\\*RowBox[{\\\"LinkObject\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"J:\\\\\\\\\\\\\\\\Masterarbeit\\\\\\\\\\\\\
\\\\Implementation\\\\\\\\\\\\\\\\InfiniTAM5\\\\\\\\\\\\\\\\x64\\\\\\\\\\\\\\\
\\Debug\\\\\\\\\\\\\\\\InfiniTAM5.exe\\\\\\\\\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"4711\\\", \\\",\\\", \\\"8\\\"}], \\\"]\\\"}]\\).\"",2,339,21,
   25635665966809844197,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.681821670975263*^9}],

Cell[BoxData[
 TemplateBox[{
  "Assert","asrtfr",
   "\"Assertion failed. Assertion test \
\\!\\(\\*TagBox[InterpretationBox[StyleBox[\\\"$Failed === Null\\\", \
Rule[ShowStringCharacters, True], Rule[NumberMarks, True]], \
InputForm[SameQ[$Failed, Null]], Rule[Editable, True], Rule[AutoDelete, \
True]], HoldForm]\\) evaluated to \\!\\(\\*TagBox[InterpretationBox[StyleBox[\
\\\"$Failed === Null\\\", Rule[ShowStringCharacters, True], Rule[NumberMarks, \
True]], InputForm[SameQ[$Failed, Null]], Rule[Editable, True], \
Rule[AutoDelete, True]], HoldForm]\\) which is False. \
\\!\\(\\*TemplateBox[List[\\\"$Failed\\\", \\\"\\\\\\\" was expected to be \
Null\\\\\\\"\\\"], \\\"RowDefault\\\"]\\)\\n\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"AssertNull\\\", \\\",\\\", \\\"CatchMessagesAndTypeCheck\\\"}], \
\\\"}\\\"}]\\)\"",2,339,22,25635665966809844197,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6818216709872785`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6818216710002947`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{869, 1021},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 132, 1, 144, "Title"],
Cell[CellGroupData[{
Cell[737, 27, 2869, 69, 354, "Input"],
Cell[3609, 98, 568, 8, 30, "Output"],
Cell[4180, 108, 26522, 712, 141, "Output"],
Cell[30705, 822, 12887, 271, 73, "Output"],
Cell[43595, 1095, 3812, 96, 392, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47444, 1196, 315, 8, 33, "Input"],
Cell[47762, 1206, 8661, 240, 72, "Output"]
}, Open  ]],
Cell[56438, 1449, 206, 5, 30, "Input"],
Cell[CellGroupData[{
Cell[56669, 1458, 274, 5, 50, "Input"],
Cell[56946, 1465, 8279, 232, 72, "Output"],
Cell[65228, 1699, 8316, 233, 72, "Output"]
}, Open  ]],
Cell[73559, 1935, 204, 5, 30, "Input"],
Cell[CellGroupData[{
Cell[73788, 1944, 1568, 37, 230, "Input"],
Cell[75359, 1983, 8773, 244, 72, "Output"]
}, Open  ]],
Cell[84147, 2230, 747, 18, 55, InheritFromParent],
Cell[CellGroupData[{
Cell[84919, 2252, 817, 21, 96, "Input"],
Cell[85739, 2275, 52780, 870, 238, "Output"],
Cell[138522, 3147, 85955, 1414, 245, "Output"],
Cell[224480, 4563, 8573, 242, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233090, 4810, 1098, 26, 111, "Input"],
Cell[234191, 4838, 572, 11, 41, "Message"],
Cell[234766, 4851, 949, 16, 41, "Message"],
Cell[235718, 4869, 79, 1, 30, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

