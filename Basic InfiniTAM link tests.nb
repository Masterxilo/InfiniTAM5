(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    312388,       6616]
NotebookOptionsPosition[    310103,       6539]
NotebookOutlinePosition[    310444,       6554]
CellTagsIndexPosition[    310401,       6551]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Basic InfiniTAM link tests, without the package", "Title",
 CellChangeTimes->{{3.681818007190426*^9, 3.6818180205201035`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "$exe", "=", 
   "\"\<J:\\\\Masterarbeit\\\\Implementation\\\\InfiniTAM5\\\\x64\\\\Debug\\\\\
InfiniTAM5.exe\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Quiet", "@", 
   RowBox[{"Uninstall", "@", "$exe"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetEnvironment", "[", 
   RowBox[{"\"\<NSIGHT_CUDA_DEBUGGER\>\"", "\[Rule]", "\"\<1\>\""}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"(*", 
    RowBox[{"causes", " ", "severe", " ", 
     RowBox[{
      RowBox[{"slowdown", "?"}], "/", "hangs"}], " ", "up", " ", "the", " ", 
     "application", " ", "when", " ", "there", " ", "is", " ", "a", " ", 
     RowBox[{"problem", "?", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"wants", " ", "to", " ", "attach", " ", "debugger"}], ",", 
        " ", 
        RowBox[{
        "but", " ", "cannot", " ", "manage", " ", "to", " ", "display", " ", 
         "the", " ", 
         RowBox[{"window", "?"}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"$infinitamLink", "=", 
  RowBox[{"Install", "@", "$exe"}]}], "\[IndentingNewLine]", 
 RowBox[{"LinkPatterns", "@", "$infinitamLink"}]}], "Input",
 CellChangeTimes->{{3.6818177658912067`*^9, 3.681817775734477*^9}, {
   3.6818181435106044`*^9, 3.6818181585103316`*^9}, {3.681818377222398*^9, 
   3.6818183859542847`*^9}, {3.681819762885234*^9, 3.681819770725006*^9}, {
   3.681819820585252*^9, 3.6818198413972483`*^9}, {3.681819894786908*^9, 
   3.6818199766220655`*^9}, {3.6818200594795*^9, 3.681820105999578*^9}, 
   3.682761823881876*^9, {3.682761901642807*^9, 3.6827619196885*^9}, {
   3.6827620429292183`*^9, 3.682762059836635*^9}, {3.68276211797281*^9, 
   3.682762118898381*^9}, {3.6827622656339226`*^9, 3.6827623205393844`*^9}, {
   3.6827623820997877`*^9, 3.682762413703456*^9}, {3.6827629133786745`*^9, 
   3.682762914191194*^9}}],

Cell[BoxData["\<\"J:\\\\Masterarbeit\\\\Implementation\\\\InfiniTAM5\\\\x64\\\
\\Debug\\\\InfiniTAM5.exe\"\>"], "Output",
 CellChangeTimes->{
  3.6818177784909334`*^9, 3.681817996932635*^9, {3.6818181481103477`*^9, 
   3.6818181627316155`*^9}, 3.6818183878326144`*^9, 3.6818185509082117`*^9, 
   3.6818186130687976`*^9, 3.68181875434118*^9, 3.6818188479550457`*^9, 
   3.6818188997346873`*^9, 3.681819772155817*^9, 3.681819946574535*^9, 
   3.6818199773920074`*^9, 3.68182007080162*^9, {3.681820106475169*^9, 
   3.6818201113792768`*^9}, 3.681821217608284*^9, {3.682761649163644*^9, 
   3.682761669875469*^9}, 3.682761747023009*^9, 3.682761794022628*^9, {
   3.6827618284058304`*^9, 3.6827618561945696`*^9}, 3.6827619479536915`*^9, 
   3.682762067210021*^9, 3.6827621242953625`*^9, 3.6827621785318747`*^9, 
   3.6827622802577953`*^9, 3.6827623250739594`*^9, 3.6827624388099675`*^9, 
   3.682762784994191*^9, 3.682762943062605*^9, 3.682763222944913*^9, 
   3.6827828697253895`*^9, 3.682783106409865*^9, 3.6828501182051888`*^9, 
   3.682850853305876*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LinkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               
               PaneBox["\<\"\\\"J:\\\\Masterarbeit\\\\Implementation\\\\\
InfiniTAM5\\\\x64\\\\Debug\\\\InfiniTAM5.exe\\\"\"\>",
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
             "]], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 4.337966249999999}, {
             16.96813, 4.337966249999999}, {16.96813, 5.047809999999999}, {
             14.98813, 5.047809999999999}, {14.98813, 8.29796625}, {
             14.163129999999999`, 8.29796625}, {14.163129999999999`, 
             4.337966249999999}}}]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              
              PaneBox["\<\"\\\"J:\\\\Masterarbeit\\\\Implementation\\\\\
InfiniTAM5\\\\x64\\\\Debug\\\\InfiniTAM5.exe\\\"\"\>",
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link mode: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["Listen",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Link protocol: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"SharedMemory\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  LinkObject[
  "\"J:\\Masterarbeit\\Implementation\\InfiniTAM5\\x64\\Debug\\InfiniTAM5.exe\
\"", 637644, 10],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6818177784909334`*^9, 3.681817996932635*^9, {3.6818181481103477`*^9, 
   3.6818181627316155`*^9}, 3.6818183878326144`*^9, 3.6818185509082117`*^9, 
   3.6818186130687976`*^9, 3.68181875434118*^9, 3.6818188479550457`*^9, 
   3.6818188997346873`*^9, 3.681819772155817*^9, 3.681819946574535*^9, 
   3.6818199773920074`*^9, 3.68182007080162*^9, {3.681820106475169*^9, 
   3.6818201113792768`*^9}, 3.681821217608284*^9, {3.682761649163644*^9, 
   3.682761669875469*^9}, 3.682761747023009*^9, 3.682761794022628*^9, {
   3.6827618284058304`*^9, 3.6827618561945696`*^9}, 3.6827619479536915`*^9, 
   3.682762067210021*^9, 3.6827621242953625`*^9, 3.6827621785318747`*^9, 
   3.6827622802577953`*^9, 3.6827623250739594`*^9, 3.6827624388099675`*^9, 
   3.682762784994191*^9, 3.682762943062605*^9, 3.682763222944913*^9, 
   3.6827828697253895`*^9, 3.682783106409865*^9, 3.6828501182051888`*^9, 
   3.682850855037037*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"InfiniTAM`Private`createScene", "[", "voxelSize_Real", "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`getSceneVoxelSize", "[", 
     RowBox[{"id_Integer", "?", "NonNegative"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`serializeScene", "[", 
     RowBox[{
      RowBox[{"id_Integer", "?", "NonNegative"}], ",", "fn_String"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`deserializeScene", "[", 
     RowBox[{
      RowBox[{"id_Integer", "?", "NonNegative"}], ",", "fn_String"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`countVoxelBlocks", "[", 
     RowBox[{"id_Integer", "?", "NonNegative"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`getVoxelBlock", "[", 
     RowBox[{
      RowBox[{"id_Integer", "?", "NonNegative"}], ",", 
      RowBox[{"i_Integer", "?", "Positive"}]}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`putVoxelBlock", "[", 
     RowBox[{
      RowBox[{"id_Integer", "?", "NonNegative"}], ",", 
      RowBox[{"InfiniTAM`Private`voxelBlockData", ":", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_", ",", "_", ",", "_"}], "}"}], ",", 
         RowBox[{"{", "__List", "}"}]}], "}"}]}]}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`meshScene", "[", 
     RowBox[{
      RowBox[{"id_Integer", "?", "NonNegative"}], ",", "fn_String"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{
     RowBox[{"InfiniTAM`Private`initFineFromCoarse", "[", 
      RowBox[{"idFine_Integer", ",", "idCoarse_Integer"}], "]"}], "/;", 
     RowBox[{"idFine", "\[NotEqual]", "idCoarse"}]}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`computeArtificialLighting", "[", 
     RowBox[{
      RowBox[{"id_Integer", "?", "NonNegative"}], ",", 
      RowBox[{"dir", ":", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "_", ",", "_"}], "}"}], "?", 
        "InfiniTAM`Private`numericVectorQ"}]}]}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`estimateLighting", "[", 
     RowBox[{"id_Integer", "?", "NonNegative"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`buildSphereScene", "[", 
     RowBox[{
      RowBox[{"id_Integer", "?", "NonNegative"}], ",", "rad_Real"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`renderScene", "[", 
     RowBox[{
      RowBox[{"id_Integer", "?", "NonNegative"}], ",", "shader_String", ",", 
      RowBox[{"poseWorldToView_", "?", "PoseMatrixQ"}], ",", 
      RowBox[{"InfiniTAM`Private`rgbIntrinsics", ":", 
       RowBox[{"NamelessIntrinsicsPattern", "[", "]"}]}]}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`processFrame", "[", 
     RowBox[{
      RowBox[{"doTracking", ":", 
       RowBox[{"0", "|", "1"}]}], ",", 
      RowBox[{"id_Integer", "?", "NonNegative"}], ",", 
      RowBox[{"InfiniTAM`Private`rgbaByteImage_", "/;", 
       RowBox[{
        RowBox[{"TensorQ", "[", 
         RowBox[{"InfiniTAM`Private`rgbaByteImage", ",", "IntegerQ"}], "]"}], 
        "&&", 
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"Dimensions", "[", "InfiniTAM`Private`rgbaByteImage", "]"}],
           "]"}], "\[Equal]", "4"}]}]}], ",", 
      RowBox[{"depthData_", "?", "NumericMatrixQ"}], ",", 
      RowBox[{"poseWorldToView_", "?", "PoseMatrixQ"}], ",", 
      RowBox[{"intrinsicsRgb", ":", 
       RowBox[{"NamelessIntrinsicsPattern", "[", "]"}]}], ",", 
      RowBox[{"intrinsicsD", ":", 
       RowBox[{"NamelessIntrinsicsPattern", "[", "]"}]}], ",", 
      RowBox[{"rgbToDepth_", "?", "PoseMatrixQ"}]}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`assertFalse", "[", "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"InfiniTAM`Private`assertGPUFalse", "[", "]"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6818177784909334`*^9, 3.681817996932635*^9, {3.6818181481103477`*^9, 
   3.6818181627316155`*^9}, 3.6818183878326144`*^9, 3.6818185509082117`*^9, 
   3.6818186130687976`*^9, 3.68181875434118*^9, 3.6818188479550457`*^9, 
   3.6818188997346873`*^9, 3.681819772155817*^9, 3.681819946574535*^9, 
   3.6818199773920074`*^9, 3.68182007080162*^9, {3.681820106475169*^9, 
   3.6818201113792768`*^9}, 3.681821217608284*^9, {3.682761649163644*^9, 
   3.682761669875469*^9}, 3.682761747023009*^9, 3.682761794022628*^9, {
   3.6827618284058304`*^9, 3.6827618561945696`*^9}, 3.6827619479536915`*^9, 
   3.682762067210021*^9, 3.6827621242953625`*^9, 3.6827621785318747`*^9, 
   3.6827622802577953`*^9, 3.6827623250739594`*^9, 3.6827624388099675`*^9, 
   3.682762784994191*^9, 3.682762943062605*^9, 3.682763222944913*^9, 
   3.6827828697253895`*^9, 3.682783106409865*^9, 3.6828501182051888`*^9, 
   3.6828508550410423`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VerificationTest", "[", 
  RowBox[{
   RowBox[{"Quiet", "@", 
    RowBox[{"Check", "[", 
     RowBox[{
      RowBox[{"LinkReadyQ", "@", "$infinitamLink"}], ",", "$Failed"}], 
     "]"}]}], "=!=", "$Failed"}], "]"}]], "Input",
 CellChangeTimes->{{3.681818049348074*^9, 3.681818088625103*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{
                 RowBox[{"Quiet", "[", 
                  RowBox[{"Check", "[", 
                   RowBox[{
                    RowBox[{"LinkReadyQ", "[", "$infinitamLink", "]"}], ",", 
                    "$Failed"}], "]"}], "]"}], 
                 RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                 RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}]}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.0010013`4.151079213997368","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 72, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[Quiet[
        Check[
         LinkReadyQ[$CellContext`$infinitamLink], $Failed]] =!= $Failed], 
    "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True], 
    "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.0010013`4.151079213997368, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0.01599999999996271, "Seconds"], "MemoryUsed" -> 
    Quantity[48, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.681818065758559*^9, 3.6818180907907906`*^9}, 
   3.6818185513407516`*^9, 3.6818186135253844`*^9, 3.681818754803739*^9, 
   3.681818848415603*^9, 3.681818901052333*^9, 3.6818197726403975`*^9, 
   3.681820111854885*^9, 3.6818212181729884`*^9, {3.6827616506472197`*^9, 
   3.6827616705688295`*^9}, 3.682761747694928*^9, {3.6827618341476254`*^9, 
   3.682761856819609*^9}, 3.682761948420822*^9, 3.6827621288802543`*^9, 
   3.682762182617005*^9, 3.682762286458396*^9, 3.682762333351801*^9, 
   3.6827624394818897`*^9, 3.6827627855567074`*^9, 3.682762943640772*^9, 
   3.6827632234917936`*^9, 3.6827828854269915`*^9, 3.682783109569811*^9, 
   3.6828501208975434`*^9, 3.6828508551081257`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$scene", "=", 
   RowBox[{"InfiniTAM`Private`createScene", "[", "0.004", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6818182117117634`*^9, 3.6818182467544947`*^9}, 
   3.682782905803446*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"VerificationTest", "@", 
  RowBox[{"IntegerQ", "@", "$scene"}]}], "\[IndentingNewLine]", 
 RowBox[{"VerificationTest", "@", 
  RowBox[{"NonNegative", "@", "$scene"}]}]}], "Input",
 CellChangeTimes->{{3.6818182582158213`*^9, 3.6818182783089013`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"IntegerQ", "[", "$scene", "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0``7.150514997831988","\"s\"","seconds","\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 73, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      IntegerQ[$CellContext`$scene]], "ExpectedOutput" -> HoldForm[True], 
    "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
    "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6818182548736534`*^9, 3.6818184868582377`*^9, 3.6818185519655333`*^9, 
   3.68181861415417*^9, 3.6818187554315376`*^9, 3.6818188490414004`*^9, 
   3.681818901714156*^9, 3.6818192886522055`*^9, 3.6818197732731876`*^9, 
   3.681820112540745*^9, 3.6818212188037763`*^9, {3.682761651334747*^9, 
   3.6827616706625834`*^9}, 3.6827617483036437`*^9, {3.6827618373958225`*^9, 
   3.6827618574416*^9}, 3.682761949030225*^9, 3.682762132833541*^9, 
   3.6827621845545683`*^9, 3.682762287117186*^9, 3.682762334258089*^9, 
   3.682762440185026*^9, 3.6827627861817207`*^9, 3.682762944468915*^9, 
   3.682763224335577*^9, 3.682782888468789*^9, 3.6827829390208983`*^9, 
   3.6827831114261274`*^9, 3.682850122243223*^9, 3.682850856382717*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"NonNegative", "[", "$scene", "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.0010013`4.151079213997365","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 74, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      NonNegative[$CellContext`$scene]], "ExpectedOutput" -> HoldForm[True], 
    "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
    "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.0010013`4.151079213997365, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6818182548736534`*^9, 3.6818184868582377`*^9, 3.6818185519655333`*^9, 
   3.68181861415417*^9, 3.6818187554315376`*^9, 3.6818188490414004`*^9, 
   3.681818901714156*^9, 3.6818192886522055`*^9, 3.6818197732731876`*^9, 
   3.681820112540745*^9, 3.6818212188037763`*^9, {3.682761651334747*^9, 
   3.6827616706625834`*^9}, 3.6827617483036437`*^9, {3.6827618373958225`*^9, 
   3.6827618574416*^9}, 3.682761949030225*^9, 3.682762132833541*^9, 
   3.6827621845545683`*^9, 3.682762287117186*^9, 3.682762334258089*^9, 
   3.682762440185026*^9, 3.6827627861817207`*^9, 3.682762944468915*^9, 
   3.682763224335577*^9, 3.682782888468789*^9, 3.6827829390208983`*^9, 
   3.6827831114261274`*^9, 3.682850122243223*^9, 3.6828508564177604`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VerificationTest", "[", 
  RowBox[{
   RowBox[{"InfiniTAM`Private`getSceneVoxelSize", "[", "$scene", "]"}], ",", 
   "0.004", ",", 
   RowBox[{"SameTest", "\[Rule]", "ApproximatelyEqual"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682782898624467*^9, 3.682782961547019*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{
                "InfiniTAM`Private`getSceneVoxelSize", "[", "$scene", "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["0.004`",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["0.004000000189989805`",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.001001`4.15094907531131","\"s\"","seconds","\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 75, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      InfiniTAM`Private`getSceneVoxelSize[$CellContext`$scene]], 
    "ExpectedOutput" -> HoldForm[0.004], "ActualOutput" -> 
    HoldForm[0.004000000189989805], "ExpectedMessages" -> {}, 
    "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.001001`4.15094907531131, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[48, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.682782930595381*^9, 3.6827829623720493`*^9}, 
   3.682783112287202*^9, 3.682850122342347*^9, 3.6828508564578114`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VerificationTest", "[", 
  RowBox[{
   RowBox[{"InfiniTAM`Private`countVoxelBlocks", "[", "$scene", "]"}], ",", 
   "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.682782978025591*^9, 3.6827829809842844`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{
                "InfiniTAM`Private`countVoxelBlocks", "[", "$scene", "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["0",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["0",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.0010013`4.151079213997368","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 76, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      InfiniTAM`Private`countVoxelBlocks[$CellContext`$scene]], 
    "ExpectedOutput" -> HoldForm[0], "ActualOutput" -> HoldForm[0], 
    "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.0010013`4.151079213997368, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.682782981271643*^9, 3.682783002500145*^9}, 
   3.682783113301468*^9, 3.682850122383399*^9, 3.6828508564988613`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$img", "=", 
   RowBox[{"Import", "[", "\"\<ExampleData/rose.gif\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6818182991429105`*^9, 3.6818183007489014`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"InfiniTAM`Private`processFrame", "[", "\[IndentingNewLine]", 
   RowBox[{
   "0", ",", "\[IndentingNewLine]", "$scene", ",", "\[IndentingNewLine]", 
    RowBox[{"ImageData", "[", 
     RowBox[{
      RowBox[{"SetAlphaChannel", "@", "$img"}], ",", "\"\<Byte\>\""}], "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"1.", 
     RowBox[{"ImageData", "[", 
      RowBox[{
       RowBox[{"ColorConvert", "[", 
        RowBox[{"$img", ",", "\"\<Grayscale\>\""}], "]"}], ",", 
       "\"\<Real\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"1.", 
     RowBox[{"IdentityMatrix", "@", "4"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.", 
       RowBox[{"{", 
        RowBox[{"200", ",", "200", ",", "100", ",", "100"}], "}"}]}], ")"}], 
     "~", "Join", "~", 
     RowBox[{"ImageDimensions", "@", "$img"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.", 
       RowBox[{"{", 
        RowBox[{"200", ",", "200", ",", "100", ",", "100"}], "}"}]}], ")"}], 
     "~", "Join", "~", 
     RowBox[{"ImageDimensions", "@", "$img"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"1.", 
     RowBox[{"IdentityMatrix", "@", "4"}]}]}], "\[IndentingNewLine]", "]"}], 
  "~", "VerificationTest", "~", "Null"}]], "Input",
 CellChangeTimes->{{3.6818195602212305`*^9, 3.6818195787123165`*^9}, {
  3.6818201342838907`*^9, 3.68182013751993*^9}, {3.681820290626067*^9, 
  3.6818202974926577`*^9}, {3.6818203989652996`*^9, 3.681820400833645*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"InfiniTAM`Private`processFrame", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                  RowBox[{"1.`", " ", 
                   RowBox[{
                    RowBox[{"\[LeftSkeleton]", "14", "\[RightSkeleton]"}], 
                    "[", "4", "]"}]}]}], "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["Null",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["Null",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "2.3819903`7.527454986437585","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 77, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      InfiniTAM`Private`processFrame[0, $CellContext`$scene, 
       ImageData[
        SetAlphaChannel[$CellContext`$img], "Byte"], 1. ImageData[
         ColorConvert[$CellContext`$img, "Grayscale"], "Real"], 1. 
       IdentityMatrix[4], 
       Join[1. {200, 200, 100, 100}, 
        ImageDimensions[$CellContext`$img]], 
       Join[1. {200, 200, 100, 100}, 
        ImageDimensions[$CellContext`$img]], 1. IdentityMatrix[4]]], 
    "ExpectedOutput" -> HoldForm[Null], "ActualOutput" -> HoldForm[Null], 
    "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[2.3819903`7.527454986437585, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0.016000000000076398`, "Seconds"], "MemoryUsed" -> 
    Quantity[184, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.681821219047098*^9, {3.6827616522254295`*^9, 3.68276167100082*^9}, 
   3.682761748647406*^9, {3.68276184192892*^9, 3.6827618578166337`*^9}, 
   3.682761987593198*^9, 3.6827621756013594`*^9, 3.6827622444449167`*^9, 
   3.6827623226207347`*^9, 3.6827623989910707`*^9, 3.6827627662057323`*^9, 
   3.682763113247207*^9, 3.6827632247262325`*^9, 3.682782985833338*^9, 
   3.682783124555517*^9, 3.682850124460992*^9, 3.682850858975955*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VerificationTest", "[", 
  RowBox[{
   RowBox[{"InfiniTAM`Private`countVoxelBlocks", "[", "$scene", "]"}], ">", 
   "1000"}], "]"}]], "Input",
 CellChangeTimes->{{3.682783131022591*^9, 3.6827831455917797`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{
                 RowBox[{
                 "InfiniTAM`Private`countVoxelBlocks", "[", "$scene", "]"}], 
                 ">", "1000"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.0010178`4.158177444369265","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 78, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[InfiniTAM`Private`countVoxelBlocks[$CellContext`$scene] > 1000], 
    "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True], 
    "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.0010178`4.158177444369265, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6827831316173334`*^9, 3.6827831468483477`*^9}, 
   3.6828501245531073`*^9, 3.682850859087093*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$rgbImage", ",", "$depthImageData"}], "}"}], "=", 
   RowBox[{"InfiniTAM`Private`renderScene", "[", 
    RowBox[{"$scene", ",", "\"\<renderColour\>\"", ",", 
     RowBox[{"1.", 
      RowBox[{"IdentityMatrix", "@", "4"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.", 
        RowBox[{"{", 
         RowBox[{"200", ",", "200", ",", "100", ",", "100"}], "}"}]}], ")"}], 
      "~", "Join", "~", 
      RowBox[{"ImageDimensions", "@", "$img"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6818202823347125`*^9, 3.681820286101398*^9}, {
   3.6818203297408934`*^9, 3.681820337911105*^9}, 3.6818212162075357`*^9, 
   3.681821579615226*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"$ci", "=", 
  RowBox[{"Image", "[", 
   RowBox[{"$rgbImage", ",", 
    RowBox[{"ColorSpace", "\[Rule]", "\"\<RGB\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"$di", "=", 
  RowBox[{"Image", "[", 
   RowBox[{"$depthImageData", ",", 
    RowBox[{"ColorSpace", "->", "\"\<Grayscale\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"VerificationTest", "@", 
  RowBox[{"AllEqual", "@", 
   RowBox[{"Thread", "[", 
    RowBox[{"Unevaluated", "@", 
     RowBox[{"ImageDimensions", "@", 
      RowBox[{"{", 
       RowBox[{"$ci", ",", "$di", ",", "$img"}], "}"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.681820342602934*^9, 3.681820373271242*^9}, {
  3.681820417302204*^9, 3.6818204681777153`*^9}, {3.681820553296979*^9, 
  3.68182055984315*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvduyLL9R/9kRMxe+5IILLrjo2UH8w+EgCDA2NmBwscz5tDHYgGHwv1j4
/LPNK9Sj9MU8SL3JrEfgEYbw0ieZ/lZrp6ollVTdlRE7MvZSK5VKqVSqPP5f
r//599//P06n0//z3//+3//+93+eMuHtP4e09u/exl5/YPzpcBMnj++1v97G
qfx59Kdv38ap9IfPhps4lz9g/MFwExeTb+X28T9u41L0h+/fxqXoTz++ja39
r2/jUvtz/s5tXGp+b9+PYPr/2W2cOr85PA+Kbf3G23ir/Tn/223c+vkx+Nxw
Eyc/f9+7jU3+P76NbX//421cbH5O/7cfRjDr94+3sfH/x7dxKf685+P8ehub
/P/uNt5s//3qbVx7fT0oNb/z929j218Onn54GyefX9+6jVPlN/3rcBO3Pp+K
tZ9v4+Tzzbkfnf/jNrb28Ta29a8k/wPKwPDN4SZOff6Gf7qNU9ff2z/e/su+
32c+P7233/v8GXjr75zf3vnvYe/9E4PN7pd3Qu37Q/L3n3N/8u5f937fJL+/
nfund3/17r+5/Hn9vfu/9/3gfX9449/7/ePBo3w/eueX9/3tgvN8uPoDh3+v
vZb+A/D0N57+597xbf0q669q699qt997P0qFXP3tvfrjZP5fh5u4mHzv1N8b
3Gk/2Op+c/734SZu/f4Axh8NN3Hy/gvnveLk8/Vbt3Ev65fb/977N3AJ+0Xx
VvvnHMG0XyLYnu8ITv1+mSLY3l8RbPsrglP5qz1/j7/a8z/o59HPXd/a+8ej
3/v8PNz7/LzxvXZv/Nr8ebi1fGrz11p+B//7nl/v8vHaa+PW8u19fe4Fr38y
/V8ZbmJbxx9d41m+H8fX27iX/f3o7a2fj9z22vjZ18fDUwTvRT6t5/fo/Ofy
l8t/a/nlrm9r+YwRXGp8D3vj9z6/3PFbz8+jP0TwQX8b+rn75xzBqfRrz9/D
teefy583/9r8nSJ4q/VtPT93/X4ewYnyyV1/T76efLz+90Lq+uXKx1sfb/61
+fPo566vN//W9FvL131+K9OvLX9Pfh793PXJpd96frn74xi/7vheuzf+o/PX
en1r89/7/I75122vLb/a7bnYk48HM3ELPwm//8m6/rkwvw5XeHq9Hn8UPOj8
vnYb97I/c9v3jls/X7ntrdc/d39MEfwo8nv0+beeXy7/Hn+5/O+dv9rre4z/
6fHHCO5l/Nbz8+gPEVxKfrX3h4dz1ydXPrXln0u/tXzPEZw6/0fnz1vfXP5O
EZzKn4e9/Zc7P2/9vPlVl09j+2EMrN2Jf83lz5Nv7vrW5i93/+bSrz3/g34e
fW99a9P35uftz1z55dJvPb/c9dv7+Ln8eeP3Lp/W8jv4r8t/7/PrXT657bm4
tXxrr08MktuJqyN/4i9f07e8bX8Z2r8h4/9uwEPAX0njrxS03p+57a33197b
c3Hr9e99f3h4iuC9yKf1/A7+6/Kfy19r+bWWT+vxxwjuZfze51d7/TycK7+D
/qfpDxGcur7e/sylX3v+5wg++HvHuevrze8Uwcnzy7Rv1Z6ft36t5ZPbPxe8
/enxlytfb3/k8uftH2//9T7/XPre/A/6efTd5ztzfT36vc8v9/nz2mvPr/b4
reXfevxH5+/R+e99fq3n77Xn4try2bt8a7cPr7cx7TGw5+Ml/O7PA/4j6f+3
ge4/hN//VRp9D1L50/ydb5K/88Cfxq33Z+321ueL17739WstnymC9zL/1vPr
nf+989f7+nrj15ZP7vit5e+NP0ZwqfF7n99BP4++h3PpnyO41PM3RHAq/d7n
3zt/pwhO5S93fXufn4e9+bWWj9ffk48rXwe8+pce/dz55a6vx1/u+nv81Z6/
x583/4N+Xfq119ej783Pw7n0e5/fMX7f4z86fwf/dfmvPT+vPRfXnn9r+dSW
397l77XHwGsHpr97/9307fD7v02jXwwePD/no7e3xq3Pp73Lf+/y8fAUwb3M
7+D/sfk7xm87/hjBpcbvfX6t5XfQr0vfW99zBKfS9/gbIjh1/h6uPf/a/NWW
3ymCt+IvV/5ef29+7vp1Xl8vt78n3xiktueuf658vfXNlV8uf7nz9/irPf+D
fh793PWtvX88+t78PNy7/GrPr/fxc/nzxu9dPrXl1zt/rfl/9vn1Pv9c3Fp+
e18frz0GXnvvsNX+bL1+vbe3fr5qt+99f/Uuv73Pf+/zq81/bf6mCN6Kv9zx
c/lrLZ/W448RnDr+3ufXu/yGCD7ob0M/d/942KNfe/65/Hnzb81frvy8+Z0j
+JjfOz5FcLJ8GtsPPXwvpK5f7vw8+Xrzr82ft/9y93/t+efS9+afe348O/3c
/VN7f9aWX+3xPfqPPn5r+eeO/+j8ee25uDX/ufPL5b/3+bWef+/yay3/2ut3
L+T27wVa79+9t7fGrZ9vr731+tRev73Lb+/za71+tfmfIvhZ+Gs9vtf+6OO3
lv8YwVvRz51fbfntnf4Qwan0vfWtTT93f3rYo197/r3zd4rgrfjz1vccwXuZ
n9ffm19r+bj7O9N+6MLrcBOn0vewN7/c9c3lz1v/3P1be/7u/qk8/97p15ZP
a/q5+zN3/Nr0PXyMnze+1547fu/yeXT59c5/7/NrPf+9y6d3+dVunyKY9hh4
7Y8Ctfdv6/bW+2/v7bXxo6//s8tn7/OrzX9t/qYI7oW/2vJrLZ9nH782/TGC
S41fW36t6Xvy652+Jx9v/wwRXIp+a/nWnn9r/jz5nSN4L/x5/U8RvJf18/rn
yqe2fHMhl79c+Xrr62GPv9z94+3f3Ocv9/moPf9Hp+/Jvzb93PX16LeWn4d7
X79HH782f7nrf/CXh1vz31r+e59/7/LZu/xz12dy+p9+/Ta29geH3PU/8Kdx
6+ej9flQu7339eldPr3Pv/X69i7/R+dviuCt+Nv7+LnrX3v8MYJLjd96fq3l
9+j0a6/vEMGp9FvP36Pv8efN3+PvHMF74c9b373L35vfKYKT5fPg9fnuhdT1
y+XPWx9vf3j85e5vj7/c/Z+7v2rP/6CfR9/bP7Xpe/iY3zH+p8b32nPHP/ir
y19r/o/51Z1fa/nUlt/e5e/J59mh9foc7XntrXHt86u1fGvLv3f5PPv8WvN/
8Jc3/hTBx/hlxj/ml0d/jOCDfhn6Hs6lP0Rw6v6pPf9zBJfiz5t/a/5ay+8U
wan85cq/9/Xz5OP1z7YfVs7POX17uIlLrb8nH299vPWtzV/u/nPX18G1599a
vr3Tby1/b3616Xu49/l57bXn1/v4ufLvXT575+/gP4//1vOrPf9Hl0/v7bnr
c/rcbWztB2TBOXwvKS71fHi49vPttbd+Pnpv7319n10+red38P/Y/E0RvBV/
reXTevxc+efOr/b4temPEbwVfW9+vdNvLX8P59IfIrgX+Z4j+FH4y11fb37e
+j76/FrLx+t/iuBU+Xr9c8GTn8dfrnxz90dr/jzcev4H/br0a6+vR9+bX236
Hn708T36e5+/1547/sFfHn52/o/5993eWr61sTf/GNRu7wY+G25ik9/fhb9/
8xrb/AI+C06VT+v9n9veO859vlvLt/f127t89z7/R+f/2fnz8BTBW8mn9vit
5996/Nr0xwjeir43v4N+Xfre+no4l/4Qwb3M/9H5y11fb34ef978zhGcOr/c
/q3l01q+Xn8PhvA9rThV/rnzy12fXP5y6Xu49fz3Tj9Xvrn0a/Pv0c+dX236
e5+f1157frXHz+Wv9fgHf8/Nf+v59T7/3uWzd/nVbo9B7fZeYPrR8As8/vgd
DwHD//Cz0C7Y9pGT32T67DbuZf2P9k+318a552Nr+dSW397ls/f59c7/o/PX
evxc/lqPP0XwVvOrPX7v82stv9r8jxH8KPRby3eI4F7mn8ufhz3+cuXnze8c
wcf83vEpgkv19+TTWr654NHPfX497K1PLn+5z4e3f3PX1+OvNv3c+T87/dry
9+jnzq82/d7nt/fxvfba8q89/t75y+U/F7fmf+/z633+vcundXvr/ReD2u21
odj4P32nMwR8Dtjk69j3zhG81fPVO/b2f+vns3V7a/n3vj6PPv+9P1+9y781
f63H99qnCH6U8T1ce/ze59dafs9O35P/GMFb0W89/yGCU+l72Jt/Ln+58mvN
X678zxFcan6t5ePNL7e/J99TBJfqnwue/HOfX0++uftj7/z1Pv+Dfl363vrm
jt+afu74teX36OO3lv/e5VNbfgf/+55f7/Pfu/x6l78nnxh47c8C4/eGX+Dz
99/xKeBc+fXy/PTe3jv2nq/W8utd/r3Lb+/ze3T+Pf5q899afq3ls/fxc+U/
RXCp8WvT93Du+Af9uvS99R0jeCv6vc9/7/ydI3gr/rz+QwRvNb9TBKfOz8O1
5dNavl5/D8YfDDdx6vrlzi93fXrnr/X8Pezx15p+rnxb028t/0eXX+v57X18
rz1X/rn81R6/Nn+t5de7fFvLv/f5H/LZd/sQ8CiY9r1CL/xPPxx+gd8Cnvm/
w9+x/5+jvTa+RHAv8z/kkzd/j//a89u7/Fvz1/v6ThH8KON7uPb4e5/fo8uv
d/nk0vfmP0ZwKfnm0h8iuJf5Pzp/5whO5a/1/Lz+3vw8+ZwiOLW/hz355Pb3
1seTbwxS23PXL3d+3vq05q/1/D3s8deafq58H52+h3PHr00/V369z6/2+K3n
/+zyac1fa/k9uvxrt9fGrefXur02nv75Nk7mP/z+9J3r/9N+QB3w5Pso+7N3
3Pp8aN3+7PLNxZcI3sv8PP5rz693+e9dfr2Pn8tf6/lPEbyX+Xm49vyenX5t
+efS9+Y/RnAp+ebSHyK4l/nn8udhjz9vfh5/3vzOEdzL/HqXT235niK4VP97
odT6ediTb+7+yN3frfnz6Hv81Z6/R9+b/0G/Ln0P9z4/r732/Lx2j/6jzz93
/Fz+cvHe1+/R5Vu7vTZuPb/e5dO7fGPgtf8PhN99LuD/+vrK/gfUhNbP16O3
945by6d3+baeX+35XyK4F/49/mrz37t8W8uv9fhe+6PPf4rgreZXe/yDfl36
tdd3jOBU+t78Pfq159+aP4++x98Qwan8nSO4F/m1nl/t9Wu9/rXl6/W/F0qt
n8df7vrsnb/e5+/R9/g76Nel7+Hc8WvTz5Vf6/kd4+eNf/BXl/9cXJt/r702
bj2/Z5ePB63Hj0Fu/+1guMaHffEKtnqO9vp8Pnr7sT6fbn90+eTiSwT3wr/H
X23+H52/Y/y88acILjV+7fl5uPb8Dvp16eeur8ffGMFb0e99/nvnb4jgVP48
7PHXen5e/3MEp8rnFMFbybf2+njyvRdKrV/u/Lz1ac1f6/l72OPPo587/4N+
W/peu4eP+T33+Ln81R7/2flrzb/Xvnf+a89v7/P32qcIpv3849u41PPh9T9/
9o7HgE+fXbfHwGvfOzzL/Fs/H72fP8f5Vrf92eW79/nl4ksE98L/s/OXO34u
f88+/hTBx/wO+j3Q97BH3+NvjOBS88+lP0RwL/PP5c/DHn/e/Dz+9j6/1vI5
R3Cp/p58TxFcqv+9kCr/3P3jyTd3fzw7fx59j7+D/r7pezh3/Nr0vXaPfuv5
7X383vmrPX5t/g7+67bXxq3n17t8XPzzCA7tp6/extb/swimfwS89gPyYC/y
HQKfiuF/+NltTPsUwb083723945by6d3+e59fpcIPvgvw39t/nLH752/vY9f
W/615+fhKYJLjX/Q3zf93P3j8TdG8MHfNvwNEbwX/rz+5whOnZ+Hvfnlysfr
78knt3/t9fFg/I/hJi61fh5/ueuzd/5yn9/a8/foe/M/6Lelnzu+h599fsf4
dcd/dv56X9/a7b3Lv/f5715+/3Qb0z4EfBZs7f9yG9P+9PCV4R2/BPyFd/ws
8hnCflLM/Kfv3MZbvT8e/vk+ztem828tv9b8587Pe/5b89ea/73zd4xfd/wp
gkuN/+jzO+jXpe/hXPpjBKfS9+bv0a89/2fnb4jgVP5az8/r783Pk885glPn
l9v/FMGp8vFw7f73Qqn1y90/3vrk8pf7fLSev4dbz/+g35a+1+7h3PFr0+99
fI9+7/Nvvf657bm4Nn+9y6+2fHuf3zH/vPZcfPrX29jaHxQefX69wPiT4SY2
+X/zNn6U52vvuLX8e1+/1vN79vl7+BLBvfDXWr6t5Zc7fm3+ao/fev6117/1
/KYIPujvg76HPfoef2ME9zL/IYJ7mX8uf72v797n5/X35pcrH6//OYJL9ffk
6/W/F0qdDx725JO7P56dv9zn86D/2PRzx/dwLn2vvff5HeMf/LXkz2vPxa35
rz2/Y/5t8b2Q238z+KXhHf9ywKd3bPz/19ev/s7/rf3XAv6NgH9F+h/wSZiC
PU8x8psiuJfne+/te8et5ddavq3nV3v+vfN/ieCDvz74e/bxPfq547ee3xTB
pcY/6O+bvoc9+h5/YwQf/G3D3xDBW/HX+/zOEZza38O15eP19+RTu78Hw/eH
mzhV/h5/3v7JlW/u/vD4y30+j/kf9FvSzx3fw63pH+M/9vi1+fPaD/765r/3
+bWef2v56HM/SvvpH67x9PfS/vnb2Nr3DufhHYe8mNj5bH5fCvjrAcv8pyH8
/S+vf/8w8qkMxOsNAZ/UvveN2zi1fXTq9+0dtz4/j/O5bfujz793/h+dv0sE
b8XfMf6+x289vymCS41/0K9L38MefY+/MYKP+afxN0TwXvjrfX69y+ccwany
ye1/iuBS/T35xiC1PXf9c/eft765+6s1f7ny83Dr+R/069LPHd/Drem3Hn/v
8+udv9zxvfbW8tk7f7X5f/b59T7/3PZJ8Cjt90Ju/24Au2XMvof97/ORduL7
LM7vdN3eCFqPnwxfHt7xbwf8W+/Y+P9Nwb9+3T78+zuex/D//33dPob2IbTP
/3bdvvfzqTVufb7tff0eff57n9/B36fxJYJ7kU9r/nLHP+ZXd35TBJca/6Bf
l76HPfoef2ME9zL/1vzVll/v6ztEcKn+3vw87M0vVz5e/9ryqd3/HMG03wul
nj8Pe/PLXd/a/OU+3x59Dz/6/A/6n6Zfe/+0pu+1e/Rbz6/38b321uP3Lp/e
5ZfLXy4+5vfY8/ewPrejtHvwFuwiU7CTnP89rX8qfRdC3Nz0R4Ge2HemPw1/
/4uAvyz8fTXg3wv4f0m7B2q/0/ycO4fzj4Zf4LfvveNTWG/b38EeNn0n4H+4
bufvwz+F/2v8ZwRKtc8h38n0Gv7/3bTxgSH8Dnxynp/LyudL/x6jz9/nn1+3
T077gm6knb9fpP0s7WOknXHPTvsg7cr3JO2efGPnfaz/FPn9o57/x/zazq93
/rznqzV/rcevLZ/W43v0c8evPb9c+rnjTxF80C9D38Me/db7s/f5jxH8KPwN
EZzK397nV1s+5wguJV9PPrn9c9fH6+/B9OPhJk5dv9z9k7t/H50/j37u/m49
/4P+p+l77R793PE93Jr+MX7f43vtufjgr2/+avPf+/xaz793+cUgt30z8Oxv
XwyY+LAQj9cN/41h+MHwC3wJdtuTxLdNP3zH43+841ni41zAPhjsf4PYB08/
Df+Hj9eV9FtDkIvh13ds/Ad7tMWHSn7XGbkHu+pJ7JPEHQ7I8V+F/meBTrDT
zj+Udg+Uv5X271HG1/oSMbD9xfwDHsW+7PWfv3ONT9+57j99vI17OX97f3/t
fX4Hf/vm7xLBx/j7GL/1/Dz6ueNPEXzQL0Pfwx59j78xgnuZ/6Pz1/v6DhGc
yl/r+bWWT+3+5whOlW9ufw+mvx5u4lLrl7v/cp/v1vzlPj8efQ8/+vz3Tt9r
9+i33j+16R/jf7o9F+99/r3LpzZ/B//7nl/v828tnxjktu8dbH5an/DDcNU+
fTP8/W/D///kun0I9prhn9/xrPYvD0K9unOw6wz/sa7/mfp3wS4zForPtPZg
l5qJ75P5UXdvCuNfZPw37EXk4fy/r9unYF/CPvj2msb/3sHkF9bd4hcT7a+0
n39w3X9YGf/4JvGTap88BX/VmfjQxP2VC7Y//vQ2bv1eeZb3x8F/Xf5b83eJ
4EeRT+/z3/v4refn0c8df4rgZ6HvYY9+6/3T+/zHCH4U/oYITuVv7/N7dPnU
7u/JJ7d/DLx2wBvfW//c/Ze7vnvnrzZ9D3v0c5/f1vPPpZ87fm36uetbm37r
8VvPz2vvffze+as9/qPLr3f+W8/vmH9dHAOv/QBguMYSX2h5CyVOzuT7xwGT
n/QPr9vnf3zHxMWd/u66fQrxcRPxXd+T9p9dt0/aTl7Ob4f+37xuH0L/MfQf
pf8c5jNR/07jzz4E/KvXmPZzoD8EO9H4g+v2mfg/8oxq/Fjof8bOpO3B7nr6
y4DF/nMKdC9hXnNifBnAeNi1BrFPXoJ9cozYN2Ng8w/20Qt2NuGPfKnT3wR6
f7aOvgfDa6Af7LjkabX9Ef4/Cx/Gn+7v35P+wV54Cvtm/nYZ/h/lfH/091vv
/Pcu/9bj985f6/EvEdwL/dbjt55fbfpTBJcaP5e+hz36rde3d/mOEXzwl9Y/
l78hglP5q/18ePPz+nvzy5WP1/8cwanyad3/FMHWfieUev5yny8P752/3Oev
NX0P907f6987/73Tf/T16X18r7338Q/+6vLXmv/en4/a82s9/1z++P8oWNsH
wW/6+0h9rlqQSz+1/4z9JNh3zivzB47BfnQKdqXza1p/D1LHz6Yf7FMap5VM
/2vhd18J+Lev+w9BPpeIfRK75TnYx9R+NYd1sTyhK+MPY1BbvsWAvLG/GXDI
k7nV87ewr331enyre/kHAX9pJX/fCnQ+ht//+cr+lcE7/zg/J8Gp53Pv94vW
7/fU91tM/vr3rdcnd/1aj987f63Hb/181x5/7/PbO/3a67N3+UwR3At9D3v0
Pf7GCH4U/oYILsVf7/OrvX4e9uaXK5/a/XPlm9vfA60fMGv9gMz96fGXu39b
81f7+W49fw8f9J+bfu74tem3nt+jj++19z7+3vnrnX9vf3owvQw3Mf3JP6jY
xv/RbUz7+MPbOHV+MUhtv/z4Nk6VT+74uXAhv+KPr7HR/7WAP1zjYvxR3+63
Av71a/qD2Ne0PpfJXexAqeOTj3KgjpfkJ3wL9IgzOkl8E3FdQ6S+nMVFQV/i
r+6F1P6zxM9NEp+XCxPxX5H8iW+h/RTkMKh9LthDWN9S9jmA+MAp2P/m19v8
2TpH+I+1E/9GXONZ2qdc+y7PX6j7qPGJHkzC10niH0epW6j1EzWu8/QX68bv
HcjPihy0/qHFLQa74vQNaQ/P+ylS33CW99og7zfy4ypOfr53fr+pfv8gbjOi
HyGeWbG1f+s2zr1fGLwMN/FW69N6/7Qe39tfx/h54+99fgf9x6Y/RfBW9L3+
YwT3Mv/W/NWW3xDBqfx5uPf51ZbPOYK3kq+HPfnm9r8XSq2/1z/3+fSwx1/u
8+HR752/1vM/6PdNP3f82vRbz6/2+Lk4d/xc/lqPf/BXl79c7D1fxP8otvYI
0E68kNV3er3uP/3jbWz0/+g2tvY/uI1N/t+8jT3+twKLawl1lzW+5SJ5FdU+
EQObf8iLZ3kIRb//hl0r2L00fyD670nqxKWO3xqYH3p/tf95gF1l+JeART/s
wRTyE6JXXtgHImDrR/wd+SGF/0nyRp5E/z1/9/rvJ6l/hz0du5naL8m7eYnY
P7OB/R/2JfFkRj/kk8SvYKG/D+fFiX2u+R8D/SlCf8IueWf+TRe+Huj8bsAa
/xbqMVqc3O9ft9vzi5w0v+Zfhf7UlxukvXPgfOH5Wlt/0uzPwb6n9SPPsr4X
WV/qQpod9OPK8bE/k0f2Z9f9iW89Eef62XU766740e4nMfrkX1Vs8vmr29ja
g916Fmz0v3Mbl5Kvd39qLf/W+6P1+LX583Dr/VF7/L3P76Dflv4Uwb3Q733+
Hvboe/yNEZzKn9c/l7/W8xsiOJW/1utXu78nn1z51u5/jmDa74Wt9nfu89ma
v9rng4dr89eavocP+nn0c8evTb/2/HJx7fFz6fc+/0eXz8F/XnsMaEfvPwV8
lvidN+JLqJul8VlfFpyY/83aJS5mbXzMG3XBgl1D7VcWP4AdYaF/vo2T+Q/1
2BSn8r+Y/6+kjd8abP+FuDD08lPEvsS+mtS+FfTlU6AzO/Fnqv/3+MMePYR9
MK20752wLwa+50T7qAe1+ye3Y58KdiWtn+YB8VSnlf2t/ZcD/qWAPyf9Pwb+
YvbDv7z++ynRPmb7D/6JH/rKdf9J7Xdfk3bhC3tg8vqS1/PzAX+Q/thFovQD
vvf84fwM9rlJzkeeR+rznRLr5wFTeF547hb2t3De6T6w5z/Yr3k/zRLfOEl8
46T5Q73z1Rmf84v3oMYvn/7lGmt82iWCrf/rbWz9f34bb3V/IN41xh/nh9UZ
1efzN2/j6P3hyzK+2F3V/vro97fex++dv73P38Pe+ZI7fm36ted30P80/SmC
e6HvYY9+7/P3+o8R/Cj8DRG81fq2nl9t+ZwjOLV/7vPnYU++uevj9ffA6sEr
Tly/3P1Te/97uDZ/Hn0P137+W8+/d/nunX7u+LXp155fbfrH+HnjH/zV5W/v
/MfAa/cgt38yoLeOjH8O+leLM5T4gRl9IPbJ1+t201sHPfSwUn/tAvkv0W9K
/kvsExbnpPrRCFg7/EseSJvfS2iP2CfIb0hcp9Zfs7ygd+YndEHygp7+Vxr9
2vu39vgG7I/I/C2uj/hLjd/D/kL+u7//dPvSvn0fpMqHeCsbX+yrI3GtxP/8
4+127FAavzOFuFmLf9P44PBcWf49ia8jr6ydH/8i/XPhb6/50/jFN8nbOcn6
cb5hp1b70cBzG9onzX9I3CF1Aj9/3T6xPpH9FYPNzv/GQPws+26tf8BAfCFx
wP+0rn9ufkoPXyLYzp/PbuNS+8P2n2Dbn05+gN7vXwd/x/g1x89+vjPHr02/
9vz2Tn+K4Eehv3f5ejh3/rn8jRHcy/rm8jdEcC/r582vdv9c+bTuf47g1P4u
8P0ouJT8vf3j4dznuzV/uc9P7vObO/9c/vZOP1e+tennjl+bfu351aZ/jJ83
fuv1P/jrm38PezBofbCP6/rHgP4T+QMlDsraw3jEwRAPUGr86v3RSxLHofpH
4h/D/MfE/IGp7eSPtPiYzvKXekB+NuKUTsEOksr/HPYX9fcmie+h3eLwtF3q
ss1Sv8uFr4bfYT9R+20Earcng9gFsZcZfY1v0vg6h78z9kniuMR+xf8n4vCk
vtrpdwKWOLe97G+rq/n6jkvFf+bCbvZnYzhLfluNP7b4Us4v+f4/Ux8z7INZ
6tN6gH+K4lL3g0sEp/J3pm6i4GLvt5/fxr3c/3q/n7YeP5e/Y/y69L3nP3f8
2vRrz682/SmCH4X+3uXr4dz5jxH8KPwd8/t0/yGCU+eXK5/W8m3dPwZeu/4u
hnP3jze/3PXJff5a89f7/D36uf17p19bPr3Tz90/Xntt+sf4+x7/4K8uf63n
Vwtq068NHv+0U3+JPJRvmj8y6DMn4nDEfuRCiJcxO9fHlf1DPkzsJ2vrX+XC
RH3BoP8eVtZ3G8l79/qOJ7GvnYPctY4e7Yvxtf4T+VmxX0t9p4V97gvr+I9B
7f7WTt1H4sMS80OW2h/kKxzI86j2K/LurbTPtT6/Wq9/KfpDsCfx/Kj/AfZc
y7Oo9QPJS0v8mZxPU3h+Lc5U66+GeGHbB4Xs36lwFvuqni+cJ5PUgSy1/rwX
OJdOcn7Z+wP7mOb/ge+A8UMw/qATsX/hX6PY2ofbuNT8x59dY82veYEPwb3c
33q/X7bm7xh/3+N7+BLBpcZ/dPq547em33r/TBG8Ff3e5+/1HyM4lT8Pt+av
9/nVlk9t+Q4RvFX/cwSnytfr74GXv8Ljv/b+8XBt/nKfr975652+1//Z6fe+
vl57bfrPPn4ubj3/3uWzd/5655/8duRvmxPjx3LBo2/twR5gdq4QB5HLX+v+
5WB4R/fW13oJv/uDgKW+kQfUx3vDfib2y4u0a30s9P3EFRKnZfuUuDriILV+
4nev/675JU0/H6vvdSe07p8KQ4gPwr45S/1DyytCflax3wzBnmHxkxo/y7oR
X6vxddhFfyNgza9K3tFfC1jzu8rfiRO09i84/e+E5PNp50D9PPJ6DmLfnsP6
nkLdurX1F58ewvNGHPWs/gN31mdNlj9+HYyv9tVfv42t/fO3se4Pxan8Yde7
BDwVjj9sfb/K5e/itFtcs+Ctzq+LrN9lZ+uXS//Zx/fwJYJ7oZ/6/D0r/b2v
7xTBqfT3zp9HvzZ/YwT3Mj+Pv9z+3vyGCN5KPnuXb+3+HuC3qriU/L31r/18
e/1r85e7/3vn76D/3PS99tr0W4+fi4/x88Z/dv4enX/yFWIHGTrJD3dAXchd
31L7YwzxjxfiUlbal7EfEiem+U0tbx7xMVLfaqKuIfYttV8QVyZ2pFT+yOd5
CvGBJ9XvZwLxNqfXd6z116ifOMXsex79cC4Q9zn9rfRX+6DI703i9nT+Wlfv
pPk/I5DMf7A3mv36t9PoF4MQH0adw0X8LPUPyaMr+vkp7Gvs4qXz61p9UtZJ
6F+E/yExfq3U+s3krXwNfGp9OvJbhnatz+jBIPlnT4n2EQPJK3v6i+v+PC/Y
Rxf1Hx3QvM4q/yk8zzxfi/qqwR5P3daT1G8dsN9in1P77rdu49T1PQf/oTng
y/dk/BBPOArey/3tEvAoONb+9vPb7Sd+J+1z+D9y0vyr90Lq+l3Cc8/zf5b8
BB5cYnKQvysutX659Gvvn9r0W4/vYW99DvrPTX+K4FLPd2v+cum3ll9r/sYI
3sv8vP7e/HL7e/IZIngv/c8RnLo+90Kp9cvdP7n7f+/8efRz++99/gf9uvS9
9tr0W4+fi4/x88bvnb/W+NH5f3ZAr30KdphJ9e/ngKXOmLV/MWDikwrV/7L+
EvcEP3tZv0HyXk5Bzw3/6A+R/yD6aQ8m8k5G7EvovweJE7T2YF8iP6fGL7nj
a/7CtfnrXsLvQtzc6Utp/Y1/sRueRL4Wt4idQeoXnomPFDnY+H8Y8FcC/q3r
9lniIqeV9THJr0rc51r57x0GsSul5k9tDb3zZ0DcYXgudf/avsaOv9J+78Eg
z9+ifqQD2FsnybNLf7OPBzvlSZ9f6mL+UsBSH/Mt2EepAzlq/T+xD05iH/RA
7Yd6/mK/ugju5X51Qc6C7XxFLt+4xrWfj9T3Q6vxUwH/ATD70Oj/8W2s66PY
9s9PbuPU/r1/P+TSbz1+6vMXXd+Dftf0pwguRX/v8987f2MEp/Ln4Vz+Ws8v
t/8Qwanz27t8W/e/F1LHz30+vP656/Po/OXSz+1fm37t+fdO32uvTf/R55eL
j/Hbjn/w1xZ7/F0imHYv/5fFLRHf8jvSP+gnzT4j8QkxsHlIfsVFfrBGkDo+
8TZDbP7Ef3zr+nel5kf9OOpDnTT+ivX73YAT45O2kv9bsN9gx5ulvtSF+DPy
e8r8zqGd/LGD1Mcanfg8q68VyR9K/NJAHJXEv6H/juUXpZ04wUV9xZeAg91x
8/X5+E4HuxvPudH32j3+xG6wyC8odml+b+sf5E8c26zxYeRlxU4s9o1R49/U
vvkaMPGD0p4LF+pDkif24zX94bNrPjR+b2J/royP88DoY9fCjiX1IzlfiMtR
/waL++L9oPYx/B7YByenXexLtWGU+MSpcPxjDEo935O+fwvvX8vvLHmejT75
PcN7e1oZv3cvlJqfvTc4XyS++434wnB+Ewdq+z88vxaH+4Pr9kHqyur7iXos
l0h9XnvvSJx08v2K+oyB71nG9/rfCyafkLeZOPhFfuba4//5bWzvhwi29fmn
29jaf3Yb7+X7pDZ97/vj2ee3d/pe/9r0W89/iuBU+gd/n+bP6z9GcCp/uf09
nDu/vctniOBe+nvyPUcw7fdCKv+190/u853LX+7z1Tt/ufS9/o9OP1e+rfmv
vX9ayy8XH+O3Hf/gry3O5e8Swfa7n0RwaDe9/kvAXxP+yMu30r63GXwY3nGs
Plfn8BbsV+fXd3xS+1fQT6OnVPsT7ej3TtJ+0vyTX5H2GF+Z8rP9E/SfZ/Tr
yj/2MfIQ/u/rdtOPoscU/eyZ/Rz0tNhZrD/9sJ9o/lmxb6j8NL+l2h89sHGJ
rylkvykFzMviJ7fmT+xbWj/xLeRvhc9U+wKA3Zc4Ko0/eqMuOnp2zT/aCLYa
3/L/8fyJfpu4V8szuTY+Ndi7eY8s6jd2CrXPR4M7z+dkCM81/ie6v7GbW5zd
2vykEdjq/YJdHz+kIdF+a/3xLwnvj/PK/ND8nveGnp/UYyFvsp5v94Lxj/0e
/5GV8d/3tnuQ3F/sgov4ZSf+9F6w/sSrhnvCLPZbDw7736ex932SO35t+rXl
t3f55NKvvX+mCE6lv3f+PPq1+RsjeCv59T6/IYK3Wv/W+8fr78m3dn8P8PdV
XEr+3vq3Xp/a/OWeD63583Dv9L3+vdPvXf5ee236rcfPxcf4bcffO3+983+J
YGv/yTUexb7nglN/bJb6QBofgd8/eq3pb1aOnwua3/KDjB/8zy3/k+iX8MtH
j6j1qTyw+cfqO4n9Tu17o8TvTWqfEv40fsiFsJ4WX7XSPop+dIjYv7Ann4hz
kvgF4peozzSpfc6x79E+hPZTon42dX6mn71Xvho/mzh+7vNRir7Z9yP5I1lv
s9+sjO8lPyd5VE8i31z73r2w2flUG4irjMVnRaD1/syF1vMrBRZ//PqOt45/
n17COMRvfjltfGsPzzN+QaXju3gfapxj7fVPlj95VbHjin2c953NQ+8XId5b
7zG97E/4ZZ5r8zPHoNT6cK8izvsk/kPkpbb80Hp/EbvfZa39L/P+n/t90Xr8
3O+X1vS99t7p713+UwSXot87fx792vx5uDV/YwTvZX5ef29+uf1ry3eI4L30
vxd62T+5+3/v/Hn0c/vvff7PTt9r3zv91uPn4mP8tuPvnb9c/lvjUfBZ2vHX
t/iLv75u94B8Vfglaf7DvYPltQp6nUnqF2neq0V9PgcG7B7BrqnxQzP+4+QP
E/ud5f3DTpgYX6Trb37yifkXAeLpiHtbxHeRFzTofdFD2v4k/o06a2J/s/pj
kfpw5Ns6SZ5Aa6c+ldhpk+eHfYk4DNGfz6+hnTgY0b+Sl5P9kxqfYfPHPon9
Suy75K0kT16q/hqw+nycA2vjryKQOr8LdtsgP7XfYZe1drH/m92Q9ZX44tpw
Cetj8bUr44NOXw0YP4lfTevfC1APi/jWxf6X/Jfzyv1JvTfs8qnxV8kgdmfW
w+hTvzPsq9OvSzt+LZH8sjGg/SznCuew9Q/5TqnbqvvD6odiv0rMz5nbDmAX
4f13Evv6W4j/1DzH2k6cuubHHIL9nnNY46+n0B8/koV/R3i/4Cdwkv7wNX7v
dnt1oK5qyHvOOdDL838mPyn7VN8/d0Kx+XH/kTzotfe/7U/J38p9UJ9Pe07F
Plj7+yeXfuvxW9O/RPBBvwz9KYJL0d/7/PfOX+769j6/MYJT+cvtP0RwKfl6
8snt33p9cvvHILXdG7/285Er30fnL5e+1782/dbz752+1753+q3Hz8XH+G3H
P/jrG48BD/D/8+t2yz+IHvX70u4A9ifsHFq/zIWX999ZHqnfl/7YTYL+s3T9
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
X7n+7vhOu8bfaf7OSeNf1+ZfRG7szy+s659rf8ttvxfoj34d/4NZ4seIS2tV
P/VesPen6NfX+k9wbtpzqPLnvRbycq6NH9S6tWqfbAVr97/V71P7g57/vyXt
Uh930v0V5E/+Xq1vx3gnqROXfP7dCa3pJ4PEvabab0vxr/lJNX6fePxZ4viT
39/YfTjHI/WfJ4mDLiVf6kIS/z2s9G+KgfWn7iPvX60PS1w/+X8lvzN5zRUn
r79jX/P643ek2Pr//DY2/v/4Ni71fVf7+zaX/iWCe6Hv4d7p987fFMGl+nv8
9T6/MYJT+cvt7+Ha69davnvv78EY7i2Kt5J/7v7bO38e/d752zt9r3/v9HPl
47U/Ov1j/L7H3zt/ufzvHc8St7ew7+H3KnY+a/8lwZJfwOKG0K9p/JDkN1ro
7yQucFFfDv3eyviqvcBwp/2u1Pwn8hcGPejCvpoLf/1Ox+rPqH6pEkB/cvaP
6e2xb4v/fCuw8YO9SOtwWTt5QSUP51b7Jxcsr2qwAy/0q70DcaF/GLDWT5O4
MOrlpc4vNz6Pc/8Us580hkniAxfxiZJfV+N7R7UPafxh6E983eJ8Q69PnPjK
+N0T+U3FDqHrQx4+7E32/iRuFT8Zya9oenmJM7b+nN8R+vdCqf2Bf8g5Vt+z
tn36Q/id2DHof5b4as0PzX7Czqv+TR6Y/eglYD3feO8Qhyj5c6vDnfGXqfxh
D+N+szq+Ev+umH03kz83f28mWN1Y/OQ2ji+kbil+BadC+QOS5Y/fAfcv8e8Z
vn0bp9In/4NiPT/vte957ZcI7oW+h5+dfu/8TRH8KPx5/T3+xghO7e/h2vPz
+ufOr3X/IYJ76e+tj9ffA/J7KE7lv/X+y31+cunvnb9Hn3/v9L32R6ffevxH
n1/v4+fyd+C+8UXseufE+nu0m16O+i2qX1P9lebXwj5BHNOH6/Yx6Nfwa1L9
rOkHVsY3GGBfIo5sZXxXbZipO4cfuvqHfwzt2BHUflAbVH4b2edSQeMCF/Er
8vfV+bOoKxf0YqnxO3Z+BvshdbUm8V8fySuI/q1Q/SwP6I9dgvhand8Y9PMD
z/9K/bYLwZ5y+nzA53X0sU9bfJTWr4Luh4AT4ydt/iEvo/knSPwP8VnI77Qy
vynnMfYr1f/in0F86bx1/jkPmDf+GZo/LgLJz1/t+EXik7Efiv3p8vqOiauZ
Vj6flj807KPU+JdcgD5+N8TZa/yR1WVjHTX+2qF/b/5sk0+QRyy+3vTyEftm
LpCvlbhztS+Qz1vt+MnnP/uLOroSH078Oe9ZjW/ivR+Lf7e8wSvzk9aGUu+n
WpC6fhfsc2LnLbb/wv2X/BWT1EecZX+ofSpKdyv5UTfwNfx/rf0duyr3M7Hf
cj86B4wfiO3/8P7lO+Vt5fnqfd9eIvgt0m9tf6/d/b7L5K82/dz+ten3Pv/a
/E0RXKp/6/3den5jBG8lHw/Xlk/t/p58a/f3gO8FxaXmn7v+tdenNn+550Nr
/lrP32vP5e+gn0e/9fit6fc+fi5/jz7+gevii9r1fnbdHgPbH8SXiR92an8X
JG/ZIr9jJqDvNz1JYn0ak+Nr+B36P7W/hXgci59am38x6MUtz2Si/sYD+p+x
SwT9tObPs/gvySNp8w966Rn7Q2L8T6n1G9ivxBeKfhT+poh9eJC8Xov6POQP
jOXf+u51O3q25PkFu160vlTYj6a/3Ti/3kTcLXy+rBuf+n2niH2Qc+f8+o7V
/kM7+sFJ43dzQeI218bPEV9GHrW1+kvzXyA/8cr5UT8OO8xa+1ItSKaP/YH9
r/YZjX9cGz/nwJvGL+r6hf04YV/R81fiMkvF91j/P7iPPu3kR+b8mwqfz2YX
LBzfnMvfYn3w41i7f4gbljygdv8hPpP3T+H4V+x9VidV7Ivc3/DD0PyEZv+O
tJtdiDzML9IegVLzwz5jdVjl/Fvk116bf/w10CV/fGn/AvyuiLPV/Bbk7wzn
sua3xy5Fnnq1393LX+vnDziLf8Sivumd0Lq/wctwhdV+zntZsT2/EVxqfh6e
Izi13ePf6+9+n3ZOv3f+pgh+FP68/h5/YwSn9t+7fLz+ufJp3X+I4K363wu9
rH/u/t87f7nPb2v+Dvp16Xvtj05/7+PXxs8+/t756x3HwH5H/st/v/5/an+z
/xCHl5i/KRVm0R9OifrD5PG/En53Z368s+TFG0R/RP7RM/or1S+hv8VP+fPr
xq8FrccHsH8QHzqL/usS9KtzxL5n9tVIfGguWP0f1lfjwzR/ptSvwa6A3l33
x9TYvueB1bWizp7W1/MA/XuI60nNH1oKppcwDna+tfG/nUJr/lPHx+5kdnSN
H6O+XXgu1H/E/AuIo5H8chZX+W/XdIw/ibscxL5wCfTt/BH/EuI3sT+X8j9J
7o/9kedP4rss/yd2lNfrduzDYyR+zINZ7EuD6K+tfl0sfhO7NL+T+Farj8v6
yvlP3lHiZM/CP/HF1PFdvB8yYQ784h9EPN+Cv8j+9GCU+EGNj8a+h53spPa7
CCTPH7+kDwFvXB+2NZhdkTwUYl/keSG/Qmp9RsDiNnkO5PwYxO9oSqz/mrw+
kjd/WuufdCdA/yz3uknuTzP+L3JObHW+Wv5Y8uMm+i/mgt3//uo2zl1/21//
dBuX+v6+RHAv9Hvnb4rgR+HP6+/xt/f5ef3HCE6dX27/XPl62JPP3vvHwGvX
39WSf+39W5u/3Oe7d/689lz+DvoH/Rzc+/i18bOPv3f+esemlxZs7RHopd3q
8qG/lfpCg+r/ND6FvIhBr4Ke0/oTl4EeQfRrE9/vxJF8Q+h7IHEfqf7hpWCU
uIFS/ukmnzvrT6UC/t3UhTqJ/vUc7HdDaCdPm41P3aRgN6MOpK0/+jf86EV/
jz0Bvc0k6292gxCnd5L+6PctT19i/FQyYPfFTrkyP2VroG6mxfdK/rgYlGq3
vJXY3xPzY6aC7p9FfJfDH/ZR4hoX+jv8D7B/fiGNvgFxl8QhrY1/YVzJY2r9
w/l3Jj9dYvyhnS+Sf1jjW97ELjJ9XEffA4t/Iv5Y6qvRHqvPp+1an424KeJT
S9XXSu0/SXz6pPHpzvlJPd3/5vwKWzt12cSPIZU/i3t9DVjyb5pdknuAyHeS
vJm6P7APWP7g795uj/mPYB8dIvF5uv66f94kf67GZ2n9S43/xT9oeg3ten8J
zxvzPkl9vjexv54T7X+A2ddj8esR2Gp/90o/Gdifr+9Y/QfUvyHVvuOB9Ze6
glv5lyW/H7hfSR6PYu9v8naSf7hQfeli/fFL+7VrbM839mHBqeNbfmjBqd/n
ud/vufQvEVyKv1z6vfM3RfBW/PU+vzGCt5qfh3Pn17q/J9+9949Bantt+efu
v73z59Hvnb/W8/fac/l7dvqtx3/0+eWOXxu3nn/v8nl0bHohwdYeAa8dmMV/
NTV/ZSqg75rwg5f8fdjrtM5NqfFd0Pxrifr1zfjzALul5BlL5e+N+mqiB0md
P/F36qdNO/pv/Ne1vpXlvUK/9fG63ewCYiexdurahf2j9rvqIPX11ua3jMFW
+w97BnE3k+iPW4Gdg8Qfh/ND4xvInzmKnT9VfujPLM5rZfzPm+SPJZ+v9Uc/
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
oE8zP+EP1/3Rx1p+yW9H2iXPntFH/4H/929J/6BXMP1dYfsD/q3op1V/57W3
BvRX+Ldr/bvpJfwdO+pXrtupb0ccwsJ+FwFrR+9B/q+XtP4GwT6A/n6RH1Hy
lun+s/hB7DuqXyH+9A+u6ZV6flXve5L8gL3DFM7LKZYfUuyqmh8K/Tbxbanx
d1vJx/JehTgrrT84S/6+OTF+0uBD+F0kfiIGtdsB8tWafVvjR4jvETuKrS/1
LbG/yfriz23xvbr+fHdKntvc9U+Vj+U3w79e3i+z2n/FPrzI7xix7xBXrP4h
s8T1Lb6/JS/1kJg/1NqlPqXmR7Tzn/Nvpf9Ma8CeafbRl3ecyt+b2IXXns9v
1Hdkn6zM7zqHe4/Fcan/x51g6xv22xzxX1G/hqmT+rI2PvcX5CzxP2rfn797
3W719cJzqvWjaZ9j9X2d+sEe/7xfpsDXIPkBuO/y3llbX+ve9lQgv6r5V619
/8Xolnp/ca8l/4J8P1yc9/d05/ObzJ/kJVH7vtW35JwX/rE3z3wnqf8g312V
7EOT5NXX91MuUD8XP6/U+pmPDq3vh3t5/+MvqTj5/e3ojy4RnKp/8vrPEWzn
UwRv1X+M4NT5te5fe309+dbu7wH3D8Wl5l97/7Ve39r8efR75681fa9/bfnm
0q+9P1rP79Hl1/v4j449oO4X34Gj5KePga0f+hnqY63N70d9FbDYV9APKk6m
XwlS5ZMLfJeTNzO1vpy1U5ccPXJh+19tOKOXwD66cv7ktxxi+ask/kPzX5rd
mzgH9T8lLk7qCKbKF/31vDJ+JRWI18S+qPF9FpfJ81vYv5q8oZwTqj/G3mh5
qCR/Xi5Y/ALxZ4X0x6mAvcfyFxaybxaTj+q3X4Yr+oPGJyT6VyQD64+dWe0r
2E2p0yP1efAvOUmeReufGT/rAvpx6hOuzJ/KuYNefkiMf7b3L+diWCfNf4vd
xtZRnz/id+WcMPpOO/lZB/S4kt95EL2u2ge9+WWDnK9qvz7g0zDp+a32b/xX
qLOVWF+v1Ppj36CO6EL/7wD58rDzaX3fWpBK3+rnEZ/9Mlz1vwT7tdWp1fp+
Tv5vq68Xu/9kAvntxnvja7l3EQf04bo/dp854j9n/k+R+m7ZIHFJqfGvAPH0
lh9Wvn+oe0iefrXPqX29VP3UvZ+Pm71fPPrsD/Igl95/vQPPBc9fYnx26/M3
ub32/dID7s/Yn1d+v3n6t0sEp+rvpggu1d/jz8O1+7eWT+/9xwhO7e8BfoOK
S61f7v6p/fwd/OXx57Xn8nfQ3zf93PFr0899vmqPP2U+nx792s//KeCzYNqt
vhR5ciT+bQrxQ9RpGj67bid/F9/x2u4BekXFRn+8jVPpH3AbPPklt4e8OZPE
YZVaH/xJzU4i/rfkE7I4QtH/zap/kv0VA9t/od+A/k70x+iPppX6KdpH9NPE
mWl8B99Psfg77B7E90h+xFnktrDffQ4+A078Psxt98Dmj381+ZXEPobe0eJf
RL9L/CP5WzX/1ER9LvRcK/cv68a+OIl+Fv0X9SsX+SczwfTa5M9NjH9MBrGr
LPJv7hSMf+zixJ8m1v/qHRbvd+xfa+sTElcZ7NO6vy+i311b38zi7tCPy/M5
yvk9SP5PzWs8a3wOzzX+BZ34lxQ7H3nvEgcZ/JRaz28reFP7XyfrC2DXtvyC
pf0THKA+Mu9Rze9L3lLiDBf2GfJWS55xO1+I/wnvwVHuL5w73N80vnbS+5nk
5xg1PlDyB5DXk/jcxf2M/ObBDjuszH9gfoPcnzT+LPgrmP2zcP0+7KHkH1D7
L/djaxf/B70XqH3Sg1nyOy/825D7yvwIte+PraH3+RXjj/wuxN9L/ogDbkOy
/D37HXmFyS9U2D/xXig1PvqqQbDq5xSn6gc9/Vtuf08/5/Hfe/8xglPls/f+
90Ip+efuv9z9/+z8ee21+Xv0+fdOP3f82vRrj+/tn9rxy17/GNCO3+fph9eY
duKaJsE2P7GbnTR/5GfXmO8p2pWu0kcvPQs2+sSbkaetk/izAzYC/HJfAtb6
aLnAvgz2l4V/ktT3WuR3RP8asc9R34j8MeQZtP6hfYjUb1H9k9qHiTux/Gyi
nyB/FHqoUeobjrQTf6r6I+o/cn6sza9ZqT0ZpC5Gan7DUjBz/hKHpvorB9Dv
EYep+jHq+VBXaLV+ju9uHbeT85W6d+zvRfwgft0fAtb8UlofS9ux70fyO5L3
yvKMrly/eyGXfmp/4kGIa061LyTTZ9/G6kdyr0APnBhf3BpS5XPB74E6jIXy
0xlw33p9x5q/Lxd4X5n9X+wnvN8sTk3fjx5wr8N+k8j/Zu+PJ4Xe5Vd7/e37
krwP+OfI/dD8bsK+1ed7lvuj1v/kfnaJ3L+s/jbfPdJOXlbiFDX+GPsn91Y9
Hyy+kffg2vyqje9Xi/e/2G/N/sr5knj+2vpR14/3o77/setyPq6Nr34N4wS/
j8X3byXY6vlx27HfUj9B61vcSf9/YLjGYl8y+zPxmyvzBzwrJK8P50Ksfnu4
d3MvXPiP4H8QuX/bufft69/r9/m8Mv9HqfXn/ODc1/M/Fzz9oKcfnSK4VH+P
vzGC99Lfw637e+sTg9T2XP5z91/u/s+V77Pz57Xn8nfQ3zf93PFr0899Puz7
Q7C1O/VLzW9bsLX//m1s7RGgHX0/fuxn0f8fcEBV4F5PHS6JP7L7O/qHWP0/
vh+kvrnZrV5De2L8mwd2joh/tdq/qL8yEyfymjZ+sXbsFnxHi/2C+DCe+1Hy
T+l3cen8KcT/oUde2P+Dfty+j1bmD9s9oN/DTiL6O8sbyPvjS9ftxDtMHwNW
+w3xM5H6d/dC7v4FLH8x81T//7B/0YtqfTKLn8Q//+N1O/XF5kh+Oqt7iH1R
z59M4HwwO5vYT4g3QG+R+n4H0E8zb81fdsBtSJaPk/+0NlheU+KLNP5Q3ouc
58nPpxf/il6N82Wtf4HGJ66Nr5W6h5vLn7zV2Hk2qi+W2t/sTtyjND6Se4Hk
SWzNfymYJe5Oz9eLxN8u4tt4737ndru9d4hvl/hCte+p/Vvte5r/XOv7xer/
WR1Pabd8JnzfvV63a33CeXH/uw2l1lf19sRTJdN37Hv3QrH7i9T30/oA1EtA
7rPWFw/raf5dK+PLe4cz+T/IE1E6vw3PfZC7+m8ekAnUVyD/iMbfkVci9n6h
P/orqV9seYVj/UM/qwMs91vyx7D++DG0fr/Z++EHt3Gq/nGK4FL9Pf2mh1v3
ry2fvfePQWq7N37t9c+Vj0e/9vxq8+e15/K3d/qt+avNf+/0W4+fi7l3KKbd
7BuCrf2AA3YMZlcTP2d7PvCbxH9V8yvh14n+Tuzjg9ZvV/8+7IZfDzhRf2D9
0XvwfS351d7I/4OetZB+JLUd+9gcyS/l0icvE3kSV8ZHLvJn6vez1G05naWd
/F/YLzQ/KXmp8L8W+00uUN+Kuiwnsd9Qt8XmJ/4X1KWa7rS/WF4u9vHvXfe3
vF/o0VfS92CW+B+t/+WB2Q+xA8j3M/Y4q19fOj8m+5Y8P+o/cyck90fv8CHg
QvrFVKAuptVPkv1rdTPRT6+Nz/CA+jBmPzol0d/7/aYY/9inZB8lyw/7Ae8n
9X+Q+BP1D5jFrnFK1H9ZO/E/Ef/7Rf5d0d9xXph/j76ftT6i+t+L38dUuP5p
DGqfL9YudtlS/jWlnk/08/gFaX7ae2Gr/lOwj1n+S82P8DHQieTHnaj7SZy5
2g8lf+cs+TuHMD75Hc5in5sd+5/F7we6Gv9qeSc4B9bmH5Z+mh+c+73FqSzi
rwWv3L+si30nyP0S+xjfF6n5w5PHD/d/8y+T8Zn3CT+czr7fLS8BeSjX5j/H
b4V7/OdX9q8M+nyVtg/id2h+AGKft7zAPP9b5x/g/iV27l7WpzlgP8QPq3T+
/8pAfh3FqfrHSwSX6u/pT6cI3kv/MYIfpX8MrP1Xb+PU8XP3T+7+3Tt/tefX
Wn6153/Qr0u/9v5uTd/D6NcU0x4D2i1/gWCv/wEHlADz98W/NDG/RPL+DPae
WH2UWlCKvsW/ot9amd+Feiox+2crsPMT+yb1JVU/FPidI/ad6oDdizp/cj4S
v2n1c1T/iP4q/J08sNau+ack/gW9l9Unkvg39EGm5xb9iNXXQr8t9fc8wN+T
+a31T77Xvmf8Y5ckj87LuvFz4Y38p+hZvn49vtlt0c8Wzu9r9mf0f7r/pX7i
SewPE/7rtEt8IvkXLX+U2DesP+0a3/8hYPav6lfZ35+LtHug9ocArc+vA9pC
6/d37XYPrD95EdH/i33VpUN8D/Fhmt+jU9iKP96fFr++8ny/OPa9XMDvao7Y
3yapX9xdfW6xW+r+pZ6o+Q+stK+Td566hUv7YF2wfYMdTPwPqF9h9xzxj9H8
n3Mn8bu9g81P48s1vyv+S6/veFpZf9z8R6jvvba+KX6J2NE+SP9wLlseX/U/
/JJgjU+rDcFf0upsdlbftTp0Wt+vFIxhHopt/0cw7ZcITu3v6Vdz+3vz8/jf
e/8hgkv1vxe22j8e/dz+Hn52/rz2XP72Tj8XPzr92uMPP76Nt3q+7H4o2PqP
t7H1P+CAjgG9hO1ftU+F7yqzb2j8Efl5/vr696n73/x7iYNS+0Ql++Fmzyd+
U5H8ozHIbTeg7gvrK9+v1MvCbrG6fosD1K/CfqL+4/jXsu+IJ7HxqYvI/pP8
leb3jv5G/SeYF/3F/5P8XBbH18n3s80v2L/Qi5xEf5Ybv2f1W7GjJeqvk+VD
fBP+4x/S6OdCKv8j8QPIV+sfEd8SqZ9o8UfYl7X+iMcfeifOh8T8i3uHYvur
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
6YcvEWzvH0f/3Ht/T361+98Lb0InhnPX3+vvzS+3f+78cvnz2mvzl0s/t/9B
vy591nsUbOdDuB9yP1/k33sNfxece74ccMAB+aD+k6nfl8nPL3VJ8A8X+oO2
F/ZfJb+X1b8S+xT1achzOGt+LeK/Xq/5pZ36f+dI/kO1z6TWv8iFXPo2f6m7
t8hPVBks7yj56b4u40tdpdL568wuS369z5elP0ver7X6HfP/5TnW9SEuijjW
D9ftl6Df0DgOW3/ip+BP6pvQ3+oQ6f7GroUdc6X+JQZ2T+H5JH5Rx5e4Q7U/
Wnxu0KPP0h+/BvQnq+OLqbvE81+4PuUBnwb0EZxfq+NPNb9UgGLvR/Q36Oc1
fyvP38eA1f5C3l7srInnX+/vn2SQuj5aX5e4bc61UvkxS8mXeuAn8ntuVF8t
lT7xRBafq/ULM8ef5FzW+uS5wLlu8UErn3/qHxLHvMi/4PWX+D+1/1n8aCT+
DrsP466ND+X+ZH5SifXJDESvr/pls/vynlf7bog/HyQPv90fqPtEfKrkz1f7
ntoXXdD6yYX3773tgNVHJn5fv4+wi2LfkfsD8b1W32Ct/0EmvIn/57Cy/kGU
7l7uR/i1YWfU+GfuxWF918bn8dzzHBfPb5MJnFvmx5kY/+pBL/NrBa3nX+z+
yL1V8Fr9s+Kt+k8R/Cj9Y5B8v4jgUvLPpd+av9rza83fQT+vf+/02W+jYNoP
OOCAdkDeoCHin2jfvegJv3rd7gH5U/hOn6X+h/mH8p0t36eD6B8W+m/yMsX8
MyUubhE/hH6d76yV31f4VZufutg/LC4IPYy2I/9I/sT5zvplyaD5Sdfav9A/
R+qjz+JXrfmfqM8Yq6/n1d8bRC+7Vj93wPCOYvUvxG4B2PqRtwg9k+gX0O9Y
nKvkXyV/JHWBUvVP1h/7Ms+HxF9yvlmcRKH6RkY/2PvZf6XqNz77/q0tv2T6
2M/Cuav+6ZzvJ/bB1vUfic8J5/aifiB2A/z3RX9P/l70isv8vJ+GN7FrrI6/
rgSp45tePBKfMgT7geWRlviTGftCpP1C3irqBCbqt4vt3zuhFH3i4iz+amX+
abvXcb8oHH/mAvmNsQNq/DTvLe4hqr+WuMtF/nf2x8r8nba/JL+m5gccxH42
aP099jfvSY2/C+3YibT+mMcf8ZNWB3lt/JvY77ATqfwG8eMx/kN8Pv5Fi/cz
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
Pzhr/UDNTxjqGWqdxdr3C+sf7LX32iddwH6D/WVt/MOd7ckQ4gHtnFP7Enop
7NhSP4V4qmj+1wgU2//kLyW/pugnzK4N/53Uh0ttn4gvxv9d2s2/40u32y2v
C34KIh+zj5v98Lq9NhC/YPaRwvrVGBh98hdLHJ3JR+q6TYnxr8nj9w7ET/Kc
B+iFf7M/4D+g+nPO9XvzTzvtqnfW+lkecN+bI/kBsD8RXzOL/w56acvDqvYL
DzQ/ewDb/+SV4B4q9p2B97rE+ZmeQ+x7k9xPyc/N/Zg8gZvtL8e+OAb74iVS
/47143xQ/yrLK4mduZB9Mrn/S/hdzD/NA9kXOv6Z+nJ31ke7F+z95uU3CPvr
jfy98n02h/U/Uz/RsT8v9if+IZLnt5v7XSb98fX9dxYfvvJ8qw1nyXuzdv9Z
feFAR/PrXDh/GUf9d3kvksd/rX+n0z6H9wrvBz3/qdfJ+gyaf4a8LdzzE+Mr
ap9PveyfGLTmz8b36qfglyB+CnuRf679wrOPjBFcyn7iYa9/DFLbPezJx8Oe
fDz6uf1z+cvtX5t+7vrZvUtw8v4638Z7OT8OOOCAA+4G4ifwwxT9xjnY7wby
07xet+O/j5+g+i9P6BUi+TnNrxf/27X1ZSS/yUm+T02/S34ytQ9hf0F/vPDv
v41Lnf/or/iOWeSf0fonK/1LJ/G/nsU/1OruYR9YmX+T/GxW5yhC3/J7av15
tX+JfXmSuLrU+vUeJL/f+f5lHTS/DXaJl4C1vp0DGjeY6v9s7finxr5/0M+i
Xy2dX0f9r2X8WeyiqfUha9+vjL7Y9VR/gf5zitVvqQ3YZ9Dji3ynndv3rH4o
54C0W/6rL99uZz1s/Tb+/je7AHbiD2nj7wUGnV9i/rG9z3/x/mL/rcwvanG3
+BcI/XvBng/uBdihxD5L/S7yQ84S3/QW7ndv6O8lPxz6YPO/kvvTJbRzr9D7
4yJ+Qp5Psy8Thy398R/j3jmJ/rcV2P042EfeYvY75IJ9dqX/FvHjVgdv5f3P
8roGvjQ/4SD214V9E/8L+sv+sfhsyTNf7P3gAN8ffEfo/vZgMf+P1/31u0Lz
I1xYH+q8JcZHWrvmD115fzxJ/tBZ7qdqf77I99nM/f018CH2I3u+8WOL2F/4
jhwSn89i30+Bf84pzQ9r92vxk9rs/JDv3uL5leW7/CT7D/8Fq9+o+1P8Z/X8
srwVyDcxf+ja5w//0rX1L+z9wT4txF/r90ttePT5pYKdu/hRFM7/4tkvyL+u
uLZ+A5jgQ3Cq/cbrfy9/qeN78vWwRz+3v8ef13/v/HnAvUmx3r8WWO43C5z6
/Gj+OvH/PuCAAw54VJhfh19g9ANaH2DmXCZ/p/pX4FdHHNHK/FjoJ/Dv1vwi
5ncY+NTv2xgk33/wL4zYP+/NL+JBqfeLxZ2F7169v5p/JvFBa/NLE/+AfER/
xfsaO9PC/3KnYPsf+0/E/jd8dt2+VX13oy9xg2vzO2r+y5Pkh/PGJ37X8qBp
fCj2Kew0if7TpZ5v9IP4hal/gem/0Y+I/vBC/DLnU+H9jd7C8g9K/mTse6dK
9j3T37H+petvan5O9d/FLsL5KvSxZ9jvtD/29y9F2j3A/x39k8Rvole1+kna
/hr641+yqM9XF4jXsfo5a/Wb+GVgf92Yfxfgi/OtdH1SnjviH1fm9zL7cyT+
9F6w8yno9zUO096/xI+hvxX7hOn/if8R/a/Fd7yG9kT9dPL8yF+NfTJRv2bt
rA9+EGvrJznxfa1hCOtj+TXX+pdIXnbNP4DfUqw+s9XVI39p4vvfQPLGr46v
awQ2f7EbrJa/A+bfR34Kuf+cic8L66/2N62rpvcPs+9jB1L7DXZR4tcS56fn
B35Q5Bk1+Ul+kkX9vkbwP+ML3ii+3vgI8lI/itbySQbOF/LbbmzfzQWrf4x9
WvwnzC+S83Pj/L0PD8GfgbzYxGHr/d7ePyv9Y+g/x+pHBn9T3muT1L+4F5K/
P7mnCbb3889vYzt/fxrBifaXKYJL9Y9Bantt+5TX38O1+fPa986fN775zQvW
+43ivbx/DjjggANKg72fqdvA/Ub8v/Hbs+/HlfU7LH5P6gzY+S72u0nzd0r9
AM0f1BzQXxA/Ivlz+H4jrvG01n8T/2K+L3ZWf5B1R39Uur5M7zBw30APs/L5
aQWp/F0kvkL9Z23fR/y/ic/Az3nQ80Hym43qP9Aa+G4kjkHqX94LqfdTi99j
/LXxa9jHsANLf+qvap0zG5/zj/imtfp1j7/MduwG9n2g+jvscmYfve4/Ub+K
+f/GcNU+aPsXr9vPTjt6UauPulF9uF7A5h2Jr7D6csTRJca3WH+eC+xrah/n
3MEOp/Sd/H2tIHn8cH6OifY9vX+pfS81P5y1fwg4yL2U/1MpsLy5EifdC3/o
88aV9r3F8yN1BK1/+PsQsd9x/uO/l+o/VxuSx5e8Aan5H2z/4x+BHVrrt5H/
kjynr2n0DfBLCX4Ti/rn4X50jtjvPf4nuT9Nat/Dvwn6K/NvWt6JYJfHX9D6
i1/nVvnpPWi9f4FB8t7o+Wz3Ku5nUv/A7B/sb4mvN7vwa6Bf+vuZe03Yl6nx
mx7Y/Hgv4/9RKH9q6/7PDqXu9y6Q9yTc21Prh3RzPn3uNk4d37O/jBGcar/x
+scg+futsn3K6+/hvfOX2782fb6PFVv/8L4hj36qf8kBBxxwwF7B3g+ci0F/
c0nUjxc7H4nrw04o+n++L7Hzaf7/6kDef74fEuu7AbPELQ7qX4vdkvyj4l9r
fmnkyUz0H0uWD37Z+NFuXV8Cv230qyv1Z9THIC+U+vdbXhra19bn6RxG0Rup
/vUk+bPW+v9CL1Zf0PQLfB99SKNv+1/0xwv9IN/v6Fll/4/Ez4V5av0QzU+l
+YM9wH5DHcpZ9deffbrd7AJBz7V6/xH3KnFSyecPdnPsUyu//zwY0P9R5073
RyaQN8z8wAvVf8sFxsc+Z3ossb+9UXcrPHdqv0N+xD1pO+9noy/x09QnNP+O
xPx3rSH5fEevzHOg+uHKgF7e1qdQ/udi4MWXER/+Gv6v8cOcn7Rrfk45n09a
Xzmcr/hZLeLP9f1QKL+Njc+5xj1C7Ote/3vbSwHx4MQPEKeQOn62fY+4MPwc
NP5B7HuL+HziYslfJPank9j/Fvn/GkGp8UfOd8mTv3h+OEckfu1eSO1PfB/x
eWq/sXxVYR5aP8ED7E9TJD/rLHUV1tY3nxz/yBjUlq+1Y5+kPv2HYd34nIvY
byV/BvdWvnMW98/GYOcO37Fi/7X6nGH9U/MHbzY/vn/JH7JRfdBe1i8b7rSP
9QLYvaeV9SE8KDb/D4EO79nwf6OP3NGfrLRPDnxHC36L/F3bPfuS19/jz6uP
5tl/PP5y++fap3L7586vNn+57QcccMABe4Ot7n/2fUSeRclvcJL62eipk/UD
1GfAf1frizhgeknyu4n9DPveFNPfN4Lk7+vX998Nke/fe+m3nr8Hqfyb3YX4
z7XfV9iFsd8Vjl+cxT6zVn+ufuHcw5Plg30qPJ9n3f/UV0L/rfZZ7sW/ErDk
p5ul7o/mN+A8IK50bX0j6g+dI/rhs8QvnlQ/TN2ByPwX+snE/E7WX+rmxOIH
zb9Z8w+Tn5E8VhJ/i/0R/4STrh9xSS8Bi/0OuVn9qsT8M7XPj0fXf6TyZ/WJ
sN/p97XUnVz0p/4PcWSS39LsS9g3pf6j5dXjnDnqAxxw+v99/4f9iV7/JPpV
9u8ciZ/H/2KI5Odc+Gdou9j/VP+L3YP8xpP6n4jenPfYVvsbfzf8Yhb5uxzA
fkId4sX5741PfO/rO55kfXLzc7J+J/iT+7utL/tE+Of9bnYufT9L/TV9vyJf
069r/jupn7fYHw54+eUnrX+4Nr9oBEq93+y9wP1R+Le65chZ5Ef+3SmSf5P9
aXXWCvl36v3M7MRr8zOityY+LdH/L3n9Gsdfz1rfTs5Hi0/j+1jrG4h9Wc9n
8xuVPLw2vw8By3fC4n4dWz/hT+t3275DPyD3e/PbYX6F63/zXXGJ2B8tvzjP
meaX59ygjoj4X5ndBfts6fsX5yZ4ZX1VF0I85xTLL0J+86A3Wnz/Mn/sTJ3F
t7eCYvO382m4+r/RZ19Sv0C/DyJg73e+f8drnPx+4jkXbOdTBJd6v3j2oUsE
b9Xfa/fwo/MXg9T9x3vF9MOF/KcOOOCAA+6FUu83r536eKa/Uf8//G4/BCz+
MW/4fQod609+GOoMvV63DxIXuMivid4gYh+8VI7f43ujmf9eyEd1b36F2kA9
eosfkviFN+w2Yd3W+uda/b2wDlrfgHjOQfLoGX3yI1Wy73nAd5d93+r4Gl+R
WL/D5It+hjqWsv+p/2b6PXl+yA94irTfC6XuZ8xvJj/U63Ddn30nerra62v0
2deR/EIWfxXRr1ncHPq5xO8vA/JjEp+ykX+s0Se/J3XqPlyPP1FfkjxvW8f/
VoKt+Ed+5D1b6JfQj5EnVOM3sQ+HvJGL+JnqEMa5tz4Z+wo9mvKP/hD9U6H8
ro8C6O/JAzCI/cPqsbyG30n83pvUf1X/I6/+nuVtx48s0f/F+mOfxn9G4jPR
X2M3XJyvDnBuU7f1tHH8Pu9fy0O+Nn4tvF+wq62dfwysf+DP7t+aP0Psk6r/
U/uf3s9Hx/6HXXGM+MfUglT6Z5m/8j+QPwH5afwS94NIfkvkc47Up5vl3qf5
Nwfpp/FdZ8lfoN9vPN98h130fin2v0nsf1Z/EDvQyvjRe+tb9n7+986fB6n8
k9fV6nTq9wfvjdd3rM/HIPX5tH499j/DhfN7uu3U1SV/rNiveB/ad2qi/24u
f8kQ7k2WJ1fff2qf+yDt6Ceob636ic/J77Qdu/Gd9d3vhdbPX/L4nv0ufDea
n7Dmh8dvN2Kfv5c/a4/g1P48D4qT9UPELwvuxT6V2781f7Xl5+EY7P39f8AB
BzwvFDvfeK9Tv0Te78SXYId5U/9M9IPk6Zf8d2+hP+9VrR9BXInFIcj93PKK
EL8m359e/k3Tn2Of0HapT3BKrA+RC8n6q3DvNz9htX8Ff0zkrvnHzG/yzvyg
tUH9qzW/1yh5u/T77CJ5m04qn3++7ndKzJ9h7eg1yG+3tn9lIJ/TENY5Nf7M
QPIvrY2/9eCi+slC9kFgCPrlOfJ8e/mLWoGN79THaQW93J+trhPvGdUvSN0d
1S/Y+Y8eKDF+ESDvnfkhB9js+ea9R35Z2R8WP4v9WuJrk+l/DL/fOj8ScmX/
i34CvyCLr93IPrfZ/LHfcw+T8e2986Xb7dmAfh77XiT+Dv3/Ij9nBOz9LPHX
a+tveTBJXnA9Hy4hvhv+NX+5N77Jn/upxmf966fbLxIXU8q+lgtbjY99Z4rY
t94c+94g8YGL/AOxcTd6f13Efqf8qf1L4xfNLwM7snz/UB+YOoV6P7PxiWOV
9hhYf+5n7NOV8Y2efdbqwxJfttY+TXyJ5LG07wOtr6zfp9hNqJMg8q0NfLdw
Tml+GfVrXdin8X/ifqvy89ojkDx/rb+n+XsyAbvWFPF/I2+++fdqfQriT1/D
/8W/IAZb3V/tu5N7ZKH8863fH8ng2Z88/1X8zth/6p8Z7vMmZ82/H+6Xdj9e
6x/ZCGrvj27mj91XsJ5vilP5572mONW+lWuf8ujn9s/lr/b8vHb8n06CbX3D
/X0K2PI17WV/H3DAAQd0BnbOU1chvBdL57fE75fvwkV+EewC2H82rr9h9Vle
Ak6sn5PcHuZ3jsQnev3RH+E3m5p/qPf3X/L9jf1B/NPK+L/c8VtBKn9m16V+
28tw1X9W/YvY3/ALnyL5cXL5uxfKjT9c48T4SMDsIsTJafxUJqAfMv/klfZb
y5vDd3In9aWS+3PfZ/+J/msS+/1UqL5e78//Ac8NW+1P8oPznK32H3FgxG6B
fbFQ/vFcSL5/YFdAjy/2O+wzQyT/qAvit6D+d4O8vyeJr7L6wfg3iH0Dvz3y
zpVe30ni//X+Pjrxffh/Yec/if7+Texe80r7lPkPYmfQ+Hr8pnjPS36FUeSv
9hXyC5DHRPOrqv1L84uT35v+ar+y+DjqoL9ety/qV2p+Fexj8L8y/hH7Gnk0
Bs3PkgnYf4gbPun6cG+NfT9KfCP+gr2cH63hLH63kzxfg+TX5L7b+n5l/X9V
cKJ/U+/33272D+cGcYi95c+EP8459U8L/j5Tpe+zA+rCIv52ZX4s/G0UP4p9
z+tf277ngdVHEnw8fwcccMABDw747UTyM2hdq0n837D/8d4eNL6Pul/YOUR/
YXW7yO9TKH5v7/f/bt6/UvdH9St8n1qdiNL+keQN4/tB47/IW0L++g/X7QPx
f+jXVn5fDJJ/T+Mz8Qc2/8aV9flsfuS3k/oQY/CXIr/am9r3JX4u1f5vz5/o
rVL1S6ntA/pV8nO8Cn2tT6P+neiN8L8W/cYc5IPeaHF+LOqnSX/yB4ZzSeOf
LX/dS/jd7wj9CFg7+xL/d6nPpnUziIdLpg9fxNH9ktD/lvxuZXzZLHl39fnX
dTmJ/GJg+4Pzn/qRwn828HwRhyDy7x6IXyIPZm/6nZ2C7V/2dchLqe2tYDf3
C+wyxO9p/Z/egXMZPaXWXyL//Ur9dSqYXY34Qok/xL6E/n9t/CHx08SVLe7n
xL1F2qsD9QF4D6zN76n3J6lvdy+Yfo/86kGOi/tLJSj1/TGpfW5l/Bz7j/zr
i/wx7B/WT+Mn8fuXOnV6f8ePc3G/jkCy/PHLKux/1DuUur/zXY9fxNr68yb3
cD8sVX/6/2vvW5YlSYosfcmSxSxYsAhJQVoQBEEailfRFDi3mW5oHkkVNMOr
u51LPbKorPwG+5T4FP+U+wnzCSPC1aMjccI01TzULNw9ws7mVJZdNTe3l1uo
mqp2bATwyzPyf6j/KX4fXDn/Rkce1/p+4d4S87Xse1H5rdv3ksGqPzK4r7+O
jo6OfaLW/n3k+Bt0P1Tzikk531/2yr36o8+3UFzO+bfZvsT54/n+GuW1ZvsP
fu+wneNa398njq955fg5FvT3pROfU/Nawc5XWb/jQf3zMI5L4+eIvl71iNb8
ojiXtcYH9jHNw8j6GwNazvfTF7ZvEvup+qlw/iDyf+Txh/7Jig+E++1m/U55
FGoXRBzEwviLtZ4P/2+NT7Uw/iPir0KvN1fKn+Jh7f2nFNov5MfYenyL9bPY
l6z4kvAbQfwq8p/VuKTwP2X7MeIy/ShfHgbs843yO6l/EOzrC+Wbw/H/QTx1
9V/m/C6IHw47COd/dIDxV/nC+wdXw4vxmZHHpvL8g11M7SS19z/EL6Y8qarn
gX8XzmlG/NYD7ITk/8/+eXx/HvMf6x95movnB86tcm9qafw12H00/n+l/Fel
GHF/CnFS+PxDeen4fpEHjT+C/nlnmbyFUvkjzkf4HbXQv2+i8yHOSTr/cK8P
9+c4/i7s07APkrzG9ZN7cqXz71r9F60fdjHNg1Hp9xV/v2fjfizifiA/Zml8
ZgDnao3vw/Z/+L3K37F/sOaFRXwcfj7uz8m44zuzme9LFA/jP0jfr9B+7WEv
/QO7Hr4zZ/FPcL7B7yO+Hwv9CfbPwvtDV+sfzF/cv7vy/QHcP2Eufj7O7cTV
ztey7zGX2s/C9q9f5bmafvBGyzs6Ojo6tomb2b+h1yI7SOn7ncUfZf0+7o/i
/llhfjcF7H+wz7xYJo/4Nkvjeyrw+5rsXHsZf7WPUR6ktc8n1exn5Lea2P9J
9Frwm+P4pojfuTQ+J3CWn+aR6qf8PLXup19NfyK/Z5BflPWbUXBc1TP9udO+
S8v1+bDP4Pdtof1afwfBPi77Sq38biqP34XwH6T8dNAna36sfn+3CNo/sKvA
/kTjP1H+plTZ/5bj5pbKd9QB9jf4Z3P8Q82fhvsZle8ntIbm50N8SyN+5GzE
X4wC9glT/0h+faX5WYvbx/mPFsrj+z0Z8TU5v96R42ORfx/Hp9S8VfgOPVC5
B/jl435Bpfyd+n3B9804Pyeyr/D5SvPzURx0tT8hPjXssI8L2y/6bdP+HgTm
L+wuM58f0T+Pz8z2HT1fUj9q/yB+BeKbFt7/AhLlleDnI94b4n6mhb9f8PsO
drTxRvIDVL+/Aj918bMu7l/IYXw4/6kD2PVwLi89n3S8HZuxf8v8wD3bs/sv
H5yWc/xl7Fea/5TXL+Lj4DtUOX71paj1fNwvYdb6382zln8xz/r9+zTPer4y
uNR+5gL7O3Et+15HR0dHR0fHBoH7m7B/LLw/bEF/PyKuCO5P8vmR7YdL/aPo
3tnS++3QPyAu0bg0fg70F9BPVYqP6aFa/S+kHsSJpfiJHjRuFX4/PJzK4z6r
+qcs9K+DXkf9Byv5V7aW1/OzY7/T+EmIn7lQf3Np+0rlcf/8Cfpd0j+iHHmY
EusncX/d0B+fxQ+l9z845Xq/XfRMrH+eWf9O9+c1vzXKWX8N+9lC/aiWI74u
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
/KF0vsN+Db+NofB8v5X+0d8XiDPN4yf3LTR+L/mfroXi87+j3/b05558WL++
8fZ5iLYvKp8MriXvtc/jrcuv3b9ry3vsAfdhmGuNn35XiUvbl3B/kFjlf5Jn
7T/8Pvn09N+lz9f7IchjfKXzlwfv+a3LO/aNPj86OjpWB+KD4Z435ddK8OuC
HWZp/B34bUE/uvD84UHvFcGOVLn+veNAfimJz0+4v4o4RQv1L09efCbOb/Le
abnmX8P9NvLP0Htv0s6l+kuN24P4bDQ/ND8c5udDWf1aTu9dKz9JKc7sc4+n
z69l/5svjN/J/ocTy+N3BebpQvsI8v9NYt+YHpfJdzQGrXu2/2BeYdzOx1/Y
yI8zQ38N+xj9fsb8RR66M/9VzB/Y6ajcQmn5kfz+2L96Jvsl55fC/QN85zh/
pd7reJB//6Cs/aXAvoa8TgPHn5PnDz8SLszfejXQvZMz+67MG81je2X/F/gd
I25q2lh8g62D9/8z/1sD1foP33/kP1sYP3OmewMc3zMK+NcfaZ7r/kTnN47f
oH7txv2rS3G18UH8a9kXS/Nn1wLiRc5WfvPG+d/WwtbbX9o+xB1hLj6fvspz
qf3BK/fsA63lPazdvqh8MriWvNc+j/cu7/XP1uU9QP/CfK3+nwzWepz8oJdi
bfmOjjXhzd/W5R0dHR2X4lr7C+69ap4Lss/g3jXia5bqH662PyKvFvSMhfE5
FbgXC/3Pw0J5A7Xen/1XzvIfvRS2/AsRtwb3y0n/NJJ97yw+542idP6yfxzb
945kX2P/p2j+PY5/OVP9HL+L7Suafw7xwQr9f3T9S/sPeD/+/STtm432dbwd
Xvxe6NcRJ5jtY4nszhxfEnYN+B+yfhz+e6Nhvx3JPvfE44+87rLPnNmXnfhq
bH/j9cP+pYnsC7AfDvCzZP86iis2VMoP19EWW+n/RH5RZ/mzVsZIcVPP7Bv4
/sM/le4faXxHWTccfw/fLew748b8K8Ng+9/C8VX/VOv8ZUDLH4TF7lgan7AU
iBuMuJKl97eqjS/uNVKcWK0f9xaQR+9bVO7JI67jwvyqxWhsH8R8SfDf4Pj3
XnxS5G/A7yDuH+/5mLeIb1wpvzswYv8gLj5/T6fM/jkeZpwziGvp9736o/Ie
WtsvWr9fMriWfOv+6fJt5T3ovVPi0vnjcXT+e/GD9btGrPP7v/Nc2j8dHR0d
HR0d24PmPQOT/kHjR8FOV/l+/Az/K+hHyb8B+iLcn4W9yXv+Vs4nyJeUxG+i
tv7u6OivNf6CFX8O+kX8/n6gcoy/lX9P4vlY+kk8P1EeJi2H/P8WJv/AreJa
8w/5vxD3kv03Dxwf0Mlfd5ZfD+d+Q39zQPxN6E3IvsL2X4xjtH+03LH/XVr/
reAg9lf4oRzY/uRgpPEdeHxlXat/GfmnHCgu5Vl8zIXP5/kF+1yidaD1i10Q
dsNE8WWfpH9gp0hs30ReJuxv/H3Bvgk/OFp/R7KbntknZL9EP0LffC/z0wX8
ckTvvlR/rHHn4Gda2X6hcYtgv+L4iKQXXxpfuhWqPR/+bfCPvFJ+rih0/2L/
vCvHV5xk/iA+6dn9CNm/kN+T98/E+yvnt0P8DtifruR/q/XDLwrxIzi+Lp8v
tpY/shG28n4T57eTe3ZoH5fPVK7++7AP8v6K+Sd+lbAHVltf2FeJVf7Ledb1
85c8q/w7eeb1acW/i+r3Pf19VP/vyXvY+/slg7ci773fZHCpfHR89i4/Ghzd
n681f6Py0fWr8e2Zg/3X0dHR0dHR0dEKsDchL0/t+KAj5y/h+9fIf0d5QPR8
BvumpX8mvQ7rTzQ+JuyjZD/l/Dhn8bFwfxd56L5C5Qb0fI247PDf4/h0HSGo
XwT8p0j/eiT7z1n+O+S/QpxXkof9xfK/msj/i+2Hrn+g2O+ePj39Oy5HHLID
38+W9mN+19Lfti5vDe1/0RvDrnUWX1L6HfFf2T9N/Suhp/7otFzjvxrlCf57
hv+p5183kX/d2f5E/nNn/kUOYLez9kdXnuRSJfu2h7Xn11ag92agh+b4pvL9
HC7Mb8fzrzS+eS1gXeJe9cD6dyf+bUdbJDqf8fnmSPY5zm/7RPET+PsMv8a0
MP+ygp7L9h0PieIC8P0wlB8Xxv/3UGv+alxNxP/fW/wI5F+lPKz6/YRdlfw8
i98Pv0twP4t/n8D/D3EayP9P74c+CPP9vL8Q0/0XvZeB5zyQ/M/yXKqfHgzm
8yUzn1+Yz85HxCpvMJ+PmUvbH9X/e4jaB7z2ReVb20e88YvKe+2Lyk8Gd/ln
doG48MTXmn/R9RNd/x0dHR0dHR03CNyPF73Y4t+PNw7YMzQOJec3MqDlsGeI
Hgb+jCg/kP8bx48ZyT55dr/e04877Rsp/9sT6f+hz1E/P85fA7+VB+HK+aXu
HbCbahyvh2fW8z3HB1sa30vsufr7huLTzuSfwPpJxDd8Mux7B7IfcnzIyYnP
ifmm/gO/OC2HfXMiPSS3/2jMb5Qnw/6F8pH0uNp/bH8v9E/S+vH+iLvy4am8
9q9R7sl7z+f8dhPJj5T/if0HPfsd8uqNRv5GtQ8b/qlol+rP2b/Kg9Rn2ff0
vqq0+8x/ayXo/IbdFvYF0cOu3T5A/T4R5478OxLi+lGcSp0/0JfCPszri+4X
cPzZS8HfP2t/OFD52foPAvsN7jHMO7sfg3sFuH/C9i+sf+zrqTA+517eX7/P
Vv5q7Ht0jtP18R/y/+XeAOIsav/hfg/sdxzf/lH+P/wvyb6nfo2wg9P9mETz
/iz/s8Tjvrb/IKBxQXH+4fzTiKv/Qpj8u9huxvazVqhVv/qFi50tLd3/0W8U
R2Mr6+sg33fmUv32raL0/VrbHzyO2ida20c8+WTwVuS994vKTwbfiryF0vLW
8y8qj/e1xr+jo2M5au0fW8Xe29/R0XEHgN7zpfDGfr9aqNU+xDOEXW+g/Dcj
6eXP9Gscn4fu7x4pbiLfT7egz4f+D35YbB/cKLbePgXrrwr9O6Lvp+MLvzrY
30RfiXLYBTEPzuIfwq6G/OaF+nstp7jDHB8R8YfVv3Sh/x/7r83kv4b4V7DD
n+lHH0UO/hlkP8L9Abz30vXllrP9lvSfyJ93MOyvg2OfbQUdP+j70M9sf4Pf
BvTkZN+exX6Hfub7Fd7zXchzNf8R539CfDPEr2P9c/T5jeRbo9r8ht0C/u8L
/fc2D/GX0TxitfODRUHnjtr+U+xXdBYfEP1D66zW+oH9Enb/uTB/dGn9LvD+
iHP7bXo+xd1m/wPNO4pzGJ8PEb8YfnB8fwx5d9G/vL8ZqDX+sKcjfuy40D8x
CvUf3ln85a20D/7uzHp+mvKs5xOH7x2t7QdsN2D7gSfvsde+qPzW+2fr8l7/
TAZvRd5CaXnr+ePJe8D9x5m4748dHZejeP/4ovAL4Y3kb/AQ3R87Ojo6Ot4O
3MuG3qjU/qCAfwviK5H/HvT3VvxFL7/fLP5R8J9I5L+A+FMa3+xG8jdvpf2q
34R+TeKobqV9FtA+xIedjfhfmH9Phv+MV78L5Aey4s9y/FwqZ/vexPEpyW5Y
al+oNX6e/1yC3cPyf6T8nWfxXb3n4/0Rp5jsu8O7wob/B+4bwM+L2we/UNWz
F/r/7AUT3g/xzQr9t6q9P8ZnYX68au3bqH9NredjP0hW/lq+n/Tvp+XNIfd3
9P7FlfPXbR4P4zOLXYfzkyV83yz/b/ne4Z4JxrtW/+Jclx7leUvje16Itcf/
Ws/H9xD3d8bC8asG5KWDHqmy/miivHPsP3cpII/fA8xa/6/yXEv/fetY2/7Q
2n7kcWv56Pt1+bfLTwbXkrdQWh5dHx579UflL0XfXzvuGTr/kX8d+iPODwz9
EX4f7CT/9Nbb19HR0eFB9aa4X076YwtbOR/Bnob4S+PC++OIezYhTxfZ//B7
PlnliK/3Yb5c4yMZ8R07YoD+TvWEC/Wv0N+Mhrzqd6Q8UTn8N9VPg/wvZ6wr
5Ccj/ynMF9y7T7T+NP4W4ov++LQc9sEn8lOttX4RNw5xaFk/Cvve0YqfKe1T
+znrd0Ueceo4fuhI+TFTpfiDrbH19t0KELcZ83JxfGgvfxv8c+AfRvZX+H3D
73Eg/bb6/2B9v6T2OfHzVH9Ofni6f8j9EvZD7/OvDuC3Oxv7e2skyts1sn37
i8RL7RuY34gfW+h/psB3ybDPrg3ks0Uc0FL/5FIgryr8tsdC//IottK/e0Wp
/tmDpz929dOvDa6kP793ePp/r/+i/e/JJ4Nr2Tei9pXW8q37p8u/Xd5Cafna
8+dS9P2xo6Ojo6Ojo2Nb0PMZxwd6GE/LPflG0Prh/yFxo87iZ3WEMCH/Hey8
C+//j8iL9FL44VQe9l3YzTg+l8angh/hO/R8jk/4nWXt0/vp5MdTPH8e5O8Q
v2zh/Hsiv1bWX3L8SvaPU7uFYd+eKL/m1ux36l/5KFwp/9xW3u/WAX2++mnK
Otf1C/uzcT+D82sutp8jr574nXH+MLf90m6N78v5fyXeY7qw/o62wPdB8zDK
eaDa+QT3Z8mPqVQe3zf4XZf6J19tfiEus2E/95DIP/AsP3MU1G8cfxp+iwPO
J5XjHyOe47DwfHErwL28kbjW+89iv2Uu1q//NM/F44vvF3Hp8+8da9sfvPGJ
ykftP2v3T+v+jfbPrctbKC33uPX87+jo6Ojo6Oi4OeDeNbGe7z7Ms57DRD+v
cSjp/uhB8kshzt1I5ez3wP4Px7/nWdv3+elzzur3wPnxFub/gL0GeljECVN5
sf/MyGNF9+eRFwx65GvnP7l3wD40LrTvKTBvvitM8T1n3P837HtbB/x6LP/D
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
95Dn4vYjvx6x7m+v8lx6fk4f5/ns/GXcT/Se7+qfnefDX5pZ98dXeS59frT8
1nGke6d8/zT6+8z9/WZwH59nJKwj4uL158h7/e/x1uWj/XPr8h6QX5i5Vvs8
HBz/7Y6Ojo6Ojo6OxcD9X+LS86d7vv57nkvr7xzjRHFpRopv2hrICwW9ysDx
qT6VcsQ3IvtfkvmSYOdi++CjsNjnzuLXGdBy6HWknjP9puhtYZcZl+bHaQy0
V/NcSZ7es/6ROGFn8fWofGl+R9j3xkb2Pdyn1PcrtK8WA/6b4hcJP4No/ZCH
/U77eaH9DvFl1X5YKb6b/n5F3jnoP3fmHxoG7CIL7fdRoP6R7Sucnwv6Yit+
plN/FAl+TfAzpfU9QS9CcZBrzc/dQ+JR6v5L9j8PZ/bRSvGtgYTvJvLYkn12
lu8z7pFzfE3EZ3/C/L3y/FwLVzs/Yf3Jd32pfRD+icyl+kuP1W5OrPvDqzzr
+c7xX/M42v7W9Xvya9d/6/De/2hwrfGJ1n/riPZPMriWvNe+qHx0/nT5t7OH
6P7qte9S3Mv67+jo6OjouEXAv+kJej76/dsa6T/GLBefX17mWcv/Oc/e+5We
326N+fzo+ud9P89a/uU8l/Z/GLjXj3v43zh9PvQ90B8m8m+ZSa89kn7z+Cjl
oneEHaT1+inuP9jNEb9J/NG0XN5L/WRo/Wn+ItHDznT/220n/OvwHPIv03L4
B9LzPST236P5d1ZO9jPE75wRv5PmN+wbGNez+JZbB/wW4L9RKT7p2vL3Atj1
Z+t+QhDwzz3KPpcK/ac8FK9fyT86IE8X5/eUdQm/PN4fkLdU7eM/IvmOLPT7
hvsL8P8j+9rqIL87+OsVzy+53wD/U7Zfz7j/c2l+Os4/uZPvQ631nRz/OKxH
Zv3+f2Jw4XkV5zZmHd/f5FnPb6/yXKpf9cqj+tvD3/O89fnV8Yyofr71/PL4
1hHt/6h8Mngr8t77TQZ3+Wf24H6/gvNvvDC/yr2s/46Ojo6OjlsE56+bKX7I
2kB8MGY9X73Oc3H7Hfvfrfv/8bmRz/cWSsufPjd4I/MLeXUQd5Tte4hrCD+D
8Y+n5YnifybyL4B/G+JunulPnXLkvxulXXOhf0IxYHelPDr8fmrfK9T/avmD
MOy/X6P64R8A/Whh/DPtH/iniJ72TL8v9gDVD7+gcsQXhR8Vx8+DXvKbRrnT
vuZA3qPhlLV/xV6i8dnYvon4nJhfbJ8W/xn1Ly30T/WwlfU/kN9QbftZhwP4
3Rj5u6KYYbfC/YVC/7Vazx/J7yyRfUH3L/ixFuYn81AsL/6iw0GY4ifA/ppg
f+X4zI2g/SP5J3HPIrH/vJQjPu1cmJ8SiOaXRHyAAf30y2XyFjaz/+Denawb
np9e/ElP/4nvEnPp+VW/y8R6vn2V57PvI3GpftUrX3r+ZvmbhxM/NBlcq3+j
+vPo+Efrv/X2eeMflffad+/901p+MriWvNe/reU9IG4Bc+n7I183s/f80vZ1
dHR0LEXffzo6fByhdxA+Un4F5N95ek3/xnnL+f2MeFfM11p/nn4g+vvEtf+9
zHPp+XXv7PWvpx9R/zhiPR87+SeQb4pZy5E/CP4ZP6HyKGB3gn8i23eRtw/+
LX8+LVf9J+bPwvhniE+ofiw0/2b4BcK/jPKnWdDzP+oVu8WZfwzeH/6NZF+D
PwPiapXG5yofH/m7tfLbwa4HPTfZN/cOz743Ij7t4zPPbL/DvED8yAOVO9C4
aFJ/Ivu4B/zenbHOyP42wq/BiN+HeLbqH077i9oPIL/QPtDxdmj+N+zvYk/X
/sV3X/bNs/PJytC8f/j+0P53kO8D7l2c+QeR3xjHn2yFvddfikn2L/1OV9Zv
sV8r+++vha2Mrxd/A365zLo+HP859/z6cZ613PHfi+afa33+vnXg+8xcql+P
9q/H3vOj9a/dvtbvt3b7ksG15KPzs7X82v1z7/JReOPb+vkdHR0dtdH3p467
gBO/Jnq+tqDln+dZzw9O/t/Ond/G44Xnz9L9H/mA4FfG+qOOt0P9W+CHUBh/
s1r/wm9M9KdL43/C7wx2V/af0LyJiE+y0P6akBcQ+kmyX89cXil/HgD/T7Vv
VcpPp/LwX4R9m/wrWwPzD3pz1r+qf46MY6n+XgH7Ne6vUHxeC1oO++iD/Jvz
S9441K6B/WFj+T/Xhu4/iN+81L/5Qqg8xZUcKvnX3cv4Ih7DAP/Ardn3Zf/B
uLL9G/kncT/hqbD9Wv67PJee76K/T6L1R5+/9frvHUfpB+Yn4/9z+drj17p9
0fqj8sng/n5l8l77JoNL5aP921re65+9y1vwyhXQaxCrvJxbEL9goPstHR0d
HR0dHRcAce2Ia33fVe9NXFz/L/NcKh89/3TeN2vcNOLi86/4603E1c6fiKsK
/6IXZfX3828hxJ4Bu1Wt/ELF8pLPR+N4kv0Mfhsj8vttJH9Un3/PgP9pojxq
On7Qr8MOWxh/VvcXxF18KX9P9lvkK5rgZ0X+fa2hfi2t/I8bY0T/WvnxEBcP
++9XqPxC7KV/PMAfFn7UZ/13IdaWvxcgnir83wceP8z7fxJ+QeXQuz0+81g7
vraB0v3zMOW5+PeJ/B1zrfPn2vVHnx+t/95xxDmBuFb/Ruv3OFr/rbcvGVxa
/97fb2157/0mg/ciPxp8LfkoWG/C+pOnv53yRPlFOjq2iD4/Ozo6Vgffi6H8
t8hfNFn5z0fiH1O5A8Q1Y47ujyr/n3nW88vrPJeerztvm73fBx688y3y24BT
5fx7R9FHqR/Qb8vq7+eLMqhdBnr+hf47bny+C9FaXsvJL6Y0Pmn0+TcD8bdD
fjGOvzVQXsnS+Hd7X9+baR/sjnIuYf/UjiBwLwL+o4X+sX1/uQ0kiR/6RHG+
q43Pi/GUKX4y/M+RN7U0f6qeDz/Kc+n50WPv/Bit35Nv3f4J40Bc6/x962g9
P7Y+/6Lt23r/ReV5XfH68uqPvl/r/vHeb+vyk8Gl/bN3+Uuh8u8R/7BO/XtH
6fuPor9IxCrv5IcZ/5Bnlf9Bnu99fDo6Ojqi8H5/pl/k2dt/Vf5lnlXe8Y9L
/55nlX/Ic+n5wssf5+afc+LzeOe3zrfNXn4VN7/J56eceP45QF6wJ7HjDXw+
Q1xEtO+BykV+gP2A7NetULq/bB3z4/jMYqdJlfIPrS1fWj/yHibER+H4mKKv
xbxMS+PDwq9M7NMDra/j4zOPiC/6M6pffm8gruqwsfxll0L3IcTNe3zmpfm1
Juw7VI/KQ+8ufn0D/X5DvEV812vFR/Ww9/G7H4ynLHlEdfwQ1+GLp39Xa/+b
8F2kOKp9/uwDuG+v/n3kX6znrp+fcq3x9fJzIy609fsAv0cs/eal+s9SeY+9
3y/R3zc4bzLr+znxLzS+PHFfv8/wxj86ftH50bp90fqj8sngWutz6++39f5x
96fG79fl3y7vwrEvrYXS5x/hTyh8JP/C8Pz9SZ61faLXScTF/Sf3GZkhj/gl
zCifJH9EItbn07mNz2/sf/lE/pde/3V0dOwXmleIWNe36PVG4bP8NRvHUfbD
o7U/evLB70fnzp0v54PBej76/SnPC/WPyJuGe1Nn+dlYf/qFZfV3vB3ItzmL
HWvk709r4Nwu8+fMfga/aNyf+xaViz/D8CVh0q9Z0PkN/TnsaIX2u+Lvl5zn
kWfv7P5IEDPsV2IXO/Of2yiKx0fsd5Nhv5ulfJbyI5WH2/dlYcyvwvjctTDK
usQ+yfr3jp1DvmdsR+zj2/E26Pnr8Zn1ngj7D341z8XnM/mejPQ7FPKI1zC8
OeVa8zfhOcT3sj688/loMMong0vP/7PBpeW3Du/9jwaX9p/H0frvHV7/ePtP
VN4bP2/9evLR+dNa3uufrctHgftaybhfY0H3f/w+EOb8wqPEG0sUh6y4/cgP
TKzj/7c8a//+T55V/rM8l77/0yenPODfWI+fnzLHlzq8ybPW/8bg0vZ9ZjD6
52WetX60k1jfz7k/hOcd5N79sPD+fUcMuHcM/UTaWf7M46vxHzwL49+6fj/P
s36/ZD1CzzjR+gwD+emFxyvl79H6KW7yoTB+sq5/0bfOhv1vhl78j6f/1vqd
/HHe93n4JM9a/uU8a/khz7x/MZd+X93z66/yXHp+6tz5ntm7/5Q+z3Pp/nZp
eUclSD4ttpNp/7N97R0qd5AQNwzfYbrfpn7PuN/43mk57MWw+7L/m9qXUT+V
W9BysYvhXMz+0a78heXFIP899h+AfS/hPSqdb1qvv1r9N8rvFfXrp9+3iO+b
YB+7tn8q7nVifv9o4fORlxfxtQvtt33/rAT4dco+tXj8OjpuGd7vOwfwv2bW
7zvFhzhUjv++dXjn89ng0vLW9d86vP6bDC7tv6PBtcb33tG6/5PB15L35p/3
fnuXHw2uJX8piuU5/w/53+M+J/Pavw9Qv5f/N72f59b9W638T3kulef78Zy/
4vhxnkv7J4m9gfla+z/yWcHOPCCePZ7/wSnz+MNfU/OALIzvcylqzY9Lv7+9
PFbuoVgecbeIVV7sSYm4eH2+HLOs8x/P/cspa/1fynPp/IvGv/TK08d5Lm7f
B3nW5383z7q/fpbn0ud37rxnPhqs6+edPGs9n55yovsdFnT9wr4jcfHO4jN0
rAIdH7GXaR6vhfEhk+S1Q1yw4fun8hwflPMHqV0D50C27+Hch/iZhb8P9P2Q
3/GPp8+Jzj/IT2R/4/uZuO+jfoyUXxL3gkajHPY97b878e+Knj+i9UdRq374
22p+Xbpf27FvYL3jfkOt83dHR8f2ccA5gFjPD/T/RyofqXyg8mRw6e+D2eB7
2X+iv6+8/ovKI582872Mj4fo+LUef299bl2e9y3ev/Yub6G43Mn/48b3/D95
1vI3edZ5+spgfD8+yLPK/9Vg9Odv86zzy4vP+Z951vo/znOt9dt6f/by33jr
D3oDZpV/k2dt/6s8a/2cH5LuX3v2ZeQbYVb53+ZZy534qcjvccaQd/IrjgbX
mh9eeZS9+r39Jdr+1u+H+3wjsc6v/8yz1uP436r/ALHOD+f53v4EfSez1v9+
nvX9HPuWN//d/n2VZ23/r/Os7XPiE3vfT5dfG4z+c+5HtJ6fnTuvyd78nj/J
s65vg1We4h/w/euObQN+94h7ONP9kKh9bxT7k+aRot8fB/hdUZzMavMHfgXw
Ly+MrxgtvxaOZN9Ld2Lf67gSvj0+89eFOT5Dx7r45vjMErcY/+7j09Fxu9Dz
N+L6ID8n3+/1gH2DeDPnI8QnIt7K/naUdjDX0i9E6/fiz907En7nEJf2ryfv
jV90/FvLt+6fvctbKC2Pti+6P0Tnx723zytv3b5bf/+t1x99fuv6135+a773
53fu3Pl++WgwyseP8qz1ePcfnPjLI+w2yD9G9h34nyA+It8vVf9kkdtb/lHO
G1iaP/Ba73ek/Htn+V+DSPBfk3nA/nmIXziIn9/ww7rP7+joqI++PvcN/X7/
Kc86vri3+2PhH1B5R0dHB+Fe9gfv99VscOnvM0/e44PB9zI+HqL9nwyuJe+1
bzJ4L/JR/UVreW98LKh+w/Fvar1/eNx6f+rti7XPK4+2r9e/7/qjz29d/9rP
79y5c+db5aPBKJ8+yrPWU2jfY0a55nd7IUz5WRCPAXmN2H9593gYn9nSj+K9
3xWm/IatAbtbQnzKyv5fyLc9I7925fxnM+zHyD9Lv5+Qfxxx8a8V318hz0Xc
CY4v2tGxa1BezKFyfGX4FcP/l+MvDFI+YB/j+D24tyD7z8jxMxw8kTzXv3Vo
3kDEx5F/l54fJuIDlXPckoG+/09ynhgQP4nOF7cOxI9OC/OHdJRhpPwu4N6/
HdeA9/sq+vtsNriW/L1j7fFLBu9Fns8HE5W7+oedy3s4PI5ZLq3f49bj23p9
RN+vdf1bb9/a9Xvyrfs3Wn/r+bH2+916/239+Z07d+7cimeDUZ5+mWeVf5Nn
lHvxu2HPQdxAjt8+Iv8Y9KeF8Xe88ltHrfdHvtNW/nscFxP+jLXqf8L8MfLP
If/duFC/X2v+PT3Kc8V/da6U369DgH6F/VTs6NXWB/yakP/xR3Xr73g7VC8C
Oz7Z9w6yb82Sd4Lze4Qh+bJhv+T8IBpX2IqPy/dXvl25fQaK9yfn/HA0uPR8
4T03STz94+vTf6u89C/Gf96JfUz70bkfFa2/I4/d9I/c9xr+5ZR1fcAujzgH
lN8iCqy7mdZh6/NRP9/fNjYzP+jeCd8/cX8fG1z6fYx+X1t/n733u3X5yeDo
+UaB+1XE13q/tedntP+89/fGbzS4tDzK0fHx5L3yaPt6/fuuP/r81tyfv+7z
O3fufLucfp1nlA//lmctp7ytif2TvkhcOT7lLPadI/mh1ao/iln8W9R+yv3X
CNeqH+OdEF+T8i+r34LYbYdK/nMA8vsNhn/NE9uPK9n39o5a75ckH+PwXWHx
143Wv5X+n2U/gd2G/Z+aP1/8nWDXGH5x+vyEvJiwH339tFz3RYmLe63951qA
/26y7OfQm39P+J+p/EKovNgbYVfk7x/uTcyN/P/0/szvT9tTWj/iJTPr/Hqd
59L9czYY5bjvw6z1fzvPZ+Nr2EdaQdtPfmN8vwn3TZiLz2ef5Fnf74M8a/+/
n+e9nz9KEZ1/h0/yXHp+Tq/yrP3z4zxr+5z1OX2eZ33++3kunR/wn2bW8p/n
Wd/vN3nW8t/lWct/luez8yfx2f5s7I/HT59Z1++nJH/jcO8fGKz9b3Dp/u/x
0eBa8l77ou8XlZ8MLn2/teVbj6/Xv63lL0Xp+Lfu3+j8jK6vKKLtGw1G+cHg
0v5vPb5br9+T98qj7YvWH31+6/pvvf/Wfv7avPX2de7ceb/Mdj3ok1HOeg34
O6j8l4QN/y3YZ6CnHSn/T4L/BH7f/yvV33HTmMl+N5B+XOfPf+fLp0f5O9H/
j+zfA7sr7CRkn4wC8f3UTvTTfPvgJ8blui7EPpoeTstHkR8N+YvbXSoPuxH0
d+/Wef7Wofsk/F7hP3Yl/fm1MCNvqsy/s/i3iD8r8+BMf9saD/Icwz/u+Cj/
39g/YH+Df++81P7G/nkUXxnxga39KYwXY5b1+Y7+H/sLs8q/yXNp+1ufT9Ae
zgN8tfkH/3Ri3d8NrvX+s8Gl5bcOfA+Za/Vf6/E5GlyrfXuvP9p/dw/0AzH6
52BwrfFNBteS99rXev62fr/W8pPBpf1z6/JRROdfdHyj8zu6vrz6PUTbNxpc
Wt76/aPj45VH29frb1t/9Pmt61/7+a157ed37ty5cyu2gHKNiyZxHWeyz2n+
Pcm7x/ovr/6OjrdB47u2is8XBccnHZ5Z2/dPwlgfhf6t1QC/l++ctqf4+Wy/
r9x+xF+E/XNg/2I8f6F/cMcz4K8Cuxzf3xhlX4f/bWL73TeExW+Q7UseND8c
7OvjMvnmoHspPL/gj6X+UxvJr6nfZ4NLv/+efLT+KCfhiVj7/5t51vH78JTh
7106frB/j/91ytq+P+f5Wv2P9jHfy/mr9fy99/qPBtdqX+v6k8G3Mv9d4D2J
8f4Hg0vHp/X4euMXlffaNxl8rf6Jzu+1+7e1vDc+UXkP3v2S6PtF1090frVu
XxTR8R0NLm1/6/679/pb9/+91x99fmu+9+d37tz5fnk2GOVHg1GeRL8+wc/h
r6flA+J1SVyboTC+jVcOIN4V9G8T+ReE4ehvO/aJrYwf7CFqx+D4pRIvaoT/
G/vfiT/c8C3hpfY3B7DHw69oafxG2IfUf/fhVB7xEtNLKSf/W9hj8f6J/XN/
dvr/h+8va18UyN+YnPyOVnkrFNf/+Px3Cf5p1L6R4lumK9vHMa7Ia7c5/0/x
ux0R3+3a/okXYu1zx7XOL8k5v3jwnu/JufV+bnCl93fPd05+5FuH1z+t+99j
7/x97/WH53+wffeOaP8lg0vHp/X889q3trz3fpPB15IfDa41vl7/rC3vYab4
wDPHBw7O32j/Rutv3b4oou3z5vfex8crj7av19+2/rWff+vv17p9nTt37nwp
zwbr331ksJSrfwaxlhvQctHHa/4cyn/E8TkHut/e0bFHtJ6/u1kfyLsIPyfK
nwP7E/yAOX8U9gPkzeH8c62g9aPdL4U5PrH4+6j/DtnH1H6GfjizDxH/3x+f
liO/Iey87H8E+yz6h/wbEf8V9yJG0i8gPmVqlB8O/TEi/xPnL0S/Io8r23eR
19H4fkSB9x4N++aR+mdpfru14J0H1j6XFJ9PgvJufjpHPtq+aPvD/ePoF28d
refXrdd/NLhW+7Ze/70j2n9R+WRwLXmvfa3nV+v3ay0/GVzaP3uX9/CEfK3M
hfVHxwfnV2at38sP68DN/zrlubT+Ue6PM9fqP2/8vXKv/71yL/8p4hMxl/bf
8bMxy9q+/8lzaf0H+Tvmav3jcK8/xmvXf+vPX7v/t/78zp07X85Hg1E+fJxn
lCO/zYBzx8L8Nkn08dDrcv6wjm2ieHwwvsjTKPEePfnW5R07gdhVkMcPdp5r
je/h8fk58L+rbt+S99I4mGzfRH62P5/+ne7j0j7kbzvzv0O/wQ7J9s8fCOOe
BdvHELcQ9zcq+4fCH1Xz5JF/nuadNPL34XuRYOck/022T85/OC2H3zny7yUq
R38mjA/lj4Vf4yh+fGf2Z9gf3xH+OpXvHOhfZu2/T/Os/W/wtc4/s8Gl5W7+
wc/yXGv8Z7lvxaztf5Pn0v65eYi+krnW+x+kPubS+j39XfR8783v1vWPBpf2
z1H04czF/Yt7LcTa/td5vpv14WCW+chc2j96biHWefba4ML6J9nvmPX7bXDp
/PXkvfXhff88+ej69Nh7v6h8tH+3Ln8parXv3uH1n7c+vP711q/H9w5vfLxy
j/def3T+7P39tv781rz2+2+9fzp37nz5+jx8nGeUj/S76Uy/ZcArV/z8+e+Q
9wlx2orlg9D4cOQnc63nrw3EW8Xv7qGyfWOAXgV6cvKPQXzGWfx7zuwfUcDv
B/Etb0z/3tEY3xufubL9Rvfpx2eG3nGm9Ydyy/9O/d5k3Qy0fyaxVyXJC8f+
hyqPfZjjw0aBuK1id+T4s/Dbhv/mWfxTss/x/qT9IvKJ46PK+w/G+8Oup/Fx
N5I/716w9vnH43uH13/R/o2O370jOj5Hg/v6KYM7fz/Ps/6d47/R97cYvPnt
cTK4tP9by3vvNxl8LfnR4FuRj8Kbf177vPlx64h+36L7q7c+Ws+frSPav9Hv
mzc+4f3fuV/XGtH+WXt8os9vzff+/L23r3Pne+a1McMvAvHratuXOt4K1WvD
DlBbv09xB8/iD64Efb6TfxF+iZr/bTwthz/LiPxr5B+EeQ27w8zxGWF3gP/j
A5V77Q8i8fN/fPr8J9hfxL+M4xce8P6w35J9Re1LsD89nJZbWHt+XAvHx/Ef
DDtV4vwcUo64NvBz1P5FfkOs45+fliMuJuJgptr2cwcJdjvx0+P5oX6NlKdS
1xfLk/+c5u3D/QzKb+mC7Y9s/wwC76t5Jq+c33B1iD83c63zy2zwrZyPWsPr
v2h5dPy88lvH1vv/3tfPQex1zLX672hwaf3pdZ5vfXy0fzz9q8Gl/R8dP4+T
wcXjv7L8ZPCtyFsoLW89PreO6Pctur968pfiVsYvuv9F+z9av1feun4Prdu/
dv9Fn9+a7/35e29f5873zPMHeUb50WCUD+/nWeUpLvzS+Ox7xVbeT/1exM7K
8f/C9YtdaBa7BNuH1G/yh8Lfq/v8rULfH/EBkZ+M4lOG+wfxEWEHIf36QfJf
Ik4kxy+8eXxtfGaJSzkcnjn6/iov830w/FPTozDsqL9/eznb92BXRp5C3p/1
uWLHSpXsV8XyZNdfLB8E4hkm8Uvn+Iaw5zOXtg/2cWaV/26e72Z9OXDPHwZf
6/xz74j2vycfrf/e4fWPdz6P9r97/r9xeP55Xv8mg2uNz2jwrY+P9oPjHzkY
fK3xmwwuXV9R+ej69tjrn73LW1D53+e51vy59/03+n2Lzm+v/ntH9Pvlya9d
f+tyD3vvvyiv/fxo+279+Z07d75fHj/JM8qHrxC/oHIDXnkxPPsKx3/8BpW/
IP4yla+MUew7iIOHfFM6Pk55GMgbBjsE51+TfGGIi8j5wY7Q3z8+M+f3aF0+
Sfko5YnK10bi/GzsP3in0PeHXe+F8ML1OdP8hb8n5GcnPu0T4k/Cfke//6dH
YSM+J+ofkD+wsn0+CvhvchzQWvs39KlJeCzMD4vy9FGeVd6x/81/z7PK/yrP
Wxmf5kDeR2LtP4Ovdf7wnn/viPZftNzje0fr8TkafO/rR7/PTv43j6P9mwzu
4zM+/4fBKD8YvJfxi8pPBpe+39ryo8HXkvcwSj5i5tL6vfG9d3j953H//rVF
tH+j4+etH6/c25+i7LX/8CbP13q+V752/f35bdvXuXPnzhbPBqN8JD5Q+ep4
MT6z+PUMX3pmbR/Hd/ziaTn8EmfJHzX+8bQ8IS6c6L05P9XwIdXD9jXEV5S4
dumByg3o86X+ZNTvlat985vCnJ9M3jshvh7nD/uqMNlZ9PnIuwX/JI5f2Nh+
l5zyS1E6PpeWK2AXx/ytZF8+Gz88h+qHP2Iy8sO59beG+CuOEhf4LH6qA/in
op4zefGP1TjE5F83iv0VdsJE9h/OjznuLH4x9BmD8ET3N6APHfC7hexziL/J
rOWol1i/P7/Lc63v19HgUnnE92Xey/hG4fVP6/OHV37vaN2/0frvHdH9x+No
/bcKfT+Da/VfH5/LUDo+o8F6vjC4tP8ng0vlo+Pvsfd+3vxZW97r39byHibc
jyWu1T/3Dq//ovtjdH3dO7z+bT1+0f3b4+j7ufv7mzzXqr91+/vzt/38vbcv
2v7OnTu3W1+jwVr+9zyj3IK2428GO/JRaP1i74BdEPbA0ucfHp//boT/zp+W
yXs4OvY7rxz+jMM7wv98Wg57I/K6DT8geQeIN6h5An9B7dupfc9D6fx2yxGX
U/KSsf+M+iUNp3xW/oV8eeL4jwvzu82Pz38H+zfHrxlo3nH+tihmWU+aJ5H8
6+BvN1r+pfDbhZ/p107LYd9UOzzZ7xP6TeZ1afzMrc8/IIk9Esz2SY/P/J9f
ULnBWv7feS79PjX/Pn6a59bjey0gfyLztc4X0fG9d7Tu32j9945o/x8N7uun
DF7/RPs3GdzH5+3A+x0MRvlkcK3+j8p77fPm19ryo8FbkffGx5O/FLX25+Pr
PF9tfeN3DbE+Pxi/Avd7mUvXj9d/Hkfr9+YX7mUza/nP86z1/yLPWv6rPGv9
38uzyv80z9o/H+W5Vv965Xuv3ys/GLyX94tyf/66z997+6Lt79y58+WsenFi
XX/v57l0fcJfhlnl/5BnlV8J3vOL2+fYb8L2vXeFvyP8rdNy5N0bKY5haftn
yt83c3xDOU8eH6U+Pv9TuWW/QxzEWvE1q80fikt75n9Hec2qP98B/I3Qb9XX
D+VtHF5S/bCPWf6vDg5e++HXh/2Dn78yEvx2iYv3j+/kuXR/bc2HV3nW9v8w
z1r+L3le+7sHngwunl/O+7WGZ7+7e+BeC/Fe+ie6/j35aLmn/3Pxr2OWtzI+
0f45Glyr/736Ea+Cufj85/hfe/pRNz/qX/Ks7f+vPNea/x5Hxy8ZrO/v6I8P
f8uzyv8hz/p8Rz88fpBnlf9NnrV/Psyz1m9w6ffX6/+ovMfe+EXHv7W81z97
l3fhxHeP9m90fnnyXvui8z/6fmv3X+v2r92+rdfvlff6t/38KPfnr/v81u3v
3LlzZ4uPBqM8vckzyltD7WePz8z6A+R1Q/6tRPoRlj+zvxnQfhK5wfAPnCk+
6MD6W4rLiXiNKOf8dOPS/HYfS72iVxhJf3eU8lHKWb/nyR/k+fCTZP8efb9v
nL5n6fxIL+XvcL+O8rN58V23jieOH1mov9Pxw7yWecX6IcybA/LM0fxUfRPm
759PyzG/kaduZv9Xjp95pfiXpfuXritind9i7xqJVf7XeV57X74Xng1eu12l
7Yu2/9bRun+j/b/357eu/2jwtdofff7e6996+5LBW3n/aPu23n+TwbXkvfZF
38+Tb/1+nvxocC15r3883rq8Ba8caL0+o/Pz1tsXrX/r7ev1t63fK7/1+vvz
t/38aPvW5q2379bb37nznlnzkhFruQexp8HPjO0LForrl3h9er/8vdP6E56L
+7McX1DsL7CrwQ+uWvt+f/pc2LO0fY5/3Nr2Pe/5I+dnY/9PsQshriT7F0aB
94J9d+D5hfxv8G+k9sH+NRr2rRH31uG/yu1n/ziKH6n2OcTPXDq/nPyRGE/1
4yT72wH3tTHP2f78KGzZ91oD+43cG5j5/sD/yvNZ/xjxb2aDS8td/tBgtO9L
eVb5jw2u1b6VeevtX7t9t45o/7cen9bP33v9R4N7/fuof+vtSwaX1t/b9/b2
efKTwaXti8p7HH2/1v2ztnzr8RkNLpW/FNca39brt7fv7bz1+j35teuPvv/a
9bce37XfL8r9+es+P9q+tXnr7bv19nfuvCZ768cCyqfP8oxytf8Qaztg3/r4
lEuff+vw7GuXolT+0vicWo78YpQn8FrjO4q9Re245L+J/oTfG+c/Q/48jc9P
+fNgF4bfaGL7JuyO+LvC+Jyt53f0+do/Y55L5aP7T7Q8yhoflljLv51nff8P
8rz2d6HW92NtXrt9l87vW4H3/q3Hp/XzW9d/NPhW3i9af+v+idbfenxb158M
Lq2/t+/t7fPkJ4NrvV+0fWu/X1R+NPha/bu2fOvxvRSl9bde39H3v/X2Rev3
5FvXv/b7b71+r3zv9a/9/Cj356/7/N6+bfPe29+5c0v29NPR9QW/JmYt/1me
tX0GvPLWqPX8dKF9r/bza+ffa43W7SutH3ExZ/jZXds/zkDp/PHWr5cf5mBw
8f7wkzxr+Z/yrOWf57nW/jh9kmftXyf/m5c/rzV7/e+V9/bF2nfraD0+redH
tP61n792/UeD76X+qHzr+lu/fzK4tP7evre3r/X7TQbX6p/W7+fJe+8XlW/d
v6PBW5G3UFq+9vyIzu+9t8+rPyq/9/e/9/q98r3Xv/bzo9yfv+7z996+aPs7
d+7c+VIefphn/bvXz3wUHl+TvIPxd+MJz++T/LvC3xV+p6z+0ue3xpPEpxwM
/zbPfzDqX6h2XSP+5RP5v3H+uQl5D8V+xv6hw9eEJe/h8GJZ+6JI0r4D2kn9
g/yGGIf5b6fl7vw3oOUf5FnLe/65m+bZ4LXbVdq+tdvfun23jq33f7T+tZ+/
dv1Hg3v9depPBteqf+/vv/f2Rcd36+83GVzavqj8aHCt/vX6Jyq/9vhE5S1o
/f+V51r9642v1769I7r+Pfno/Lt0fG4F0f7x5KP1u/dXd44j6QePpB+M9q/H
0frT7/J8K+MT7d/W/d+at96+W29/586d1+P0b3lG+RF/R4zy4d9OOVH+tEsR
ld8Kmtv3xN8KeQ85vuXWgfcehWGP1Pn5m1MujU+q+OKYZZX38tN9Pc8onz/O
89rruvMzzwaXlq/N0faPb/K8l/2hY9+Irq/W6/do8K2vj9L+8/qndf979e8e
4k/PXPr+yeBa/evVf+vjg3gbzHi/yeDS/vc42v9Ree/9ovJe/0TlR4P3In8p
Suu/9/XtoXX/RfeHVvNnL/D61yv3OFq/p1+7dbQen+j43TrW7v/W6+ve2xdt
f5Q9rP3+nTvfM1tA+dHgYnm613Ng/7+/nvKB7DuXQp9P9VaP7/gDqQf+h98q
qz9avnVc6/1G8itl/9Ljp3nW53+WZ5TPr/Os8o5/373z3hF9/9ng0vJw/zvz
+9bRenyi43fvaN2/3vnFq//WEe0fr7x1/feOaP8mg0vH7973N6//Wvf/ZHCp
/GhwrfH33i8qH+1fT97r39byl6K0/oPBOg5vDL6T9R39vnns1e+xt35vHdH+
DY/fmzxr/3+c5z4+z+yNz1rr41bGZ+3+j3Jv37bbv/fyaP907rxlnqY8l85v
2M2YUe7m//tenkvLJ4nHOBKrvAGvfG2s3T4d/9/lubR/1+b08zxr+9/Nc2n5
/CrP/fvxzB689996/2y9/TePH49ZrjU+rcfv1pGwDxM/Gf+fyz0+GlxrfG8V
eL/J4K2Mjyd/6/D63+uf1uMzfp7nexkfr/+89RUdP29+eOMXlY++X1R+NHgr
8l7/HgyOrp/S/vXaPxh8L+vbW3/R71dU3ptft47o/tm6/+f/yfO9jI/Xv9Hx
idZv4VbGp7QfWvV/dHzWnh+tee/t3zrW7r+1n9+585o8f5pnlB8NRvn4fp5L
5S/F1fa378tzviP8z2PR80vLnx4NRv9+lGft38/zvPa8utr8NXjtdm3l/W8d
vf9Xxntjlkv7p/X6vffxSfKezKXf52j/Rsf33uH1jzd+0f736r91RPvXW399
fGJo3f+TwaX9H5UfDS59P4+j/dO6f9eW9zDKfVrm0v7xnn8w2Gvfrax/b31E
98fo/O3775jl0v7x2Kvf3d9+k+c+Pvn/v7R/o/IWbmV8ov0T7f/W47/39u29
/VvH2uO39vzo3HlNnv+aZ5QfDS6d38lg3Z8OeY7uX568lv9QGP5h3y57vr4/
4kUyU7kZX9LDw5hl7d+f5nntedX3vzL2+qd1/60N7/0Gg7fS/275R3neSv9H
MUs8XOZrzd/o+Nw6jvKezE/G/+fy1vuT9/x7R3R8ov1/7+vHe/9kcK3+9eq/
9/GZ5D2ZS/vf42j/R+W994vKe/0zGrwX+YPBpePjYZZ468yl7fOe773/rSPa
f976iO4P9w6vf6P978l763v4Qp7vZfyi4+OVe+zJ3zrW7v/o+LR+/t7bt3b7
9461x2frvPf533ldHj/J87Xmz/DnU+b8fOn3pzz+nuQf5f8LP5F9Mv0qz1ou
+ZYHYq3/R3nW8m/lWcu/m2eUT+Jvl4hV3oCWG9z3h+vwrffv2u+XDN5L+938
EHvHT8Ys72X+3Tta9+/R4NL6bx3R/vHKo/X39fN2RPvX+7559d/7+Hj95/X/
ZHAteW/8RoNrjb/XP1H5tfu3tfxWsfX2rQ2vf3r/tUXv322jj8++Ed3f+vh3
bBmt53e18ju/P9LR0XHHuHD/u/Xyjo6Ojo6OHPr3o6Nju+jnv7fjDt7//wFY
6XsI
    "], {{0, 164}, {223, 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{223, 164},
  PlotRange->{{0, 223}, {0, 164}}]], "Output",
 CellChangeTimes->{
  3.6818203737027764`*^9, 3.6818204685511665`*^9, 3.6818205611197305`*^9, {
   3.681821211230321*^9, 3.681821219240321*^9}, {3.682761652287927*^9, 
   3.682761671053486*^9}, 3.682761748725534*^9, {3.6827618420070333`*^9, 
   3.682761857910368*^9}, 3.6827619876869335`*^9, 3.6827632369142227`*^9, 
   3.682783149629821*^9, 3.6828501250407157`*^9, 3.6828508596147523`*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJy0vQW4HfXx/7+5CUmIu1GSjRAIwSU4bLAgxSkuixYrWiTo4oW2OAUKpRu8
UFrcgizuNBBcN7h7ipXw/z1n5jVPZr7n3tzQ/s/z3Oc859w9ux+Zz7zHZ+TO
+226W0uSJJf9v783EvdK3//F56v9v/di6KjGe3lt58Y7r2L5Do3P1Xny/+xt
ec83nsddV14wRK57vKv7vrqkg/tsrxM7Nr5Pdxspz52aNt7rr/Q5d8wv9/ti
uHye2kmuu1euq04cIZ+/0/u0LCDXLam/X69FnvtRNz/Od+aT393TRX73e5l/
OnmYXHddR31Od/e77FCZRz1M1iefIb9LNtF1e6i/rONd8v90qtyvmCz/r8fO
5+6X9+wjv3tN5l9sKvPLd5JxZyfLOpaX+N9V02We5btyXXG0XFcv0sPv2whZ
t7qSeeTr6n5tIOuRnT1Ivt9Rnp8cJs+pju8t9+87tum+Ff8cKM89QeZfni3z
TGd15Hq5b2/5XI2S9aiXmdfPfxNZ/2zsaPm/7nPymIwj/0bpclMdx5ayXtm+
Mr7qb7L/+dG6X2/I+mULKP1uJPevDx7YnP7+R6+0s6xnmsn8qi1lP6oNu7jx
1K/L+KqjZLzZlUq/B8h80q36uPkWM3/h1+NLXZ8FZb1YP16sL+td9Pb7wf6w
X+wf+xlf7H99Qm9HH9AL9AM9QV/QG/Rn41P6hF6hX+jZnqv0Dv1zHjgfnBfO
j91fzxfnzc6fnkfOJ+eV88t55nzbODj/yg/gD/AL+Af8xF7Kb+A/8CP4E/zK
+JfyM/ib8Tvlf/BD+CP8Ev4ZX5Hfwo/hz7zg3/Bz+Dv83tZB8QB8AC/qY/u7
69I7PR6kX8j1ycnze750Y4v//J3SzaJjZDwtQselPq84Tfn5zuE+Sw7242zp
5D8f6cdTbze/G3+2k5yLan55z9bVc9JF3pMl9futlZ8N0c+ryXu5q35eIPy+
u953Uf1+I3kv+unvltL3TfS+g/R3y+jvNtbnD9bf6fXpBvr/Afq7xeS9Xlvf
e+t9F9T/r6rfd9X34XpffU66jo5P71fp74oV9Tr9XTpMvx+vn1f288zm0+cu
rM9dQX/fTf+v65aM1fel9X0efW5fHZ/uQzFO78c4Gb+uX6bXpYx3CX2u3q/s
pdfp+pUj9Dq9Pl3cX1/10Pf++r3Ot0r1XcddLKK/76T3nVfHpc+r9fcF84Wu
RurvlE7qhfQ5HfRzJz/PTNc15b599HvuP1DfdX75UH2e7kPxi8Sfkx1WfaVx
3f47vOK+X2Tmp437Hih8pDhbcXNU4t6rkX4erEut65qM8OfInj+fHx/jZfzM
h/kxX5t/V78+tl4L+fVkXKw3689+sD/sF/vHfrK/zMv2v7+nD+gF+oGeoC+j
t17+eugTeoV+oWfmCb1D/5wHzgfnxc7P2HC+uvnzx3nkfHJeOb92nof58875
hx/AH+AX8A/4CfwFfgP/gR/Bn+BX8C/4GfwNfgf/gx/CH+GX8E/4KfwVfmt8
Sfkx/Nn4tfJv4+fK3+H38H9+b/iwUxgX9LCe3h8631G/1/Hkv9X7Z36fsk39
+pe76PW6/4n+rlhOvz9ex7Om/h8+pOtV9NTrttXrBgY+oHjKfMp1/b5nuq71
Nvp/zsFEfW/R5+j5q36p49d9TvX31Wb+vNc6/nRLfY7yhww6U/m05Pwq/RYd
/PXJBL1uQ70fdL+Ep7MaPFE6TFbR+8GveQ74ruuZKT3lY/Q5y+pzOHeD/LnL
9f95Z/29rnc5Wj/r/cuO+lzlcwXrr/uc6n0yHV/B+Rjh6SHVc191DePV853o
uDPla0lHfx4qvT7hvI8M55Xzw3yU7yX9/H5Wuh+l/j6Hfyq/gb/m8AW9T6rz
h69y3o3/sC4671Txp2A/WHell6zFnwNeWc8un83++f+8BgrOVZzD0UvL9bpO
vNv/9d3wHlxSPlHpehXz+PEwPsZbjPXzYX7Ml/nbegz268X6sZ6sL+vN+rMf
7A/7xf6xn+wv+83+Qw/QB/QC/UBP0JfR2xhPj9An9Ar9Gj0jlw3w9M954Hxw
Xjg/nCc7X5y3gf48cj5N7kTORk7k/I7x44UfwB+MX+j44CfwF+M3yn/gR/An
+BX8C34Gf4Pfwf8q6HtFfz38E35q51H5LfwXfgx/Nn6t9Ag/h7/D7+H/4EEZ
8K/O9TrkD+gcPQL5Zzv9ne5fvr9+v5LeB9zS8Zmcpr+rkZf30eeovJUdrvdl
XU7W+6/l17MCHw4TfR39NQt4hxxRKV7WyM9r+HHWeq5KlTNy9Diln0L3pULe
Vfmq1vHk8Fn0RqXParT/nnEl+n2t94G/VHpeSt3/Gv6n+5gu4dfDzh98E7zt
6sfLuUcugn6S1NMz8ncCvcOnVa5LWH+VfxPoXOnP9Dk9R8iBPAd5tVD6r7v5
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
L4Jv2SMbN/5fHNy5gV/13zt4v9dSP7WvHsufxkgcyNAjxa/1wgly/wfEX1a9
dZq8DxE/WXHTJIcPxXEHev3vslmun0OxqsSNlJvKe6Wfs/3O9vrl1PcEN0ev
+nZjPp0Fh6rDBfeyRQcJjncTfS5bd0vxx03aT+7/6xnuueVLX77V+P+qL8v7
KQ+95Z6323pyn9fWdONP79lZ7vvYUfL8RS8TOWLoa/K+W2d5X+wQ0UNvPUj2
a/BYp5fVAwTH8kv9/hcBB+t51E404wnR79aVugLlF4Kj2SodHP2Z/hjsodCv
6WWhzlkW8t8tzoz7cX4G+PFanCl+y5DvZ36T0J+C8815t/MP/gT8s3zn4P+z
+DjOJ3ot+V7wMeaJPIA/k/sQX0K8K/1B0edCPiD81ezPxEugJ5CvjnzPeee+
1GshjyHUXQQfwAuLbyHej7w66ppiP6TfAHxa/Xn0NywUx0yPwT5JXAf+PPL1
0bOp98l8NU/R+pXrc6zeHa/rRI7Hr0lfeeSdUvHb4uGJkw19mK2uAH4E8DLm
o4KD8/rnWD9j6Af5g/hT6If1hS44N8Qh8z1yInYLzkfw32G/qALeWV/hUFfa
8gZCXTHr5xrzCvBDsH4Dw/+hJ+JT+vnx4i8weRccCuejwE82r5+n5WWGfLsi
+PWyEHfCvpneftCPn85ON9kZe73h6Ci80gsfEj3tFbEzZlv9SfjtRQc392dt
doDod3+6VfxnG30reXGXvyB+tPX7y/32fk3w7Pxlm99n/beFv3f4wuk51SNX
Ci4sL+/VHVc01avqrfsLTt26rlw/Xd6LW9Z115ff7tiI6yynSR5fuUmHBu4l
e60tcaK3S/xJvb3gXXndMfLc6cs31+f6PSY49+Sdjffy1Bvk82R5L1umCf69
pePpPfRnxY3aPDs+6uNlPujq+cLT3dz+mx8CHLy7r+iLR4xxv0u/HCn273Hd
PP319PRp9Nri6Zn7m70j5LXb+Qh2ULM30mck+AH5v51Pziu/Z36hrrWd/4B/
ljce/H8WF8L94G+MBxxGLwxxYtZ/ne/RD4ibhD/Szxucw0+L/oU9GP4LfoU6
MPBv+Lnxd+xME/xzDB+Ib8EOTL8f5Hn6FuHPww9I/RPwgzx9/K3kXaDHq55n
9UYUHy2vkfrXyCGa94dduNK61uTh8yrv1Twf+jDBT3VdkausXjP5eOjl2D+7
+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
8uItLxE+CX8L8Z1WTxE9gXONPxC/D34/xoOcsZDnz1YvM/QzsjhO+Cr1Lxkv
4wEv2C/qVlO/hPyHUX68KXkN6BHL+nUryQ9E79B8+Vj/0+rJUI+aPA+tW0af
+ErjYcxvpq98huYxUK8bv6/qr2avRA+GbqhDEvrc2f6gP4OX2C+xByAv0B8K
fzD6JHoW6xH6k1u/SPyJ6Guhb16OHsT+YB8FN+D3IT7T4peoz4scFvDO7N38
Dj98qKPJvtv/g98OewN2lDzYMe08EQ/DfZAjibdD/+M65CTkBPhEqL+E/cH4
EPG3wb/3c1/1fGsJ3/7+AsGJoRd5vWvFfwjOrHbhXOFretEQwbUdjvX20okS
x18/+Kjw/zeO8n7J/X7lnzOhs+hzv5zZwKl6801FvzpjqIx31Kpy/anvil53
2sMOz7L3h7atN87hVb7Ws13zzk94ba7iWfKpy4mddrvtmt4/f+1prw+fc5/Y
iaeLn7Q+XNa1GCPxn/nVSzrcSfPV35+dnqAv6M3scKFvbbLKE03r76QXnyp6
+28/erfZ/6uZXzWdf3aF9IMqn+/pzlu56YDP3HkMfW6zgH9VsH8WIf4lZ/zU
neG+oV+S1S+E/1CXC37C99QNA6eRT4f759s5pc4ocgT197HXIX+gz4Gr/J64
UeQB6vpjv2J+2GXh/8TZk0eteIG+Bv+wfgDcf9nAX9VeavnT9OGj3sim+n/8
juwH+W7gs9pFrV8D+ePED1H3Gv8t/j1em0g/Bot3BzfBrWH+udQDsn6E6CX4
bcFB7HAhD4E8R+r2WL9G6pHhx+McYYcM9hCry9nin0dfihxcAzcG+3lhV7Z8
c/zIIT4zD/67Iuh3BX74zmHc2KmZN3IX+8R5CvoffMP6nyBnsM7wk25hfqEO
C+fb4rywowd7ZxX0QMsv5XfrrSR5ekP3FFxa4wh5v3R/se+dsUrT+A977bq4
w4N6C73PYUc092td+5XoUZu9KfhT9GmTz1ep6C3VvPKe5vJentZT9JZ7v27w
z3r4ZMHdFUV/y1ZS++W3p8j7gJua48553eX7i/T9h+8F7w4Rv161j8SbVEf3
kHnuJnEu1e1iF86X3qX5PItt1U8neFrfuZHXE994RvS5xS6V+Sx6osxngStF
T9v+JPn/Ejs3xQd7TofNm9un073F/7n/3h73Hmieb1jvO1Xicj/ZWfDqkue9
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
TT1r5HW1t1reADjcWlw6ehZ4RNyt3jcJ8StWl4w6YeQXYvcb48eD/s884O8F
v4d/g0fEz6AH8Xz0f/Se4MezvqeMg32EXsCd0P/A6gFh74SOyFMMfX3MHon+
FuJV0mDPLALegZdWB5q45JCXx3yqcG6ykF8HLtp4Ay6WQa+z+JeQn1sFfPy5
r/LCixyO1Yed0Cau5a9+2/h/Nf3Lptfluyzvcee1U0Tf+FjiHbMJU8Tu+fUw
0Yu2ua0pH03rP/l+QPdLvnv16cLiHzpE6qRkk8WvVy2i+tbki+T9YbGrpsPO
aRNHq/NvF3/fgf8Ufn+fxJ9kAyW+JXvoVtG39rm1qV6WfrWG4No4wd1kJcG7
Wu2LxfXvSl2wTf4mdrytPxE/1svyfbHGS/K+/QvyfojYh6srRV/MT1Mc/uA6
j7P7rSzf/yD5//UmN7aJe8Xf25ZH5vTK17jb5x9OljjWZKE75woHiyOX8/SR
hPqrU99w+l/+VilxUcOP8nrgJs/7em2hvqfxh1C/2vr/YSeCP1G/uK8/z/Ar
63+HfAx/6+fPq+k1ff05hX8aP4W/olcyjjF+HPBr+Hca8h+s3y/8n/w51gF9
CHkfOyQ4TxwL/k3yx8nDR58gXwH/YvD3WV8g7IRZwBP6oxNfpP4/6wtFH/jQ
fy/v2Uc+8zzwn7z5Lv535odETwv1SW0dVf81P9woTw+Wl0i8Jv4y9G/0auQW
9FvWC/oi/xycIM8i1FOxPmPUrcU+ih4W8kGxD1r9zJBHav1TwLOg/6XBf1cG
/c76+yAPoV+1kodudoYQz2J19oIdE/kvDf66LOh1Zh8Ndk/ktmL65+I3+8OJ
Pu7jtld9PZWXfN5dkVzu41K22a5N3KvO+o/Uu7phZvPr5pH+Buk1Er9QH7C6
jOumy7z97JZfCu5NOUHw8LFzBCdOlziM5AjRk6qDF27Kr9MFUtHb9ughette
49T/JXEyeW/Bwer0K+S5Q8/z+tjzpzfFw3r0W6JHbn1f87z0joIf6b+HyLgu
FntiNUL9aBsNU7+Z+tMOHSGff/y3+LEOu0viOB66Q95Puk9wcd0pgovHHCH8
/bvfST/48T+2r+9FeFXZVT6vYPIGsr6HzZL77Sb1VfMLP56r+xdbjxf9Oe/2
X9VHyPes2sTL4rV3vZ74tNQnzZf7Ruwad8vnYt2Xxa+92cxPZ+cH8Ad7Hud8
rPSjyI5ZUOJmru3pzhP8yOJB0aewYyJXc/74vpd/LvzR8qHAEeyB2HvQE8Fb
4iLRZ7B7wb+x19InnLhO5HfqSWPvog4afijyzelrg3xNnAz+Mfxy5HUHf1+u
eXbYK0vqWZM/ofl99HuA7xbUpYHvLen5oPVrOlzsm+VrI90+WF4kein+W/Uz
on9TNzyDH3Md+X/wdeJLsD/ip8UfyvogR9HPiN+zn6wn8cWD/LwtzoS4HPQm
4nKoUxDqjpmdljwd9pm6gdSfJX8SO0bIN0f/s3qgIV4lD/bMIuAddkfrM0u+
AnGWHf19rL4o+BuuK4PdEz0/C3od5ww85/7IiekKLQ27UHX+70T/mSb5aeVG
0h+1min5AeVEj3vZnt4PWI54pk3/X7XN223iYjqP4E1xjeLNFaO8HjLjZPn/
dcf675fZzuezfyB+pfrDOcRTzBgruJdK3cviyX3FPpdtIXz16V/5eMLJgsPp
+SfL9Y9cIvbDuy71dVPGX+lxeqLqcUNUjxupODfS61HVlZKHmG+zsnzfceV2
6VnFVVc1+Hj52Hm+LueJAyWPLhNcLEcIfhbzL9W2Pfm7zz2urK121/M3Fjwe
sIS8X699N/Y+S3DlqqHeDjn4CsHjT3f28b090uZywyfSj6Lus5OXr86W+Nry
ObGfFpt187h2xbeivz7TPA80f+Y4Tx8zJB4mHfSc9n08Xcb9eTepV9ppgJyf
szQ//lrxF6UnjhG8u3AeqWd6d093juFHxp9CfhH8DP4Gv4P/mT8NPCNuPsbf
42ehDjh4gt0Uu94Azw+sLzjXkb8APtGXHD019H2nfg32UvIIE/r2ke+oeh/+
voo4DOpuY98Ct+DDGldq8bKKl/RDop6n9fEFP4m/XFuvg242lX7ZVleE+CD0
N9Yj9KmydUHPpU8GfJ7xkIcPfyavHH0D+SesJ3o2ckcJHyYOhTgo1ok8cfpe
weexu/Nc9H5wi3UKcZrUcUB+sDgP7NxJ+F3Iv6sDHlr99GDPzAPe5SEu0/xx
If/A6jMF/EpCfIr1ewrxLEXQ65DP2GfbhzvFDlafJH0IqpsE/9LDJO+tPk7q
ctWLzl2dFV7Z3jMaeFeX9zbHvXfna8qHy7Fpc9xaS/r3VUeqna/PH9rk49Xh
xwvfPKu/vN/TS/S70/dsl52tOvDQuZp3ue+Lwk8PeMXH86v9MlH/XTF/++yH
2V9FD8x+Ifpr/Zjoi9W4MaI/bizrUN/9tjz3uBMbfDx9Sux71ZbTZJ1aZFzF
Az+5+N1yn85N/WblCiP1uTLOfJgfb33ytoJ/PQ6U6874ja8jd4PEV2Ydz2nb
L7fKIlLHYNJmTk8ufyd1aIpnNxG7cU+pw5q/8pXft/1ebqp3Fgvd26bcU6aP
+/35/EFZvwMvb8gL6SVfSd/JA8dL3bYXBsq5u03wMal6Ov5jdY/w6/Tz5xl+
Zvwt2Nngh3YuuR75Gr2CPAJwkrqZ4Bd+Mu4L/pKnPdDzgTLWMeM68IJ+C+in
qvdZPCjxD6G/DvqizVfx0eppTfTztzgW9CLNX6A/fY0eiF6qfWetf9/WHvfy
nSSvxfroql/Q4nTRJ+HH5MnBt4knof4b6wiOgef44ULdaOoa4Ge1/lXsH3Y9
8DHYNS0/E78tdVvxP5N/gL5G/CPyUsjTq0NdIKO/2B+POChwhf+H/LsixGeC
h1mwZ2YB78yeG+pppuBtiN/EDxD7aYKLZh+dx19vfogO/nrDxysOFdz7UOMO
5xf+kl4kfXbyiyVuv1re1x0rjlurXfkOxaM/Sh+7k+9uWx+84p52xVeko1Xv
2Db3uFHuInbKY58WvfD93wtej95Nxr+9rxOWb7WfzHdP0S+yb5v3QU87+fpn
9Rq/k/vPkHjNrN/Xoj/8bXHBh9vFT1n2lf5L+RbHiP558FHtix95R+zNxTPf
ev4+XO2fqdpL9b2+ZSH5/OCj2r/wasG9rsc0xZt6s2UlznGW6IdZ59NEH/yV
5gN8LPphXb0j8sV69wt+Lf1iU3zJ7xC8K27aTea7h9bRuaUSnP12Cxn3vfL7
ctXpbdpH012X8vuw3XJN9yXbSPpiFJ1nyfMmndT0umKC9uP95lPRF/v82Fze
WeAekROywuuHy5zcWK/sphfFLzjpP84/CP+x/kvgFnJ4sHsaf+sdziH2TfKz
iZ+gXkeoew2/tTgF/GzkL+AHRM+En5PngJ0s9K0FHwwvGLfqfVXw98FnK40v
sTpbimvor9jNqEvNOln+RMj3s36hqgdanRv6I7F+oX6Z7dvJ0m+yGOfvb/kH
8HHwjfig0F/B9A3sj9hjWQfsnfBr/H6hTwL+S/L4TT8nngk5JNRjMf6OnQA9
vsXfB7kpD348y/vkfuBN6CuEvdj6+4R6YuAr+aLEH5v+FuJV0mDPTALeJSE+
rAhxKkXw81UBF5Ngx7TruV+HcN+gDxaHSp2WbAfph1As7/uS5//6TVN+Uv7q
Qam/sr70h8sW6SH1vJ5awuPhP2Y5Pa84axXRu7odIXz7kM3kfemLxZ938XvN
++wsJvpFctFBwufXuVT9eL0Ff9beyfsjNR8sPeLzNvMXqmM/9v8/UHCwnip1
xuoDtmo6/3zeTbydcrLXW/NHT/Z9KnY9Uuyk01duXif7o5keD67QOtWrSl2T
ZCWv52AnrW6WOibF5u/75+1zg+BfKn0riuWl3lf+1r2CY8UPPg9g8DO+Lsu5
N8r1r/xD8GBNwcW81HiRdS4RvDu5EtxZdWTzONP3pO9i+fBUee5idwo+ryb4
l77Wq+l+l/mgxjpV5yzi8ysvkbikctfPvJ192V8KHQ/eUPbtAakPly0ifSiq
wS94++iq38i6LNTi+kVWh5zjcW/vnj7PZ8qoj5uNNzlf65ou3NnxK3sdOMDx
N/id8T/lh9gn4ZfGP0NdDPit2VOpC0k8PPW0Q/8G+Dv8Hv5v9UmIg6PvH/GD
6H3oH/jtRnp+kgR/WUbdT+oPhzopVncTPUjtpGY3VT0QvTT5pX9uQr8i9ET2
9xL182G/HeDnb32iwCH8hoP9/InPMDsxdjTsnehz3f08SvQM4kPIk0AfAh+x
XxIXg/0A+SHYNa0/H3FS1EPBrom+E/x4pseFuBXzF6L/gWfsV6gnZvbf0F+B
8ZgfMPjliqDfZeD8HOppch+uwx9ZtGLHNL9CwMdyrPgrshunCN+6cyPhC5Mu
aI5v34l/rzpwlM8DO3sbn//9tuBbtdy/Bee2faVNf15xyUftiouorpY+DPmK
Owo/uv68pvw1P3oh0VP7jRI99fpF5X3mV+3K26u2edzz1+EftPm7/Jqn5q5+
9K3HtV2n7LZ1vF55pdaHefpF0cfv3VH7Lh0o+FlJ/En6ueQjpLfe4Mez2RTP
v+9aS/DnTomLSc+7161/NVNwKVlW8taLRx8RfW+zB+T6jqK/Za9Obbpv2YGC
f9Wgxz2+HCN+wOxc+V3Vxe97dfBl7cpPaPV1kNo/353m5YJtBB+rl6R/fbrF
ad4//cfnm+djbDBI8i7ePVLGvd2BXp5Za14fH3rA98316kMHCf/4vfRbqlYa
qPw2E7vpLt0c/+McW3914uWIY0MfjH0EBnj+A3+2PgD4teDn6IfY9dAvwMPg
7zP/FPwm1JVMQnxjqv3byYNINJ+cep7kM9SjPb/Cfsn46DvBuoCf8EXLl0d/
oJ7Yw77vrOkfwZ9nfYuDnkfeP3qH9SMPfs64LlZnJ8gP6Nsp+gq4gR6Pnw09
P9SLJl6IcVTBrmn+Rq5nP6ErcAU7IffD3wUe4ccLdgj8hpaPE+qr2P9DPkIZ
4lWqYM8sWsE7i/cMcSp58NsRp1MHu2eG/Zn1uEX6q6XvDZXvJ8yUOPsjFxM9
a/u/iXx8qMSHF/88Qz5vKfpZ9kuRp5PntG9Pj8283XCzpG275/xfN3CwWPyX
ohfWzwif/O6hpviR/rST4N1/zhK+c+v5mtcm9R6ze6WvQHnKU8K/9l+9eX3/
ByfPlX8u/X0ieHni0sIvR38p8S6PfCL68G0LNddr7lpbvp/3M7HnHaV95Pfz
eXPF7Wv7z90/Eb2jq9bTPutqef5yI2R/Bshzs4V+8PVp7rxVPut7MVXey/19
PE/158s83/5Anz9N9MTyLxK3W8+/ms8TOEr4fj5U6nbm24sdN3lqB9G3z95b
cPQBeW56v75/Je/Vhhqvev04uX6XVUTOSu70euU34mcrP7rF15/+9LPmuPRO
++rHpt98IfWAzvf1wJMO0+rGeIa0Ytf+Uv3am4rdNN/5kKb7XS9wipcrJt3o
z8PhR8n6PCp9KdJdBvj6oUd5/mf1KeCPxPvhZwGn+nm+Y35A+DZ1ObHfgVdB
7zN+D1+Hf+Dvg/8Q94+9jPw++DZ5COAa9iX65GJ/WiTwT/regu/L+fnl9INA
L878c3PyJshLB08fFdyrpi/g70d9mFB/E72AvMo86Hno29j5cuJfQv1o/J9m
T0ZfYn9C/zyrT8b+opeBy+jLIV7T4nSxT4IPxEFGfzC4E+ptgqtW3wu/IfZa
9CjGQdwLchPyRsg3z0I+QhHiVfJgz2wN7+rg56uxowa/HfbeItgxc/TqNSUO
Lc8E93gVHd9qjjtn7SvneN99265TsuoCEof3yErt8velXz7v86y+F39KfdiH
omecJX6iZId95PvntC/PBprncNOTbepZ6ZRNfb7YaJHz8zNOazqPvFi4bTvo
OKl/XS/9L+HnPQR/k1f7NOxd+cTHvbz/xLnC54/RPgTdHhP8XPOR/yp+P77S
3aWOTdVT4l/rs6SOSjnhCp938VutozLpEa37NkCu30r8qXmPs4U/d5P1zabK
PIttNA9y1OmCXyedIbi1vMQRZeedJP8fPlWu//tL8l4+L89T/2O1kPolbxjh
cfUp0d/TM+729HCB5COWQy//r/TAdPDMpvSYrfNoA/eK1Z+t5+b+VcsxMp/N
fRxVmUjeYHnmJV4PHCx5NXXPf4p9eN1XJX/ir5c072vRyisPdcyMv2Knww+I
nwi7VND74OdV8PcZ/+/mr6tDfh99G9A/yWcg3gB9kXx6cI38iYy6Z9St1n5F
Fiei8Zj03cs0v8H6kqs9M6cOqdbprMh71zgX25d3Ja6FPD/8hlZXEzsudmLw
Hr45yD8PeYH7oX9Yv0PqTYMT1IHFTtfTzx++b3UsqYeGPoucMcTjA/UFGB/4
kga7Jvc3vAl0lAY/XhX6pFv99dBvhOdZH/PQp6sMfr4ixGeafy3YM1vDuyTE
qaSt+O3KYP8skB8/9P08W3ulexwoesefD/Ly6863ih/vlvt9HbOFfmxX3Zbi
whdEb1rFx6PkR0u/mmSy9q3R9+xv8p4eIfw3X2W08O0pUgek2Ej6G+THqD9n
998095uNmsfbD4f+UfTZ76W+SPGIxBHm74s/sJw0zechPHmP+KP2uMfH/73W
1ft9/j6qqV5Qviv+0ewx7e80sXl8aPWw+iFv0LowV2r96xW8f7F4vr/v09tl
ipcDbhKcrv52v+DbfzQ+JtV+B0s92Fxu2E30vnSr/bwes6jUfauPHdxcPtpH
+vgl777q1qe+4Ryvn94Y8kq63qdxOM3tpul/pA5nMuv8NvEvu2SQX493n2if
/LV3S5vyTt1L7MvF5bPajPsttnlf7MCXi5yTjv+9yAebTpT4oB5nqp/0vHbh
eLrOtdPcun05j+Pn9TrdHL+F/5Z/7P15s/vnwd8Hf7f+eeAhcS3ElZAXThwh
eYToDdg3GQf2TfoaqX3T6jljr8UPyX3HB/63hOfXZr/EPjjB8/la42ms7iXr
drTEtZCHYXle1EthPOiT6LXEBdEfET9p0PPwc1FXDf+g9Tli/dDziEMK+SRW
Hxy9DXkm1Fex+pkhnin2VciCXdPqD4EXoR5LSr5m6IOeh7gV4puok1OF/B3+
j58PfZV5mZ8wxKskwZ7ZGt5lAe+qVvLRK+ysXH/qWMk7mvKxj0f7ma/i3+I3
SU7p4utKv7lsc35yeqiv1VP4RAHOfX+YyNPP/1ZwboE/y/WX3i38e8P72+VP
y3ZcTOpHP3Wk4Mf52zbHmWPk/9mL6j8cKHHs6UzxZ1XFs76vzniJY8nG+v4P
9W0ntTmu/GTp11Q+M1/zuMR7f/B5gkfvINcvp/kjR7ev31M+YRHRK38Y1vw5
U64Se+lvm/sli1m/a5O/1xtL/FGWSXxk/sW28j7uwPb1Sbr716KPLix9Z5NV
gv1w47/K/t8pfY6KFV+R96uPaIoX2ZSlVT7r1Vze+Wbtpt+X3z308+qut/LK
li5l3Pt9LfGw5dJOn0s/l35NxbgX2ke/5TXT2nNdeaL4D7MlpS5Jfa3kWxS3
S3/C/MsWx7/h5/B3+D38BDwwPwx6DnwR/xrx88t7Po7cTZ0Xy9NT+2Yd8huI
m+c+5JvhD6TuGv0arF4L9c40HiTTuBf6tfOqFxG/KvmGPC9DX0QPCfl5sX8s
/J/ngQ/kZxBfY3W5iO8N9aapR4D9jXU1OYG4EPIN0IvRc8jbxP9HXAu4xrg7
+3FbHbaQn27xx+hxoX9QFvrCgmdmFwh1pcEn6h/lIa4FHEtCfGYZ/HfIWRHv
yoB3dcC7OsS12PWPD2xT3yvulnNZ7K51Ov/5Ybv4Wb3e9nL9J+KPKk4Y4ONf
prws+sI6r0ncSbe7hD98+4XESewtcZ3pHsLvkkL53sSbm/KJ7F3Rf6rXd5G4
jzH7yvvX4+S5d0k/oOLLe6QvwfFTm+PwHyQ+v3xF/IfFE+KvyZ69U/SlTcVP
lZdSvzJ9W/S5/I7bm+PG3SFuIvd6WjVzOdErb5W8wXS3pSVe8W6f954uo/XT
Fhop8/hxcHP+3e/ruaqPGl/p3rv4OqLfD/f62f1/lPmf5etNV+trn6rNr/N6
8WfrCf9fQeIz6+PUHn27z+OvBlwh633mXc3zIraVeJrsAYkvLb4YJThy77ES
n/rwxk3thNWOHeeq70U6a9vm+Hfx9U3zbcp9p/r9zaSuQ95f+hrWC4udIBs3
rV349n/uP+jKBt5lG1/VLtyb4/3W6OD4N/zc+Dv+JfQFcA7/D/np8GX4I3n1
8C/soqG+p9kTl/f3ydS+aXEm1CHTOJcU++aCgZ8RJwpfI18QvY163OFlfh5w
U/MvrP4lOI3+FfLzrK6Ljo98tCT486zeNr9HfiDvgHhU6lqG/SD/hO/B1zLE
r2Twe+4T+lalIV6TfQM/Ld+O+BJwI+TrJcGPZ/nriX8e9lf80NwX/Re7Z0n8
S8hHyAJ+pa3YMyPe1QHv6qA3mhw2SvtzDJzg4+kW1XP6lPplDpug9bskDry4
cFkft9l3Qckz3mCjdsnN2akSB5Edd6vwrUPUHlRLvcnknhMFT04XnMlukXzj
fPgywj9HNo+DTNdaXXDtwtGCDysJPmQf+D546fzHut+X5TTvT3pHcK2+83rP
9/eVPP6k+r23kxar/nd1tlY9tHn8zZXi16xu+1dTPCjn3V/w4iitE/aUXFef
sGfz/PedOmh/eLHnZYesJHi61ER5X+WtpuMo+p3s8Xppic8sJlzi+fmL97Xt
Z03EnpqvnzUf3zTByeRvHifqsy7w+e/Xfujtp68e7v1obz7fHD+HfS/0+fUQ
oY/jH2m7XtBLg5vSczXfAX49+j8n9P/vb/31Zy/cXM/uK+uevr2Gp6N1pZ5c
uuWIuasnt8Ln0+X5Z05367DZYS80zsNfTvX6MecfuxvyOvZG6lEu7vEBvLB+
59gZx/vfYYe0+mr0ByKOBr5Lfj36CPVbyNvDvgmf577EHxL3Qp7eiv5zTl8/
fRUjhsvv0IfUPokeYX2jQr8J+gNTTzQN+XkWF6Lzs/zt4M+zOMyg5+FnK+gP
21rfWOpoUm8MnAr9hGq+D3XIUvAAPKEOGr8L+XqWlx/y062fUvDjgVNFiNOs
gt3T/HLs8xz6JyQB7/KlpT5EMukn6S/20yzpD9RRPifQV8S7b7vI/78QvT/f
w/vl0w2kj0G28iFyLv8j/UvrMb7vTnqu9s877vb22YnGS75y8iuJW6iO07zl
ARIPX+4Y+pNefaboVUOPE3vY5pOEL/8k4ys/2tHrJ5MmCD/fdPN2yfnl9y80
9yO9LPnM6cWa76f91OsOk+S5WwvuF1OkrmR+z/YSj7pA2/2UsiV+8uNa5lHB
j+HfyvuGGsfaX+SCYsGxgv+XN/cT8spP9f7RbLzU20q3E39j/qLE1RSdnmvb
L/Wf4c3rCByi/Y+67ifzvkL8kskLt8v8s+VEv9nvft0nX8+g+mMP0ZfPPre5
P3C9cz3//63U+ayu9fni1bOSN18udobGPYk9vN7mX/I+62jxn317scz7eKkf
Wnbe3eejpLv5z0u1yL7dMUTiPS/t1776C6Mfl/itvR6V/X/t3qa/K5//3Vzp
4enb67UZ55L/+7Ppzf5f/aZufF/s/17T/7f2KmZN8bh49hreDgTfh2/TTwi7
KP1n6RMIn+F36IEa52LxHMSBUqeLumTEj6zscYI+7/RzqLUumfnNJunvsM+u
63GvrqTflMWXUB+beBH6LeHPIm4HvACHqCeHfZA4E/QLcAS7K/bH4M+zPIGg
56HPWR0d/FvoXeh/4Cb1xkL8Cnqk1WVhX8DlEK+JHpeE/AT0L/RDqwM6p/5B
IU6zCvkLZn8kzyDk39Xg5sq6b+uKvzo9q1+DPtNNtI7gI7OkjsS+/eX/G0qe
Qr6g9p9adAmh53fk98V4zePcQvqd5RefInx+qMSx5Ie+I3lQo99o3u9t6o1y
zp+5sV18onxB6ybvJfEO2Txvan1Ikd+zw8d6/v6D2NPqdSUfIT9yHcGj9wYJ
Ln+5lvRRPUL6yWX7pnNl18o7S/xisankKabfSB54/vR3bdtzD5oq+fnXDPN1
tI6dId//dQMZz0fbiN3yj4mXF+ZbUOJ5Ftxa8GKy9v25TeP9R3g7Yr272AnT
C56V7/sKXtZnaD+7HtJ3t/5KPqd9n5P93EPyw5P1RI9Or9X61Kn45ZL/j72v
jrui6r6/dHf3kNIND0gNjXS3MoAiiEgZSDkgDZJSUkOLIiWdh+4u6UN3Synx
+33uOvt+3j2eZ7zPw+P31VfOP/O5NTN37tyzzt57rbU/zBoc3+NpTJ7Pe6s+
59Ukq8qvV42pPE7urPo8bCqI97n8zd1DVpkNnP4UuggznuLV9FW8pq8U3ykH
6oKy2gnExbfhA2fVGAu/mTIV4EfaMIaeP9KE+34aa+CfZ7dryNdTeaA/lRt+
w1bEQ3zXagNbJxj1y8OHaEEdvO9wbewv8sf6fiPDWuvzFkkGvhZvVa6pf8R/
fqfaH/Ofx4K3/I+tvFn8W9/oSP6t2fJFUPgo6uXkOOjy96Q8VKBPIM3P5BtN
/tcKH8mvm+JA8v+kul3Az0XV6SguJFwJ6OApjsjFHxOeUT2JhvUO+EABvTvl
3cg/jHCZdBTuPnnU74LqXMSHdPULCviqkK6NrgfpywmXXPU8xxXnUR44oOum
5+l7xeLnQd830LfAxV8J4BrhKp2/y4eMfDUD+UFXXtNx6fUIpxxXHc/n4q0E
9PYu/0zCzQC/xt1Hj+7DXmlRr+6PeczcmIPn6Ub/inju8XNPvoqx0gfcvBFb
Ow+JFYcxPx9QviAP7oWp/m89QP7QuL4e6/AhwDmn6xeYx6rXAp89BvdFFruW
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
3APo7MWY2sC5Aa7+fs3QD9e4twT7S7IQ8WvqWa8VZ9EwVvB6pXO+nPY+s7KP
DdfvI4ejX7H5GXT3RtcK/P9wNhHXn2x86/V4nzsXH/Vfx6pn/FtzS2bP+9r8
4dc94TperSzwu7oJvif5chJfxVC4Rv0aiL/iuPR8Plfdz6Q4rgrHPSuB0luT
rl3Fl9RfSLh8x4i3EqifJeH7J9038W0COjeq/1EfItLpEz/Gxd8kX5cAPyaU
/CY9T3lM24qmcLMU9Hbx8f3MnPHdeP+vGuYC+CQ7s07xut6mFH5drDk9M6+f
b9kTprhILjiFvj0h4MuYxcBzkR/Bd9DJe5Pv70CesO3/ZIGgePKy2pdaXLTG
39QeT2zU45nZrSTwpVIafI/3sH431qGvrixySRuHiqcFoWsZFvf1eL4uvHMP
uQZ+X87KGIjDJ0XWfj+z88EwxXNGn8Phiv8C40J17ntybRfj6Vj1C/E4qeIL
1ecAdS4jWm+eJ2gcZH/yORlQ55LXeN/kfOjvId5Tuocjw4LCAZm7ot4vbPLy
18pn25XHIB7P+7vn7ysqng/ufi8cgus1HH0QnR8yRgh+B87j+raj/xfzplUV
fsSiCOZvi/puZ+TxE/V9pXhIku8L1eXI34zye+TL6eItikzR8VjhKPFbKB9J
+gbiSVJ/oQCvkngrlAclPir5X6v4KqA3oD5JLn065XnpOORbZrv4m8THJD0e
HU+0SIzXf0iAfOXht/6n85bhHio/FRjpfsfjA6jPWZ3m6vFoPedTGocy8bpX
AfhfWhOQL5Vn8X80Eiq+TONryDNm5nGIlTkSP17MIlzHkDw56jg907J5wE6Z
wDPuM0MQJ4p94BH6mj4PW34zIfT7xhPkW33vnEK+aT50FcJ66jn/2cNz+XVM
ImNMTz2TuXqPXofQOxTdBp3fgOKqr18MvR9bcVc9afBQP54ZjT7nec4D5cPk
FyMTTOd+M5+1jpB51nKKq3w5fAZEb/SVML895Ll/McTR87DKqr60yq/Tl2A8
wzsn8c/hOm8n6Srt72LkE4rXvIz/L9I34XW+V9+h3vrtM4570YsBt/LW1q/b
bkP/7ut3m+fZL/N4zxoDXyVr7m9Y587LydchTZSvW7w18Hmp3dQ737U942vx
XEIbYnQdLd9T9ua6dvIPC/RHVbqHgH5b6fsCfA3ygSFflPy87hU4TuFYLF6z
XHU9h3CK8qAU/5E/NPEyo/H3Ea+TfF5Ml/8m6f9Itx7Ij5I+nnw+1fmTT1uA
9+Lib5p3k/0r85URPcy8veCL0h1ba+pL7bpUtn6M982An7N49ivw6SD61Irb
yEfa7yncaQ29njn4JT7XeWtQOES4J9TWOZQSx4mMrRj2gMcPI14Fp5/eEMXz
+FYSXo8k3KPh9Nnlxwvr6fgI9RmzDoAf6CycAR3bnjba629W1fuJBl5PsjFM
eTQ73zjgWddPwhTvyWs9woUfojPw12xyDPdZbdXvMCHuH3vRYe6/fdjVl7DD
BKzTeoXic+KDrk+kBs/T7o++wkYtbK1jyHOarX7V+7TceeR9H/X4metEJOp+
9s2dvE9tTPB0zHEz8H2LfYttt9n6/1Upfd9me9UI4GW2PdCFVijN881rjnN+
68pVPK/T+pA2zjVObgDfbXfE6P6MC3sjpO4X8P0n/zDi45NunXQGhXl+knw8
A/lKxWcRoejWjawczwJ8TfItId2gj+MWvY94J4E4keI/4pWQbpD8qUmHQH7R
VL9z9VkI6NZd+vTA9dkXA/1Sk6X6V+cx3cPe3RTzyYdY91qtXmD9dxN5Tjny
Dv9frB2C+GbeZ8Cl2a3C1k9z7XCug+vAeTJOv23ID+6Abt1qWoyvW41cePw9
8p9O/hbIS7lwz3Rt//C9y8BXQy4ow/ubPuO8TCtzEsSDl6NGTL2QxnuxtPGd
3L81TH4mfzbE3AneuvtH18LWF87u6Mc7K2tpP447mdZxPE9WWx9/xu7G63ud
RwaFgyLaJ3wdsdXl/z13Dfej7psbecylqYLKU5o5UOdzsnrzPcxxSz2vo3Vw
l/b7GIcQ14mvVoSLv+IMzqv/f8VA/VwM4PxXkWEq6r3vHoD/z+JQ9LLrlM9L
2XPhut/ssTcjlP9itCwRPr17Mej7DKXvC/D9FY4Rz8RW/BbTxW9x1GNH6f9k
Co4bVp0YeJ7yoi69ns/lR0Y8TOKdBPzNiB8ZSl2PdO+2u78s8TpJV0569s8+
R31uaT7UO/8leoMIG7NKoK/0UhWP5YfflN2X10vk8DPe/mFv6fnu8vfpWH+m
EPg/FpKIw+61x/EOIm9jFqqEbbLj2v+5fAxdmdltptL1og+RkRF+Z2b/t3h+
cxXvhyArWdrzt955qJ+vLsWH3//+7Bx37w/yz/uyR4prus85I1q+Fj/PiLVL
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
XNXjHg07bX+c7+fTMa/Oe4p5ZjXmG6vsDHzvap24D9W6e2rejc3yvM4n8N83
82/Tru9FlGTo33Ic86Rx2AeezykeD4jT2/TX4fP3kac8Vhn4tW92UNcr8H3z
VfXUM1g9niIf+dsHwLtIzT1xzyjSgvuKZZ+Az8fqHSF4adSEL7l4D/U9kQh5
P0vhntMKPFrfvUyqnge8kxfe5zzE/KH4TtPrM/LzeOmnMfz9CxHP2RsKIX6v
nIbhkFFR4WD3/Nr8oojB/VnEe8hT2s3RT9Cah61ZCP2JZC7Ecc5g1W+weUa8
X/nDmIrX6aug9ESTLgA3858HHi4771nno+GsGxymOMsuE59dF7MW/GXFDPQV
sa3C2J/Tgeczh6l89/1oWJ9uBb/U2dad823tt7T6VjvzcvAyu/ZC3PW8J+Kw
nX39W3vtJC3+ibOjPPscWfWLMtyzYjz2x4P2t0uw32XbcLwe54C3C7IAhyoA
T+x75ZFHnMbziKKX8qUmn00fxzOD/Mtc/YZslfcM9IUlfCT9OvVNJ38VqvcR
P2ZbCjyeUuKNj2YQw5hyCbiX5rB/61QR/q0V+QrWj5eVr8TT5cC9rzFvW+s+
x7pvTTrEeV8A74Ta+nq/r/9fDWiA9d5F9EUQGY8iv/miMebxUg2Cms9Fa+iQ
rJPxgB+rWwLvBg0E337KaWxnlMR8vKqn53xsX+Y6aZnwK8xrpVx69kUd9HW7
HO0x/z1t7h3vtvoR16v7Le/60AfKT3L2h8C7/DX1fMyN4BHKX/A7iXs8zynz
3/bkcYvpIX4cFSb30zQ6V/O8Xk75Kf7zcYq+o32fef/xac/rvbS331/frlZC
67NvNFZ8FtqWuYG8o8I940okNk/KGZ0RdywG39eqkATXpQt8hOx20BeIQke8
r/u0Ud5xs50JvzPFX79lVziFeFPOiqt4TZy34exSPtZZlW7i6CHg1NWNiNtS
r0Hc1nKpiluH8bhRxZnShdNGHfT1cyqrPu/lLnrinlm/puJVlcX9VRR92Z2O
wC0rXkrORz1XRR9/FUiF9w9/C9e9qPI3OxML6+WQ4drPWTf7cJ/cNlPCxm+p
1Rvx177ZwKPUK7DtuQ44NSCpJ94Fvtd0jnvmMp//sUz8cXC+oXFQx7MVztGQ
Z9H3gfqnmy4/TuHSL9iq3mdQHyHyD1N5T+r/Sv2GKJ9JfYIEve/QG1+xiBh2
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
Z5vidSZbp8U/q04sfJ/x0KubMetzvG6h8L9tbP11a7w3XOsnsVrN6ztceZYX
wfklGwqfhOL1S6X3lum5r5fIrHBJ5SGN7C7flNxcT+7kU/uhPrEqnqN+PtR/
nfofWEU4P8U9TKXTM2O/yXP+T469fD0tfruLuoEJfqLVcTT+H0Xhx2Kl+Qrr
xHtTUAfPy3HPSZMJ81pLA+9bF5m9bn03TJ/v/L4M/EfG9PfWW/e6DNz5uASf
ZxfBP9l4PlC7f+s+fPft3byPmPlzMz7/tANeOXH28PxXpunQEZb5gfcXLI+6
oOiucOLlCcV7b4n4ZTDyqs6jl5i/o79g19tZdx38kts/od62HD6cTqWkTO9n
J6nuXZ9N1ip8fm5foL+e9Vj1nfviOM7zQeSg4j7zyymeeGd2HuztP7DtIL//
SiLuNhbc5DqS30PBvTghiPcftdcex372o1qP9MD32oi+7/apfvy4XVXf3r68
n5HsqvTnRaIC98qpOLn2Nn1fqzgf8uc/KIv7YJsB/Hz3Q37/ZUI9z67M+zHY
WXmfXOsW/FTsGE291xcXU6NOLJLh//miDK7bLy7/vB3F+f926DRtHtX8KSHy
ds0LRkj+TpAOXPlXOuRfovKK1P+H/MFIH+7L4fL3ysP5koG+CoRrqh+7nZjj
nEmPFb/SSKTHNaFwT4QR96xfU7zJc/6Dh7kiH3CvYQ9tfGa0e4T1+obfOa5V
joz4a0uusPFY0n7v3WelGs5HfH0PfhGNowQVX1iJp/N16RT07ZYfKDwq28pz
/U5D7I6t1+9V+R7zZbt8OK+K6Gskeisd9Dbgn/yqif449epo5xt5qbi27mlt
7wgfzuqNgfOFcqJ/baXDfp25ONcROvk4nYCbe8Zz/Dxb/rXqh8ZX4AuJpbPD
5BdijRzGfwfT1ecuheqPt61OmOqP4lKIfp3T6APOzwxBfVOuXueJ5+Z58E+s
sshvOmO3cb5mrU2I5zYth3/ZhZPg+U4/GZS+wEjWk30/u/Me6BaOXFf97NDn
zux1A8dtb/jjKGt9Cc/rLeJl5765ZzJj/Vk1LvLjhzJ7xndiLcc98/fJ/uM6
s+LB12QD6mUyDfxORLLwze8m6bQV7hmkE1B5RerP46P+sOTfrHBPKNwTVM+j
/qwFOM4ZFN8pvblRlPupGCHqPELBPZ/Ljzqswz6R/w3+/YOGSFES9bqiqN+I
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
u9b6ru9KfzS/uv/ZpX3COOgXpW472XKh2OMPZ0p8cdF3wvrmmaNb/bZyt91E
H+rHB7Zu45sODPAwnXR0Jd7Ff/hdfTj4s1Ha76CldZu/MXCx4l52oNSp5TtJ
H6L44ZMl7ne81BfGb68oOmt7hH2BijPfDe5jupfqb24YyXyYqv70zctVnn/a
b041nm1zucSL16jGu3RCWCeX/uVayeu+KrrR5XdUn/riNUKc/vZL9fmjs74q
eLZ32zwcRr7jHlKP//74wC4mD2vd3O6aF1K+YvYH9e/ekbx18TX159CDfFT+
zlskz52fqLrJ1FFTr+3qyDo64mtCHErgMcLPXL5zjgOPhDxeoXgVEa/k/SYe
qbiT08+IOCP8UPg79PWjDxF6Z+o/FuAtvE/lcSau/iNeSu8v/dVXc7h40AP/
VXXqn47OGfGzSwbzl3VadqTm8zrZ/6PuJ3J8Tz/yC9Wez54rdX333ST6Ur1E
/yw6XvzAYi3pg5v/tktd+JKftpnoAD+XiG7iM0noBw47qhLfkhNmVH++f9j/
piikX3z6XktwPtmqQ0J7/5tpEl/cc2RTfI5shysr/Zz0kTmiI7On8FPSY+6W
+zlj+2p/qhR8zrdw9QNDiobyc/kag8L7Muen1byXP4p+XX6N6ElnUy4XHLzm
1Q7pgMd3vNdm3Wf5QNiHpPyr8rTov0PfcI1PZn+RevLyNv0e60HlB6bol/A5
/X7oN7dM+HmMX0Q9dr+25397A71M4nvUgeOXos9FHLLhof5SBr9U6w4yx2dB
3yzSOnN4nSnvP/0Y4HlS767rCXgzBesLeCr6N7qj6b/r1sjvqYP/TPj/ZM4u
/5N+3v/6iJfp2uZzT56WdSn1O+XflI+593qtvyueGNwp+JccJ35etq7k/YtZ
qid7x1uvVeLJYFnfx/MvEnu23nzZTjqtmmf+2A+Er3DBTbJdMF34Kldq/fl3
Q33KsuVwwbtlDg/9vV/Nkv7usy9v3cZ/ubJ1m907s0Nxz/io34d5rF+tGepI
X7Fbp/T7ZRQXX1iJf+Wud4d+3d7THc9jtvh1hyouDb2nc87rD5MkLjp5XH15
tD+F/RLiLUWfphh2fnBd6eeq+wj5kWzxQIi7O0yUddIsmd/RAcqnPLJb4KeU
O0p+LlkkeaO4h/p31FGjS4J+peav0h9/tLr++E059XOKSyVxGvJgvf4NJzo0
4MtYfYPTJYuJX4K74CB9HhyfBT1Oq3fYSP+v/mK+iZ4v/RpUh5p+EsVmzt/7
oFtwPuhXxydr3eMFK36kz+XT8ckY6Q0f1qfDM1t4K9nvwv6M4B/+X9RO/DOp
hX8PftB6HsWbUmeafr9bXeuweMFM6euwltjr+IWjpf598lkSz+qt24Nr9Af9
0sPP/SvuZcPnir83/VKJd54q2/K+m1vjoPHPu7Rui6WeErx78knFv8cFD4cu
3SbPpdzy9NbjlPsL7qXvvi1+1GP/CP3RJ4+qCw+yaf9Xl51vdCSb3ltdj/hd
0a9JvnFddb+fMXI/y/EXhfHkuz8T1u8d86L0Vfzewkp/LJkkfbCKZXPBuf1u
Dv3Rg8N6wvjsYWEdX9fN6ro/6R9fap1/2cavCk+ri7wX+eayHiNemH6o/biH
yHoxO07+zvHn6GeDbleTddF5D61TJz7n8lPonsArMf1n128InmUE71K/l7k6
deKg4AN4QZwH3klJfbjTZ8FvYz+Gg/RrwB9Ef0XjotTVxZq3Qz8sok+R47NE
To8TXWt4n4y4m/ZlQudmhvwd7bf1p35exYgv3PmR1ufzvS888t9wf+L9hsh7
Okj4usWLWt/zt7bzacXeWo8HrwoemOIf/p/1Q+4SbuM684DZicOlnv0WrS96
IpI40vNa37DJ36rrDG55UezgFqKPmL7tdPMvU579BMG/6JpfCw6et0D0xXaV
OuViwTGCexeG9Vr5/be3GccreyzREJ+z2F1wL+v7N8mXrTwsjLMNT8Lr2Ogx
4etM1/6EX1X950knLxbcS34xV/yxX9fJC+r5fanPGH6y+M8bVNf7xzP3rtxf
fNS19dV5X3WF+Pk37Bri3Y73td3vfcG8ynVEfOtGQX6n2Fvzdk/ovF5F83HM
199oPm9D+X/xTe1nrnY97hXO/7JGXXS9Ix7bL8CPDD0wdFLoBwtvZYB7D9ER
43sjwu/FxCnRhUZXRevqwAv4mehXpquHv8vHhjho/Bz1BxOnz8J+rd5d7x96
LLaOoO6P9cP4EDdLxUnq8nL6Gvn7iL/+2er/fzrCUd58yn807hUf9AvmDc+/
iFaQz+/tK7oQCzVeo+8L+YqcelGPU7x/blu6bb345/fPNr/s3cAulb/cuVPr
wssJT4rfVT5Z3cd6/AmB/U5P2l38wdPDPgbliG2lruHxqBIHkwXLhXi6y0Th
Dc4d3KZfV+4jdXflb28L7Hr8nNTvpzttLXXnX3u+KZ2weNluncKvKRYcLvdr
q0uD51S0nCLXW24V6q71+2WHeLR+xNnP6rru/Frp31jsJv5lPl74quVJwj8p
wQnilOTh6DtHvzb8BuwovHz1u8ifGX+z2fwZQ3EHvojxHvEr4cPoedBPz3ih
+j36p5v/Q/88cIP8/eDQXlAXR78hdDbJ6+HHlZrXy6hLoE7C9Zclj5fCb8GP
dfosieJi3is8TkH+VHGSeG3G3yPDOrz8AOURnV2tB/fp+M8e2U2qU7Dl4OD5
FhPFv08u0XzcjWPE/7tI/oZPRR6+o/iX14l/Ua269V5LVeKgH8WBl0n8ceoq
ncqDzCZeH/I1ep8T2O30mlkSt7vxtDb9v/T/LpF46N9/0FRdX7Kk9FlKRt0q
ft6ZimvHa1+i5Ki29VHmPdUh/e7y4qfF/1z41/A+TLmvMd7K/WcH15/2Xxji
2+39msI7P8pDVhKe58hHBd+mFtX8nGV3ET3wBTLvyw9XfCN87jqfe4TvAXFC
/KsYfwYeyxKhn2M8yd7V87ijA78pU//N+CjwJIkTUvdO/BE9TfCFunH0x9Sv
Q3+aeoOIOCh4Bh+SdQD9GsBP9FpcvyHOK1IcpL9QSV4P/1Dr76h/iLQuvXR5
PPSxU+2rjj5LMSX8+9+G9uPN1vnPwL1k+9fv/084z499zBgpccJMtmn3d4K8
XTaxZ/i8d4hlnv5hVKs/lRzRJcCp9vAvbhD/yhp+ICNpD/f2kf5wxXG/61S7
mW8c6jSmK3wQ+n8n7R3gYHa25PniF+8VPsvPzgnOJ3v7+02dX7mL+nl3LiV8
xvF/Ef/uivfr8m/SbU+uKz8Yj/l9p/JnGMX5l4tf/MtnAvzLJq750ei4Hbqg
Ws8ulnVhOryUur6DR6gdlvcGP6LsFtpx/JwY3Uj8I/SRFW/Im5HPSnvWsMMd
HPQFJ76JPxrR/3xA+H4WxDepC8D/g3ep61yrb+gRfo/+D1bfpsct0F1x9XqG
g8RT1R9EP7rQuKjVc2i8EZ5psm543vQTQt8TXIT/At+FuCr6LaWrwy+P+av0
xzx2TFP5vHj7ZcN+UH8e1fp3sp7E08rPryZ/d1/v07zhYhjpyT3lvvYfK/5a
Jvqr2VzlWW6i+YlnNS9wt9bFTtR58bh8L/up8lOukzgPvOfc4VO9+Jc4/Msc
/hXt4F92qpxvMX5MpW513mOG2NHXfiL1BS9PqrSf8ar9pe/bET0rdaxqjXL3
KcH+4qfD+uv0kgMqj1e2zBYc3ukQwbmvHBngXfLjL7f+ne+8j5z3w1M7pgsz
P5LrueQuseNnfiD+zOjzpP7uH29LncZbC6vzZvt8f7HqeftR9BEeUHxn2H+4
mCDPq2xZ5SM9n/gy1bU77Z7KOq1sguqIHaM6seAX83uJLSTPDB5i5xVnUuoc
4NsP0vduzT+1Hq88oW392XoH/XLoWwdvpsT/g9+Cv0RfV+KgigcZ31N+i8VB
Vw/xDBzHz7R6d60fyMB36ujglaA/jV4YdUnoTRM/hieDvqfyPsmHkocDJ+k3
FOv5ksdL9O9Y6yNSxyOKlxrdNg5d8mYQN4IXan4k9Ss7vNT6PIt8iXD/b6l9
PV+ec/o1qX/PXpC+wNkM0XE0ntP/2EiflrrsYuKwDtVJxqN7hHEYy8+FOES8
vCDOQjzf4Qv4VfBe833qW53fVjr8S+rEv7RRP3Bf/d2M3uE8ablacC9JFou/
UBz5Ttt+z/VntB43G7uv9CuadpD0a33oR8L3nC75vuLGHwf2Pt58v0qcK4/b
uy78Sx6XPkTxKoJ3ybAZgncnHBvWmd/+svRx/+7P26xrK+6buVj8u/ZGueoa
H4tetx9F151Ft/PoJ1vjIcn+ob5KOvaPglenVtuppEldL+KkyY66hX+IXwh/
rFk+jItvkneLXH+9qMk6QQb4E9EXCD4mPBOnP218F3TC1D8k/lqg70ldu+Iy
ebwc3Wv+T//aHtXXE595VOv7UT40Wp77A78SHJs3JLSvymeKX5N4aHGk9MnI
3x4o/tyFoj9X3v1b0aWbrfy7rYTfm98jPOBk3LJy/tvI78oB6l/oOqk8V/Az
ndQ597/WyC7tWP1M8e3ech2Tla+82XKV64Zyr56V+83uVj/s74ME998eKPfh
UKk3Sg/bS/jZc7UOlnVRofyxM/V9nK51bLvp/eoWzo9Y643yDUP8KtvBP3Cr
bAf/snbwr6Nx0KwdPzC/SXnjZ/aX+37nLpJ3uvK3nRrX9CN/eDepf0h3DOvo
+p0qfsqme4rdPn2M9Dt4e1XZ/vGH4t9cMF38unnC/8yO+nk1/3TfJaUO4rRD
QnwcdGNlHq3sdYTwVH/TL+wL/gXpY5QeGObj4qFzg/OPZ/8wrBOcdanwNIds
t3jim72+u1if00c1ksdfDupG81OlP1D2epem4lj2/hLf6xu+f4l+njWZF8Sv
irXejXxj6uKbUSfFYY0no3hl/dTXCq/X+sSqf1hqPLMkXqnrgNjV61m/Iq3P
ixXPE+3DUOjf8Zbh9aRzVw7/nr6WPMcFa8h2mcGV118uJ7iVni3xzPit1UO9
ntv1d5tKf438uaGy/aZ8Xlwt6/ZyT+HXZIn4nfGPwvxi+nbb+cZ4U1mfRXet
JLh7rujLJAcND/eTxnI/WuR80ocGB/a+PEj+jp9SfscqWi+2w19knfdjwfPs
/SF6H0WfK71M7kO5lXyerTMyPO6jy4fn/yX1Vxa9FPh3+fly/4r1HpS483WC
a8Qj4lkaL/7W51r/H39hrKxLRmq9LO/N+cqjXl363iV9Bdfx48AveFzEYbIa
+Nee/5c5nIo6iH9JOzhY8r2XtF/KvY+K7vWt0oc2u+2Pi9VfyM5dQfTDFl0d
xjdn7CF9DU7aQPoMnbS0nMdW3QUPzxLcy68+JbD3+VV3iH/62DTBxXnHy//v
OE7inc8f0hA+5CeLvmY8b3CoS7r8ktX9CT77WHX88wtHPv5x4FNyx2xZL4zp
8bH4nR/3SFg/ajyO+gJ0tMCnpIbfUu/g/Y0df5O+r/hn+R19OwX3eO9T4qL4
YeQHia/Cx4T/ovHMBB6N5vki6iPggYLT8F9cvR561YXm/aJnBReymwR38v3F
ruY/UD2CA7VufaEed6TWo/xZ49IHiT8T3yd/Jy9rneYI/fvnqmfA/cW/0Oea
qH8L36k4Uu8z8eS11d/L9Xo2kP3Fu4r9y8+V7ydPat5qlh53Rz2/8/T7W/UO
7wf+E32KiRMTZ9XzsfztYZpfgsfFPEE3FbxhfbSr5MeSXZUH/U393TtyHun2
2l/rDD1frUsrJ+v1L9Lzv1/148Ab1Yco31c/7kbFQZ0PfK+cLvsvhurxWTc6
Py6rE//ai3/GDrcKz09pFgcvk7xlSZ+HW7p/pPnh7B3RM/O4V3xjouDeX8dV
5xPX1bjrAc+Iv3buE3XxH4ufNIZ7i31c9JNO6QPb3kge/t/M/5cX/kPW1/s8
FeY73pQ61bK/rJ+LBzasvj9LlPXlSTR/lw4K7XIBDwZ9lVebw1cb1MVhf+mv
NyK0A/hp8INi9MbUHpvOGeencVP6KcELxS5Tz2f1f/iT6wjeJReIvxKr32m8
IOoW+4bnmcBzVdzN6F8Eb5e6RvS+6WML3tN/gng1eVjyweRpFUesfgT+Dvqp
5Cmx5+gA8P0u4fct38x9Zj0FfmFnWU9xfweE5wlfivlhfhHxZ/2/1ct0Df9P
HBqeLzgS83s9PvF+izviZ6F/0CM8b643J7/O+fJ9cKVO/Evbwb+oa3h9hs81
8oD1+oEeB8sukv+0vkZfFdxLv6a6iX+dInmuw6d0iBeRfP6l1nhy9v4rbfL6
s4FvVfsfp0wQ3PvHvp+I/NTiHukNv/1IcM+ON0XyAfmlWmfzwGv16Qf9l4+8
+0ZNrQuwz9hr7Df2HPtS7tU5uGf5OPUvTDeaer51Q/tOf71Y+S/5xnoe6Mlo
3UICLxR7s0pob9DljLDr6HSuJ/5eOUXzatRp4R/AP+U+wH8d7XAKnhB2mj4O
1EvwPdYT+E3o5sDvQV+7JcQD/C7/XNB5xe9lnZDzfepDwAfqUAaG12V+Pv41
dhx8c/4SxzGc7Rf+jrg4ejwpzwFcge9MHjZyx9XzIm8b839wo1v4Pduf+17R
JP75/F/pfpfXwL9646Dt+YGG989I/DrT/n7pKsLnSQZqHuonUxqKixXRHySP
+tQzbePezMuq9bgu/3xYv7DBs8JrmXmq+GvfCuOb2aw/h/XsO53xyfTr2hn5
lPMrz7sYcInEb6+R/yfHh/Ua5T0zOnS95VojF/3r/Od9YN7n0/o2Z/8Pr86/
NzuSHy71ifZXsc/Ya+w39tzse5P9bRklOOLim+gAlOrHofdSqA6L5TnVPzTd
UOW/oLMWa/ySPGCieT/r1z5Z97dceD355spLAb+I21G/sVp4XqbPRj0G/quL
T9PPgu/l4BP2D9wC58Ez4qD0/4PnBF4NC3HHPscO9w7Pw/w7vu/0evAr4S9R
f1OCE+Rl+zs8AZfod8F1sU7gOfcOzyNyuJZwXpwn8Vbwmved+ws+Oh4LfmJp
fpJuO4h/tfgvicOvxONTjThoVCN/V9SJg9HtawuPaHPhRyVXiG5ZeujGoqfy
3VMEl454tqm8UPL0WpV1XeUj51Tj3mmHVvp5RVepV0i/fpLY+T6fk/zfW5PD
evdHjls8uHfV+Cer9pucOqny804bt1wg133b7Mrryq+ROpPsRKlnSH90a+X3
0q+PCOwT85/3wdaPhcSr0i/2EpzZbmRdeJOdL3n65AtRcJz0qCGdYufzJUd2
aD/Fwldb8T2NX6iMU6Z9Na6/gvDf8psmy3vw6NbCzz30jcXar8qPfHflR2wi
ccJiofI3fhTyQNITNd+CvwR/c0T43pf0+8Mfgv+C3wA/k7gjcVP0yohnogeg
OGl6OVrHkLi+SvkvNE+GDrbD30TjruS9UvAI++r7IFJfoXnGQnk12Zf1+k7+
UJ4beIhfxrqD+CH5S+w2uER8tYbfx/tBXBceFPhg6wzyx+AMPClwkfhkz/B3
MXYffAOXeS5dwvPwcU9wwfDK+Yf8Hpwijw2Olhzf4VlRA/8ih2O18A/cKRz+
gfP4mVx/7n7XXhy0Vj4wd/6kx8FiScljpmtKP4byzuda+XTp0FO0b/ojAS6V
twz/o+w3bTPumby2V+X/8/eq69rKRQcLfo3bXeoWjrykEvfyaZKfK6JDxb7f
Us3fbG8kxQWV/JJkzCuPBZ9fuHxdPJTk3H3a1IlJrtf+g7n0vysf3Leh8y6/
LX5e/Ivbw3rFnr8Rns8B10h9x73VfmM6IaxrS85T/tuuLbL+2W7p4H3Jh6he
5hLaF+v9/pW4E3+4SOo7+j8hOudv9Ane3+JQzZ+PVl7YqtW8jnSHeU/Vc194
v/MJur8rNF//D7W3G6me5+c1v/+mXGe+rtbP7qC/m6rbWPzT4mZ9H+bpdStP
IPqT8hwOl20y+aJWfnjy0Kkd6jfvR5np+3lwiA/G++R9d/XpGTot2Gd0whx/
E95OpPFN60Pk4pux8jVL6ho4Lvpp2JfVw785X1tH68hGSr6U/Bd1hOCS1b3r
eZteN3qkfcL9MdD/zqjH2E7/3l3/5jzQEyB/B26Rp0MP3Pl9kdMJB8cK/Are
C9dnw3hS/UM7TPzV6iX5HThBfhX8xd/hd/QLdnFPcIjz4Xj8P3b5PJ/3i1w8
k/gE843nW5An7R5eT+RwqBb+JQ53mFeJw7+4Bg+mbMcP7CgOFn6/kwX3ouSZ
VtyLu5wjPP5VTxU96TfP/0jrnv3IFO+yoxX3Ros/l99Rbd+jfiNa/a/y6s+0
bpM112zd5metFPhlWbd9AlwrXpjYkN8Wn3aL4M1NaUM6afGrp8l1TLmuTTxM
rhA/rnj9PMH9hWF8s9jwBrkvx+XV+1mg9TlrSTy7eFXsfbZNWE9l70sPNz9r
6PnY736u+58cvlf2PlOHvUTb+2lvpPP7B/bH+scyr7FXHAe9EfqE4xegK038
inwOfevwe3jP4E10kg5arLy84oAQH8AL08UkDwV/BD5IN/c77gNxROyw42/G
1J9Tfz8pvG7im7HGL0vim/RX0jwg/SiKzavvh+GN4hz5x8j15cMfM3+V62oJ
94v/Y/ikOmnpznr+/B480N+jm4p/5f2+zOX7wAX8wZT94P+wH/R08FvQi6V+
BVwAV9AHcHwXdInQ3+P6Cxf3zKLweMRF0a9lv8QRjQfEeiMKzytx/hzrqrhO
/ON44JDP/7H/2OFN5uKXtfKASY34Zepw1MdD28NB7mP6uNa/bHeYrGPnZdrn
+7UO6U0u9jHq6Lr8pLJX2opf2aG7tIlj2elbhv7c/ZdWfj9eZVornmVv3NKU
/qcf+R7Sfym56GLBzR2KsC5j24frut7i8gfke5dc3Ob30+MGBfOReZGyLgIP
eoTzr2R9RF5hS617cbqLxYbPSJ3Qi0uE7y/vOzor/TX/d+3EhvJ1Zm/Q7+R6
0MGEd+h5gugjdQ0/xx5iH7GX2E/sqeVpeE+brKcvD9Xj7RXig+EvupjwJqkj
J463jp4XOE09tqtPx49L6bOLfhl+AHXv2Hn2C/6uF9pz9K7Nvk8M70O5hvrH
9GOnj4XyXCw+B78G+6TPAzxMa9T3W19BXV+V+H2DQ3touqXO70tcvi8lLkGc
kj5S4AB+Iuse3hP8Wc67pztv9HvAi97h78zecxzmIfE+x+e0/lfgEn4V5+/y
fviV8GIitz7kvqcOz9gf6728Bv75+Gfhvo//Znwfp/+SOtzycVDvB6Y16to7
ioMR57ud1olet4fEbf6+bJCPK1b7aWV+Lhuw30dbDzZ3v7riYMXz3xf8uvbX
4u8tGlr5u3zE1NDfu130rdOvXSzbv31Ptjdf3Sbe5ctK3DXZ97BqXsqVvcK4
5Pvqp609p02cKtKf1tcn6IcX1Rc3PXaZcB6zjsIvIt7fLZxPvE+8DwzmZXqh
4qny18suXcL3l3U67+ev+jXFTzG7gf2hjwG4RNwJfgP+HO8z/p/z87CPidPd
xJ4m2B3lYWB/mx3ggdXTUUeAXeZ9RecM+6VxSOvXR189xW3qGtgPffPgVWab
6veoc9C8WeT4mxyHdbrpuGB31gjvQ3aCrHvo88D5JsuH9pQ+95Z3ZF2yfGjX
/23wPfpkUDePP49fCl64fB/1GuCV+Svk01j3YHfhbQ4KP7e6goGhfeV6M8d3
MT4JeT3qJli3ke9k/eH4nubPO92F2OX9mKdm/z2fc4nwvMAZu9/4kQ7/vP/n
83+Fq3+weDh46XmjDr9yh1d5DT8wbkffpRYOEheNjhA+ZzRa8zfDX27N58f7
7C86Kmuf+LHGNzs68rGbV+Jbtsy0uvDSvv/4meLf/X1q67a8++xK3Evfflz6
370kOBYXx4rfNkHilvEk8eeyY2ZKfHKO6KokX5Rt2nJBtZ7aJdfL7x+T/nj5
l56rxrVRgpv58d+rC/fyiwcF8934aLwP3cN5wvtTuLhntnnf4P3jfTT+BPPP
xzV5r+Y5PbwODrNbvA/orfQNP8d+cZ42//H/2A/8B/wI1zcPe2rxI/y8ztIb
I17o+saCy+iQ+b4KnDdxJfrswUukP4P1I9Q6PPCV/dBPl/p007/WPKDFKRUn
4W8mmhcsPJ/zBdHzQNc7pv6PeOFV4u+XWjduvxuofJ2uvcLPr+8S7g+cpb6e
/u/gEPdpqv49p0e4v/u1n/c24XGyPfX64N9ofpR4Iv5vyv3ivUGfzvFdTDfA
xQkMd+BzEk/h/WKdSf2iq2cwPqjL+xGnsbpMx3sxvHG8T/CibAf/fPyTeZe7
fGHm4pmJw6+inTio9wMT5wc2ioO2bpugOjy9w/7vxfwvfiR4F899MNQNm6X+
1V3yefaI/v+0Zz+WuoTsxelt+nnF4J6V/Jv06TMF5wZpPcVOJwrOnSc4V35H
9ETzi2+uvK5kB83jvSS4Fu8p8c9kx8fk9+9K/LN8Tr6XHzNL9j/ntobuU3GA
8jquE3uVfiF8f3KX5zM84/18QOfV0Gpdwvw4jYceob879sPm6hG+0a3yOMk+
4eflPWLvwHXql+En8r6avgr2a5PQjiezwv3GI8VeFl/uUnkeHR3J1NAuZxfp
/jcK95/8SM9X+SD0S0/pl45/qPgF/8Pef+oc8B/QMcH+Ee9kPbBO+Lyt3yxx
a/oaOfwvHhSdMvgq6apRp9wn/EPq+MBT9GPKrp1zHNZ7pl+HHSYPxzoIfwmc
Ie6L/XV6dMbLcXV+qeN7ml/IeeDPu7yf1cFH4f/BK8t7g7+O9wmep+3gX+ny
f5HDo8z5cRZPdryUyOEXv4tcHDSr4QdGLl7ZHg7yHAqXHyyGCu6lXQX38mFL
Bnzv7KHN2oxjJof1aaquvHzjvGq7X4r/VGTV/cDTlgc+UfV56bqfCe5DMuZu
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
8BM+ks9rX9o+zdntuBl8+n9G0Vn6
    "], {{0, 164}, {223, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{223, 164},
  PlotRange->{{0, 223}, {0, 164}}]], "Output",
 CellChangeTimes->{
  3.6818203737027764`*^9, 3.6818204685511665`*^9, 3.6818205611197305`*^9, {
   3.681821211230321*^9, 3.681821219240321*^9}, {3.682761652287927*^9, 
   3.682761671053486*^9}, 3.682761748725534*^9, {3.6827618420070333`*^9, 
   3.682761857910368*^9}, 3.6827619876869335`*^9, 3.6827632369142227`*^9, 
   3.682783149629821*^9, 3.6828501250407157`*^9, 3.682850859618757*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"AllEqual", "[", 
                 RowBox[{"Thread", "[", 
                  RowBox[{"Unevaluated", "[", 
                   RowBox[{"ImageDimensions", "[", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}], "]"}], "]"}], "]"}], "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.0010016`4.151209313698346","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 79, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      $CellContext`AllEqual[
       Thread[
        Unevaluated[
         ImageDimensions[{$CellContext`$ci, $CellContext`$di, \
$CellContext`$img}]]]]], "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> 
    HoldForm[True], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
    "AbsoluteTimeUsed" -> Quantity[0.0010016`4.151209313698346, "Seconds"], 
    "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
    Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6818203737027764`*^9, 3.6818204685511665`*^9, 3.6818205611197305`*^9, {
   3.681821211230321*^9, 3.681821219240321*^9}, {3.682761652287927*^9, 
   3.682761671053486*^9}, 3.682761748725534*^9, {3.6827618420070333`*^9, 
   3.682761857910368*^9}, 3.6827619876869335`*^9, 3.6827632369142227`*^9, 
   3.682783149629821*^9, 3.6828501250407157`*^9, 3.6828508596578054`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"$sfile", "=", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "~", "FileNameJoin", "~", 
   "\"\<data\\\\relief-ps0.005\\\\afterFuseScene0.005000.bin\>\""}]}], "\
\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VerificationTest", "@", 
   RowBox[{"FileExistsQ", "[", "$sfile", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "the", " ", "following", " ", "might", " ", "takke", " ", "a", " ", 
     "while", " ", "and", " ", "or", " ", "crash", " ", "the", " ", 
     "system"}], ",", " ", 
    RowBox[{"look", " ", "for", " ", 
     RowBox[{"(", "hidden", ")"}], " ", "assertion", " ", "error", " ", 
     "message", " ", "boxes", " ", "from", " ", "the", " ", "program"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InfiniTAM`Private`deserializeScene", "[", 
   RowBox[{"$scene", ",", "$sfile"}], "]"}], "//", "AssertNull"}]}], "Input",
 CellChangeTimes->{{3.681821456770869*^9, 3.681821487592347*^9}, {
  3.681821573682804*^9, 3.6818216469262567`*^9}, {3.681821678814064*^9, 
  3.681821680969742*^9}, {3.6827633453919554`*^9, 3.682763362986467*^9}, {
  3.682783182334649*^9, 3.682783183183739*^9}}],

Cell[BoxData["\<\"J:\\\\Masterarbeit\\\\Implementation\\\\InfiniTAM5\\\\data\\\
\\relief-ps0.005\\\\afterFuseScene0.005000.bin\"\>"], "Output",
 CellChangeTimes->{
  3.6818216710002947`*^9, {3.6827616523660417`*^9, 3.6827616711003623`*^9}, 
   3.682761748788037*^9, {3.682761842069536*^9, 3.682761857988497*^9}, 
   3.6827619877650795`*^9, 3.682763311783059*^9, 3.6827633511734266`*^9, {
   3.6827831590605955`*^9, 3.6827831846735687`*^9}, 3.682850125123819*^9, 
   3.6828508596868415`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"FileExistsQ", "[", "$sfile", "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.0010016`4.151209313698349","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 80, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      FileExistsQ[$CellContext`$sfile]], "ExpectedOutput" -> HoldForm[True], 
    "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
    "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.0010016`4.151209313698349, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6818216710002947`*^9, {3.6827616523660417`*^9, 3.6827616711003623`*^9}, 
   3.682761748788037*^9, {3.682761842069536*^9, 3.682761857988497*^9}, 
   3.6827619877650795`*^9, 3.682763311783059*^9, 3.6827633511734266`*^9, {
   3.6827831590605955`*^9, 3.6827831846735687`*^9}, 3.682850125123819*^9, 
   3.682850859739908*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VerificationTest", "[", 
  RowBox[{
   RowBox[{"InfiniTAM`Private`countVoxelBlocks", "[", "$scene", "]"}], ",", 
   "256"}], "]"}]], "Input",
 CellChangeTimes->{{3.682783195692324*^9, 3.6827832067521334`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{
                "InfiniTAM`Private`countVoxelBlocks", "[", "$scene", "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["256",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["256",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.001001`4.15094907531131","\"s\"","seconds","\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 81, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      InfiniTAM`Private`countVoxelBlocks[$CellContext`$scene]], 
    "ExpectedOutput" -> HoldForm[256], "ActualOutput" -> HoldForm[256], 
    "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.001001`4.15094907531131, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6827831669864883`*^9, 3.6827832070615187`*^9}, 
   3.6828501263003087`*^9, 3.6828508608212576`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"$oldc", "=", 
  RowBox[{
  "InfiniTAM`Private`countVoxelBlocks", "[", "$scene", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"InfiniTAM`Private`putVoxelBlock", "[", 
  RowBox[{"$scene", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1000", "~", "Table", "~", "3"}], ",", 
     RowBox[{"InfiniTAMExampleVoxelData", "[", "]"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$newc", "=", 
  RowBox[{
  "InfiniTAM`Private`countVoxelBlocks", "[", "$scene", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"VerificationTest", "[", 
  RowBox[{
   RowBox[{"$oldc", "+", "1"}], ",", "$newc"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6828506750703683`*^9, 3.682850741392164*^9}}],

Cell[BoxData["257"], "Output",
 CellChangeTimes->{3.682850742019949*^9, 3.682850866393214*^9, 
  3.6828509231210327`*^9}],

Cell[BoxData[
 TemplateBox[{
  "LinkObject","linkd",
   "\"Unable to communicate with closed link \
\\!\\(\\*RowBox[{\\\"LinkObject\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"J:\\\\\\\\\\\\\\\\Masterarbeit\\\\\\\\\\\\\
\\\\Implementation\\\\\\\\\\\\\\\\InfiniTAM5\\\\\\\\\\\\\\\\x64\\\\\\\\\\\\\\\
\\Debug\\\\\\\\\\\\\\\\InfiniTAM5.exe\\\\\\\\\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"637644\\\", \\\",\\\", \\\"10\\\"}], \\\"]\\\"}]\\).\"",2,692,103,
   25641959303907041279,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.682850931315262*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.682850742019949*^9, 3.682850866393214*^9, 
  3.682850931316263*^9}],

Cell[BoxData[
 TemplateBox[{
  "LinkObject","linkn",
   "\"Argument \\!\\(\\*RowBox[{\\\"LinkObject\\\", \\\"[\\\", RowBox[{\\\"\\\
\\\\\"\\\\\\\\\\\\\\\"J:\\\\\\\\\\\\\\\\Masterarbeit\\\\\\\\\\\\\\\\\
Implementation\\\\\\\\\\\\\\\\InfiniTAM5\\\\\\\\\\\\\\\\x64\\\\\\\\\\\\\\\\\
Debug\\\\\\\\\\\\\\\\InfiniTAM5.exe\\\\\\\\\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"637644\\\", \\\",\\\", \\\"10\\\"}], \\\"]\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"LinkWrite\\\", \\\"[\\\", RowBox[{RowBox[{\\\"LinkObject\
\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"J:\\\\\\\\\\\\\\\\Masterarbeit\\\\\\\\\\\\\
\\\\Implementation\\\\\\\\\\\\\\\\InfiniTAM5\\\\\\\\\\\\\\\\x64\\\\\\\\\\\\\\\
\\Debug\\\\\\\\\\\\\\\\InfiniTAM5.exe\\\\\\\\\\\\\\\"\\\\\\\"\\\", \\\",\\\", \
\\\"637644\\\", \\\",\\\", \\\"10\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"CallPacket\\\", \\\"[\\\", RowBox[{\\\"4\\\", \\\",\\\", RowBox[{\
\\\"{\\\", \\\"0\\\", \\\"}\\\"}]}], \\\"]\\\"}]}], \\\"]\\\"}]\\) has an \
invalid LinkObject number; the link may be closed.\"",2,693,104,
   25641959303907041279,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.68285093132928*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.682850742019949*^9, 3.682850866393214*^9, 
  3.682850931330281*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "TestFailureIcon"],
             ImageSizeCache->{12., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Failure\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "TestFailureIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Failure\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"$oldc", "+", "1"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["$Failed",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["258",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.0010017`4.151252671606023","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 84, "TestID" -> None, "Outcome" -> "Failure", "Input" -> 
    HoldForm[$CellContext`$oldc + 1], "ExpectedOutput" -> HoldForm[$Failed], 
    "ActualOutput" -> HoldForm[258], "ExpectedMessages" -> {}, 
    "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.0010017`4.151252671606023, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.682850742019949*^9, 3.682850866393214*^9, 
  3.682850931360318*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VerificationTest", "[", 
  RowBox[{
   RowBox[{"First", "@", 
    RowBox[{"InfiniTAM`Private`getVoxelBlock", "[", 
     RowBox[{"$scene", ",", "$newc"}], "]"}]}], ",", 
   RowBox[{"1000", "~", "Table", "~", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6828508818254795`*^9, 3.682850909449966*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"First", "[", 
                 RowBox[{"InfiniTAM`Private`getVoxelBlock", "[", 
                  RowBox[{"$scene", ",", 
                   RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}]}], 
                  "]"}], "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"{", 
                 RowBox[{"1000", ",", "1000", ",", "1000"}], "}"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"{", 
                 RowBox[{"1000", ",", "1000", ",", "1000"}], "}"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.0450715`5.8044170096611785","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 83, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      First[
       InfiniTAM`Private`getVoxelBlock[$CellContext`$scene, \
$CellContext`$newc]]], "ExpectedOutput" -> HoldForm[{1000, 1000, 1000}], 
    "ActualOutput" -> HoldForm[{1000, 1000, 1000}], "ExpectedMessages" -> {}, 
    "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.0450715`5.8044170096611785, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.682850897092559*^9, 3.6828509099155474`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{869, 1021},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 132, 1, 144, "Title"],
Cell[CellGroupData[{
Cell[737, 27, 1918, 41, 183, "Input"],
Cell[2658, 70, 1052, 15, 30, "Output"],
Cell[3713, 87, 13382, 278, 73, "Output"],
Cell[17098, 367, 4931, 121, 430, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22066, 493, 315, 8, 33, "Input"],
Cell[22384, 503, 9158, 248, 72, "Output"]
}, Open  ]],
Cell[31557, 754, 232, 6, 30, "Input"],
Cell[CellGroupData[{
Cell[31814, 764, 274, 5, 50, "Input"],
Cell[32091, 771, 8741, 239, 72, "Output"],
Cell[40835, 1012, 8782, 240, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49654, 1257, 298, 6, 33, "Input"],
Cell[49955, 1265, 8253, 232, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58245, 1502, 231, 5, 33, "Input"],
Cell[58479, 1509, 8219, 232, 72, "Output"]
}, Open  ]],
Cell[66713, 1744, 204, 5, 30, "Input"],
Cell[CellGroupData[{
Cell[66942, 1753, 1568, 37, 230, "Input"],
Cell[68513, 1792, 9212, 251, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77762, 2048, 234, 5, 33, "Input"],
Cell[77999, 2055, 8273, 233, 72, "Output"]
}, Open  ]],
Cell[86287, 2291, 747, 18, 55, "Input"],
Cell[CellGroupData[{
Cell[87059, 2313, 817, 21, 96, "Input"],
Cell[87879, 2336, 79489, 1307, 179, "Output"],
Cell[167371, 3645, 95378, 1567, 179, "Output"],
Cell[262752, 5214, 8819, 245, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271608, 5464, 1205, 26, 130, "Input"],
Cell[272816, 5492, 490, 7, 30, "Output"],
Cell[273309, 5501, 8375, 235, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281721, 5741, 233, 5, 33, "Input"],
Cell[281957, 5748, 8188, 231, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290182, 5984, 752, 19, 139, "Input"],
Cell[290937, 6005, 121, 2, 30, "Output"],
Cell[291061, 6009, 576, 11, 41, "Message"],
Cell[291640, 6022, 123, 2, 30, "Output"],
Cell[291766, 6026, 1157, 19, 59, "Message"],
Cell[292926, 6047, 123, 2, 30, "Output"],
Cell[293052, 6051, 8098, 230, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301187, 6286, 324, 7, 33, "Input"],
Cell[301514, 6295, 8561, 240, 72, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

